<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document SYSTEM "../finkdoc.dtd">
<document filename="index" lang="pt">
  <title>Guia do usuário do Fink</title>
  <shorttitle>Guia do usuário</shorttitle>
  <cvsid>$Id: uguide.pt.xml,v 1.4 2019/01/19 10:11:12 nieder Exp $</cvsid>

  <preface>
    <p>Este documento provê uma visão geral de todas as características do
    Fink. Os documentos a seguir podem oferecer uma visão mais ampla: <link
    url="/doc/install/index.php">Instalação</link>,
    <link url="/doc/usage/index.php">Formas de
    uso</link> e o arquivo LeiaMe.rtf (incluído na imagem de disco da
    distribuição de binários).  Verifique também a <link
    url="/doc/">seção de documentação</link> do site;
    ela contém alguns outros documentos úteis.</p>

    <p>Bem-vindo ao Guia do usuário do Fink.  Este guia cobre procedimentos
    para a instalação inicial e atualizações subsequentes de tanto a
    distribuição de binários quanto a distribuição de códigos fontes.
    Instalação e manutenção de pacotes também são discutidas.</p>
  </preface>

  <chapter filename="intro">
    <title>Introdução</title>
    <shorttitle>Introdução</shorttitle>

    <section name="what">
      <title>O que é o Fink?</title>

      <p>O Fink é a uma distribuição de software Unix de código aberto para Mac
      OS X e Darwin, trazendo uma gama variada de softwares livres, sejam de
      linha de comando ou gráficos, desenvolvidos para Linux e sistemas
      operacionais similares, diretamente para seu Mac.</p>
    </section>

    <section name="req">
      <title>Requisitos</title>

      <p>Você precisará de:</p>

      <ul>
        <li>
          <p>Um sistema Mac OS X instalado, versão 10.4 ou mais recente, ou
          versões do Darwin equivalentes. Versões anteriores <em>não</em> irão
          funcionar. Veja abaixo mais informações sobre os sistemas
          suportados.</p>
        </li>

        <li>
          <p>Acesso à Internet. Tanto os pacotes com binários quanto os com
          códigos fontes são baixados através da Internet.</p>
        </li>
      </ul>

      <p>Se você pretende usar a distribuição de códigos fontes (veja abaixo),
      você também precisará de:</p>

      <ul>
        <li>
          <p>Ferramentas de desenvolvimento. No Mac OS X, instale o pacote
          XcodeTools.mpkg do DVD de instalação ou faça o <link
          url="http://connect.apple.com">download</link> da versão mais
          recente--o que é mais recomendável, já que versões mais recentes
          geralmente corrigem erros (ainda que algumas vezes elas provoquem
          erros).  Note que as ferramentas precisam estar de acordo com a sua
          versão do Mac OS X.</p>

          <p>É uma boa idéia ter o XCode instalado mesmo que você não pretenda
          montar pacotes a partir do código fonte.  Alguns dos programas
          instalados pelo pacote são, na verdade, ferramentas de linha de
          comando com propósito geral. Alguns pacotes podem precisar delas para
          que possam ser executados.</p>
        </li>

        <li>
          <p>Paciência. Compilar vários pacotes grandes leva tempo: horas, ou
          até mesmo dias.</p>
        </li>
      </ul>
    </section>

    <section name="supported-os">
      <title>Sistemas suportados</title>

      <p><em>Mac OS X 10.5</em> é a plataforma de vanguarda e é considerada
      como sendo <quote>completamente suportada e testada</quote> ainda que,
      por ser um sistema operacional mais recente, ainda haja algumas questões
      a resolver. A maior parte dos desenvolvedores usa esta versão e aqueles
      que estão usando a 10.4 possuem usuários na 10.5 para testar seu
      trabalho.</p>

      <p><em>Mac OS X 10.4</em> é considerado como sendo <quote>completamente
      suportado e testado</quote> apesar de ainda haver alguns problemas de
      compilação espúrios em alguns pacotes. Muitos dos desenvolvedores usa
      esta versão e aqueles que não a usam possuem usuários 10.4 para testar
      seu trabalho.</p>
      
    </section>

    <section name="src-vs-bin">
      <title>Código fonte vs. binário</title>

      <p>Software é escrito ("desenvolvido") em linguagens de programação
      legíveis a seres humanos; este formato é chamado "código fonte". Antes
      que um computador possa rodar um programa, ele precisa ser transformado
      em instruções de código de máquina de baixo nível que não são legíveis
      para (a maioria dos) seres humanos. Este processo é denominado
      "compilação" e o programa resultante é denominado "executável" ou
      "binário".</p>

      <p>Quando você compra software comercial, você não chega a ver o código
      fonte - as empresas o consideram um segredo industrial. Você obtém
      somente o executável que está pronto para ser executado, o que significa
      que você não pode modificar o programa ou mesmo descobrir o que ele de
      fato faz quando é executado.</p>

      <p>Isto não acontece com software de <link
      url="http://www.opensource.org/">código aberto</link>. Como o próprio
      nome indica, o código fonte é aberto para qualquer um ver e modificar. De
      fato, a maior parte do software de código aberto somente é distribuída
      por seus autores como código fonte e você precisa compilá-lo no seu
      computador para obter um programa que possa ser executado.</p>

      <p>O Fink permite que você escolha entre os dois modelos. A "distribuição
      de código fonte" irá baixar o código fonte original, adaptá-lo para o Mac
      OS X e a política do Fink, e compilá-lo no seu computador. O processo é
      completamente automatizado mas leva algum tempo. Por outro lado, a
      "distribuição de binários" irá baixar pacotes pré-compilados do site do
      Fink e instalá-los, economizando o tempo de compilação. Na verdade, é
      possível misturar os dois modelos à vontade. O restante deste manual irá
      mostrar-lhe como.</p>
    </section>
  </chapter>

  <chapter filename="install">
    <title>Instalação inicial</title>
    <shorttitle>Instalação</shorttitle>

    <preface>
      <p>Durante a instalação inicial, um sistema básico contendo as
      ferramentas de gerenciamento de pacotes é instalado em sua máquina.
      Depois disso você precisa configurar seu ambiente do shell para usar o
      software instalado pelo Fink. Você só precisa fazer isso uma única vez;
      você pode atualizar qualquer instalação do Fink in loco, sem que seja
      necessário reinstalá-lo. Este procedimento é coberto no <xref
      chapter="upgrade">capítulo Atualizando o Fink</xref>.</p>

      <p>Uma vez que você possua as ferramentas de gerenciamento de pacotes
      instaladas, você pode usá-las para instalar mais softwares. Este
      procedimento é descrito no <xref chapter="packages">capítulo Instalando
      pacotes</xref>.</p>
    </preface>

    <section name="bin">
      <title>Instalando a distribuição de binários</title>

      <p>A distribuição de binários vem através de um pacote de instalação para
      o Mac OS X (.pkg) que por sua vez está dentro de uma imagem de disco
      (.dmg). Depois de baixar a imagem de disco da <link
      url="/download/bindist.php">página de
      downloads</link> (talvez você precise usar os comandos "Salvar como..."
      ou "Salvar no disco" no navegador), dê um duplo clique para montá-la.
      Abra o ícone do disco "Fink 0.x.x Installer" que aparece na sua área de
      trabalho (ou onde quer que você o haja baixado) depois que o Disk Utility
      tenha verificado o arquivo.  Dentro você encontrará alguma documentação e
      o pacote de instalação. Dê um duplo clique no pacote de instalação e siga
      as instruções na tela.</p>

      <p>Uma senha de administrador será solicitada e alguns textos serão
      exibidos. Por favor, leia-os - eles podem estar mais atualizados do que
      este guia do usuário. Quando o instalador solicitar-lhe um drive para
      instalação, tenha certeza de escolher o seu volume do sistema (aquele no
      qual você instalou o Mac OS X). Se você escolher o volume errado, a
      instalação irá prosseguir mas o Fink não funcionará mais tarde. Quando o
      instalador tiver terminado, prossiga à seção <xref
      section="setup">Configurando seu ambiente</xref>.</p>
    </section>

    <section name="src">
      <title>Instalando a distribuição de códigos fontes</title>

      <p>A distribuição de códigos fontes é disponibilizada como um tarball
      padrão Unix (.tar.gz). Ela contém somente o gerenciador de pacotes
      <code>fink</code> <!--e as descrições de pacotes--> e irá baixar os
      códigos fontes dos pacotes quando necessário. Você pode obter esta
      distribuição na <link
      url="/download/srcdist.php">página de
      downloads</link>. Versões mais antigas do StuffIt Expander são
      problemáticas para lidar com nomes longos de arquivos então, se você
      tiver algum problema, você precisará remover a pasta que ele gera e
      seguir as seguintes instruções para linha de comando.</p>

      <p>A versão em código fonte precisa ser instalada a partir da linha de
      comando, então abra o Terminal.app e posicione-se no diretório onde você
      colocou o arquivo <!--fink-0.x.x-full.tar.gz (put back when
      appropriate--> <filename>fink-0.27.x.tar.gz</filename>. Talvez seu
      navegador Web tenha extraído parcialmente o arquivo; neste caso você terá
      o arquivo <filename>fink-0.27.x.tar</filename> no seu diretório de
      download e deverá pular o primeiro comando abaixo. Os comandos abaixo
      fazem a extração do arquivo:</p>

      <!--<codeblock>tar -xzf fink-0.x.x-full.tar.gz</codeblock>-->

      <codeblock>gunzip fink-0.27.x.tar.gz
tar -xf fink-0.27.x.tar</codeblock>

      <p>Isto cria um diretório com o mesmo nome do arquivo. Continuaremos
      usando <!--<code>fink-0.x.x-full</code>-->
      <filename>fink-0.27.x</filename> aqui, mas este nome pode mudar conforme
      a versão que você tenha baixado.  Agora posicione-se nesse diretório e
      execute o script de carga inicial:</p>

      <codeblock>cd fink-0.27.x
./bootstrap</codeblock>

      <p>O script fará algumas verificações no seu sistema e usar o sudo para
      se tornar root, o que fará com que sua senha seja solicitada. Depois
      disso, o script lhe perguntará o diretório de instalação. A menos que
      você possua uma boa razão, use o diretório padrão
      <filename>/sw</filename>.  Somente essa escolha de diretório lhe
      permitirá baixar posteriormente pacotes binários. Além disso, todos os
      exemplos usam esse diretório; esteja certo de fazer a substituição
      apropriada caso você use um diretório diferente.</p>

      <p>A seguir vem a configuração do Fink. Serão solicitadas informações
      como configurações de proxy e espelhos, e qual o nível de detalhe de
      mensagens que você deseja. Se você não entender uma pergunta, tecle
      Return para aceitar a escolha padrão. Você poderá executar novamente este
      procedimento mais tarde através do comando <code>fink
      configure</code>.</p>

      <p>Quando o script de carga inicial tiver todas as informações de que
      necessita, ele irá começar a baixar o código fonte do sistema básico e
      compilá-lo. Nenhuma interação será necessária durante este procedimento.
      Não se preocupe caso veja alguns pacotes serem compilados duas vezes.
      Isto é necessário porque, para compilar um pacote binário que pertença ao
      próprio gerenciador de pacotes, é necessário primeiro ter o gerenciador
      de pacotes disponível.</p>

      <p>Quando a carga inicial tiver terminado, proceda à seção <xref
      section="setup">Configurando seu ambiente</xref>.</p>
    </section>

    <section name="setup">
      <title>Configurando seu ambiente</title>

      <p>Para usar os softwares instalados na hierarquia de diretórios do Fink,
      incluindo os programas de gerenciamento de pacotes em si, você precisa
      ajustar sua variável de ambiente PATH (e algumas outras) de forma
      apropriada. As versões atuais do Fink fazem isto automaticamente e em
      geral você só precisará abrir uma nova janela do Terminal.app para
      garantir que estas configurações sejam aplicadas. Entretanto, em alguns
      casos você precisará efetuar o procedimento manualmente.</p>

      <p>Na maior parte dos casos, você pode fazê-lo através da execução do
      comando</p>

      <codeblock>/sw/bin/pathsetup.sh</codeblock>

      <p>em uma janela de terminal.</p>

      <p>Observe que em algumas versões antigas do Fink o programa era
      denominado <filename>pathsetup.command</filename>, o qual poderia ser
      executado através de <code>open /sw/bin/pathsetup.command</code>.</p>

      <p>Entretanto, se isto não funcionar por algum motivo, você pode
      configurá-lo manualmente. Isto dependerá do shell que você estiver
      usando. Você pode determinar qual o shell que esteja usando abrindo um
      terminal e executando o seguinte comando:</p>

      <codeblock>echo $SHELL</codeblock>

      <p>Se a resposta for "csh" ou "tcsh", você está usando o C shell. Se for
      bash, zsh, sh ou algo similar, você está usando uma variante do Bourne
      shell.</p>

      <ul>
        <li>
          <p><strong>Bourne Shell</strong> (padrão no Mac OS X 10.3 e mais
          recentes)</p>

          <p>Se você usa um shell no estilo Bourne (por exemplo, sh, bash,
          zsh), adicione as seguintes linhas ao arquivo <code>.profile</code>
          no seu diretório home (ou, se você tiver um arquivo
          <code>.bash_profile</code> existente, use esse no lugar do
          <code>.profile</code>):</p>

          <codeblock>. /sw/bin/init.sh</codeblock>

          <p>Se você não sabe como adicionar a linha, execute estes
          comandos:</p>

          <codeblock>cd
pico .profile</codeblock>

          <p>Você está agora em um editor de textos e pode começar a digitar a
          linha <code>. /sw/bin/init.sh</code>. Não há problema caso o editor
          indique que seja um novo arquivo. Tenha certeza de haver teclado
          Return pelo menos uma vez após digitar a linha e tecle Control-O,
          Return, Control-X para sair do editor.</p>
        </li>

        <li>
          <p><strong>C Shell</strong> (padrão no Mac OS X 10.2 e versões
          anteriores)</p>

          <p>Se você usa tcsh, adicione a linha seguinte ao arquivo
          <filename>.cshrc</filename> no seu diretório home:</p>

          <codeblock>source /sw/bin/init.csh</codeblock>

          <p>Se você não sabe como adicionar a linha, execute estes
          comandos:</p>

          <codeblock>cd
pico .cshrc</codeblock>

          <p>Você está agora em um editor de textos e pode começar a digitar a
          linha <code>. /sw/bin/init.sh</code>. Não há problema caso o editor
          indique que seja um novo arquivo. Tenha certeza de haver teclado
          Return pelo menos uma vez após digitar a linha e tecle Control-O,
          Return, Control-X para sair do editor.</p>

          <p>Existem algumas situações comuns em que você poderá precisar
          editar arquivos adicionais:</p>

          <ol>
            <li>
              <p>Você possui um arquivo <code>~/.tcshrc</code>.</p>

              <p>Algumas vezes esse arquivo é criado por aplicações de
              terceiros ou talvez você mesmo o tenha criado. De qualquer forma,
              o que acontece é que <code>~/.tcshrc</code> será lido e
              <code>~/.cshrc</code> será ignorado. O procedimento recomendado é
              editar o arquivo <code>~/.tcshrc</code> de forma similar à usada
              para editar o arquivo <code>~/.cshrc</code> conforme acima e
              então adicionar a seguinte linha no final do arquivo:</p>

              <codeblock>source ~/.cshrc</codeblock>

              <p>Desta forma, se você precisar remover o arquivo
              <code>~/.tcshrc</code>, você poderá rodar o Fink mesmo assim.</p>
            </li>

            <li>
              <p>Você seguiu as instruções contidas em
              <code>/usr/share/tcsh/examples/README</code>.</p>

              <p>Essas instruções o informam a criar os arquivos
              <code>~/.tcshrc</code> e <code>~/.login</code>. O problema nesse
              caso é com o arquivo <code>~/.login</code>, o qual é executado
              após <code>~/.tcshrc</code>, e inclui o arquivo
              <code>/usr/share/tcsh/examples/login</code>. Este último contém
              uma linha que sobrescreve sua configuração anterior da variável
              PATH. O que você precisa fazer nesse caso é criar o arquivo
              <code>~/Library/init/tcsh/path</code>:</p>

              <codeblock>mkdir -p ~/Library/init/tcsh
pico ~/Library/init/tcsh/path</codeblock>

              <p>e inserir a linha:</p>

              <codeblock>source ~/.cshrc</codeblock>

              <p>nele. Você também precisa modificar seu
              <code>.tcshrc</code> como no item 1 acima para garantir que sua
              variável PATH seja definida corretamente para situações em que
              <code>~/.login</code> não seja lido.</p>
            </li>
          </ol>

          <p>Editar <code>.cshrc</code> (e outros arquivos de inicialização)
          afetará somente novos shells (i.e. novas janelas de Terminal),
          portanto você também precisará executar esse comando em todas as
          janelas de Terminal que você tenha aberto antes de editar o arquivo.
          Você também precisará executar <code>rehash</code> porque o tcsh faz
          um cache interno da lista de comandos disponíveis.</p>
        </li>
      </ul>

      <p>Observe que os scripts <filename>init.sh</filename> e
      <filename>init.csh</filename> também adicionam
      <filename>/usr/X11R6/bin</filename> e <filename>/usr/X11R6/man</filename>
      à variável PATH e portanto você poderá usar o X11 quando tiver sido
      instalado. Os pacotes do Fink podem adicionar suas próprias
      configurações, como por exemplo a variável de ambiente QTDIR que é
      adicionada pelo pacote qt.</p>

      <p>Uma vez que seu ambiente tenha sido configurado, <!-- current as of
      11/16/2007--> você precisará obter descrições de pacotes conforme o
      capítulo <xref chapter="upgrade">Atualizando o Fink</xref>, na seção
      <em>Atualizando a distribuição de códigos fontes</em>, e então proceder
      ao capítulo <xref chapter="packages">Instalando pacotes</xref> para
      verificar como efetivamente instalar pacotes úteis usando as várias
      ferramentas de gerenciamento de pacotes que são parte do Fink.</p>
    </section>
  </chapter>

  <chapter filename="packages">
    <title>Instalando pacotes</title>
    <shorttitle>Pacotes</shorttitle>

    <preface>
      <p>Agora que você tem algo que pode ser chamado de uma instalação do
      Fink, este capítulo mostra como instalar de fato os pacotes de software
      que você deseja. Antes de explicarmos como instalar pacotes usando tanto
      as distribuições de binários quanto as de códigos fontes, listamos alguns
      itens que são aplicáveis a ambas as distribuições.</p>
    </preface>

    <section name="bin-dselect">
      <title>Instalando pacotes binários com o dselect</title>

      <p>O <code>dselect</code> é um programa que lhe permite visualizar a
      lista de pacotes disponíveis e selecionar quais você quer que sejam
      instalados. Ele é executado dentro de uma janela de Terminal, ocupando-a
      completamente, e usa uma navegação simples via teclado. Como outras
      ferramentas de gerenciamento de pacotes, o <code>deselect</code> requer
      privilégios administrativos, portanto você precisará usar o sudo a partir
      de uma conta com privilégios administrativos:</p>

      <codeblock>sudo dselect</codeblock>

      <p><em>Observação:</em> O <code>dselect</code> possui algumas
      dificuldades conhecidas quando executado dentro do aplicativo Mac OS X
      Terminal. Você precisa executar os seguintes comandos antes de usá-lo ou
      colocá-los no arquivo de inicialização apropriado (e.g.
      <code>.cshrc</code> / <code>.profile</code>):</p>

      <codeblock>setenv TERM xterm-color</codeblock>

      <p>usuários do bash:</p>

      <codeblock>export TERM=xterm-color</codeblock>

      <p>usuários do tcsh:</p>

      <p>O menu principal possui várias opções:</p>

      <ul>
        <li>
          <p><em>[A]cesso</em> - configura o método de acesso a rede que deve
          ser usado. <em>Você não precisa desta opção</em> pois o Fink
          pré-configura tudo para você. Na verdade, você deveria evitar esta
          opção já que ela pode sobrescrever a configuração padrão com uma
          outra que talvez não funcione.</p>
        </li>

        <li>
          <p><em>[U]pdate</em> - baixa a lista de pacotes disponíveis a partir
          do site do Fink. Esta opção não instala ou atualiza os pacotes em si,
          mas apenas atualiza a listagem usada pelo navegador de pacotes.
          Você precisa executar esta opção ao menos uma vez após instalar o
          Fink.</p>
        </li>

        <li>
          <p><em>[S]eleciona</em> - apresenta a listagem de pacotes, permitindo
          que você (de-)selecione os pacotes que você deseja no seu sistema.
          Mais informações adiante.</p>
        </li>

        <li>
          <p><em>[I]nstalar</em> - é aqui que as coisas realmente acontecem.
          As opções acima afetam apenas a listagem de pacotes e o banco de
          dados de status. Esta opção efetivamente baixa e instala os pacotes
          que você solicitou, bem como remove os pacotes que você tenha
          de-selecionado no navegador de pacotes.</p>
        </li>

        <li>
          <p><em>[C]onfigura</em> e <em>[R]emover</em> - estas opções são
          relíquias dos tempos anteriores ao apt. Você não precisa delas, ainda
          que elas não farão mal algum.</p>
        </li>

        <li>
          <p><em>[Q]Sair</em> - sai do dselect.</p>
        </li>
      </ul>

      <p>Você irá gastar a maior parte do seu tempo no dselect dentro do
      navegador de pacotes, acessível a partir da opção "[S]eleciona" no menu.
      Antes de o deselect exibir a listagem dos pacotes, ele lhe apresentará
      uma tela de ajuda introdutória. Você pode pressionar 'k' para obter uma
      lista completa com os comandos de teclado ou teclar Espaço para ir à
      listagem de pacotes.</p>

      <p>Você pode se mover através da lista usando as setas para cima e para
      baixo. Seleções são feitas com '+' e '-'. Quando você seleciona um pacote
      que precisa de outros pacotes, o dselect irá mostrar-lhe uma sub-lista com
      os pacotes afetados. Na maior parte dos casos você pode simplesmente
      teclar Return para aceitar as escolhas do dselect. Você também pode fazer
      ajustes na sub-lista (por exemplo, escolher outra alternativa para uma
      dependência de pacote virtual) ou teclar 'R' (i.e. Shift-R) para retornar
      ao estado anterior. Você pode teclar Return para sair tanto das sub-listas
      quanto da listagem principal de pacotes. Quando você estiver pronto com
      suas seleções, saia da lista principal e use a opção de menu "[I]nstalar"
      para efetivamente instalar os pacotes.</p>
    </section>

    <section name="bin-apt">
      <title>Instalando pacotes binários com o apt-get</title>

      <p>O <code>dselect</code> não faz por si próprio o download dos pacotes.
      Em vez disso, ele executa o apt para fazer o trabalho sujo. Se você
      prefere uma interface que seja puramente linha de comando, você pode
      acessar as funções do apt diretamente através do comando
      <code>apt-get</code>.</p>

      <p>Assim como no caso do dselect, você precisa primeiro baixar a listagem
      corrente dos pacotes disponíveis através do seguinte comando:</p>

      <codeblock>sudo apt-get update</codeblock>

      <p>Da mesma forma como na opção "[U]pdate" do dselect, o comando acima não
      atualiza arquivos no seu computador mas sim apenas a lista de pacotes
      disponíveis para o apt. Para instalar um pacote, você só precisa fornecer
      o nome ao apt-get como segue:</p>

      <codeblock>sudo apt-get install lynx</codeblock>

      <p>Se o apt-get determina que para instalar um pacote são necessários
      outros pacotes, ele irá mostrar-lhe a lista e pedir confirmação. Ele
      então baixa e instala os pacotes necessários. Remover pacotes é
      igualmente fácil:</p>

      <codeblock>sudo apt-get remove lynx</codeblock>

      <p><!-- [FIXME: using apt-cache to search for packages] --></p>
    </section>

    <section name="bin-exceptions">
      <title>Instalando pacotes dependentes que não estão disponíveis na
      distribuição de binários</title>

      <p>Às vezes, durante uma instalação de binários, você pode ser informado
      de que uma dependência não pode ser instalada:</p>

      <codeblock>Os seguintes pacotes têm dependências desencontradas:
foo: Depende: bar (&gt;= version) mas não é instalável
E: Pacotes quebrados</codeblock>

      <p>O que aconteceu é que o pacote que você está tentando instalar depende
      de um outro pacote que não pode ser distribuído como um binário devido a
      restrições de licenciamento. Você precisa instalar a dependência através
      do código fonte (veja a próxima seção).</p>
    </section>

    <section name="src">
      <title>Instalando pacotes binários e com código fonte através do
      fink</title>

      <p>A ferramenta <code>fink</code> permite que você instale pacotes que
      ainda não estejam disponíveis na <xref chapter="intro"
      section="src-vs-bin">distribuição de binários</xref>.</p>

      <p>Em primeiro lugar, você precisará de uma versão apropriada do
      Developer Tools para o seu sistema. A última versão está disponível para
      download gratuito após registro em <link
      url="http://connect.apple.com">http://connect.apple.com</link>.</p>

      <p>Para obter uma lista dos pacotes que estão disponíveis para instalação
      a partir do código fonte, pergunte à ferramenta <code>fink</code>:</p>

      <codeblock>fink list</codeblock>

      <p>A primeira coluna lista o status de instalação (branco caso não esteja
      instalado, <code>i</code> para instalado, <code>(i)</code> para instalado
      mas não a versão mais recente), seguido pelo nome do pacote, a versão
      mais recente, e uma descrição curta. Você pode solicitar mais informações
      sobre um pacote específico usando o comando "describe" ("info" é um
      apelido para esse comando):</p>

      <codeblock>fink describe xmms</codeblock>

      <p>Quando você houver encontrado um pacote que queira instalar, use o
      comando "install":</p>

      <codeblock>fink install wget-ssl</codeblock>

      <p>O comando <code>fink</code> irá primeiramente verificar se todos os
      pré-requisitos necessários (dependências) estão presentes e irá
      perguntar-lhe se pode instalá-los caso estejam faltando. Depois ele baixa
      o código fonte, descomprime-o, aplica-lhe modificações, compila-o e
      instala o resultado no seu sistema. Isto pode levar bastante tempo. Caso
      você encontre erros durante este processo, por favor verifique primeiro
      as <link url="/faq/">Perguntas
      frequentes</link>.</p>

      <p>Você pode solicitar ao <code>fink</code> que tente baixar pacotes de
      binários pré-compilados, caso disponíveis, no lugar de compilá-los. Para
      tal, use a <xref chapter="usage" section="options">opção
      --use-binary-dist (ou -b)</xref> ao chamar o <code>fink</code>. Isto pode
      resultar uma grande economia de tempo. Por exemplo, ao executar</p>

      <codeblock>fink --use-binary-dist install wget-ssl</codeblock>

      <p>ou</p>

      <codeblock>fink -b install wget-ssl</codeblock>

      <p>será primeiramente feito o download de todas as dependências para
      wget-ssl que estejam disponíveis na distribuição de binários e apenas o
      restante será compilado a partir do código fonte. Esta opção também pode
      ser permanentemente habilitada no <xref chapter="conf">arquivo de
      configuração do Fink</xref> (fink.conf) ou através da execução do comando
      <code>fink configure</code>.</p>

      <p>Mais detalhes sobre a ferramenta <code>fink</code> estão disponíveis
      no capítulo <xref chapter="usage">Usando a ferramenta fink a partir da
      linha de comando</xref>.</p>
    </section>

    <section name="fink-commander">
      <title>Fink Commander</title>

      <p>O Fink Commander é uma interface Aqua para as ferramentas
      <code>apt-get</code> e <code>fink</code>. O menu Binary permite que você
      faça operações na distribuição de binários e o menu Source faz o mesmo
      para a distribuição de códigos fontes.</p>

      <p>O Fink Commander está incluído no instalador binário do Fink. Para
      baixá-lo em separado (por exemplo, se você fez a carga inicial do Fink a
      partir de código fonte) ou para informações adicionais, veja o <link
      url="http://finkcommander.sourceforge.net">site do Fink
      Commander</link>.</p>
    </section>

    <section name="available-versions">
      <title>Versões disponíveis</title>

      <p>Quando você quiser instalar um pacote, verifique primeiro o <link
      url="http://pdb.finkproject.org/pdb/index.php">banco de dados de
      pacotes</link> e veja se ele está de fato disponível através do Fink. As
      versões disponíveis do pacote serão exibidas em várias linhas de uma
      tabela:</p>

      <ul>
        <li>
          Distribuição de binários

          <ol>
            <li>
              <p><em>0.8.1:</em> Esta é a versão base que pode ser instalada a
              partir de binários para o OS 10.4. Se você <xref
              chapter="install" section="bin">atualizar</xref> o Fink, versões
              mais recentes de alguns pacotes poderão estar disponíveis.</p>
            </li>

            <li>
              <p><em>&fink_version;:</em> Esta é a versão base que pode ser
              instalada a partir de binários para o OS 10.5. Se você <xref
              chapter="install" section="bin">atualizar</xref> o Fink, versões
              mais recentes de alguns pacotes poderâo estar disponíveis.</p>
            </li>
          </ol>
        </li>
      </ul>

      <ul>
        <li>
          Distribuições via CVS/rsync 

          <ol>
            <li>
              <p><em>10.4/powerpc stable:</em> Esta é a versão mais recente que
              pode ser instalada da árvore de códigos fontes stable para
              usuários do OS 10.4 em hardware PowerPC.</p>
            </li>

            <li>
              <p><em>10.4/intel stable:</em> Esta é a versão mais recente que
              pode ser instalada da árvore de códigos fontes stable para
              usuários do OS 10.4 em hardware Intel.</p>
            </li>


            <li>
              <p><em>10.4/powerpc unstable:</em> Esta é a versão mais recente
              que pode ser instalada da árvore de códigos fontes unstable para
              usuários do OS 10.4 em hardware PowerPC.</p>
            </li>

            <li>
              <p><em>10.4/intel unstable:</em> Esta é a versão mais recente que
              pode ser instalada da árvore de códigos fontes unstable para
              usuários do OS 10.4 em hardware Intel.</p>

              <p>Observação: um pacote <em>instável</em> não significa
              necessariamente que não possa ser usado, porém instale tais
              pacotes sob sua própria conta e risco.</p>
            </li>

            <li>
              <p><em>10.5/powerpc stable:</em> Esta é a versão mais recente que
              pode ser instalada da árvore de códigos fontes stable para
              usuários do OS 10.5 em hardware PowerPC.</p>
            </li>

            <li>
              <p><em>10.5/intel stable:</em> Esta é a versão mais recente que
              pode ser instalada da árvore de códigos fontes stable para
              usuários do OS 10.5 em hardware Intel.</p>
            </li>

            <li>
              <p><em>10.5/powerpc unstable:</em> Esta é a versão mais recente
              que pode ser instalada da árvore de códigos fontes unstable para
              usuários do OS 10.5 em hardware PowerPC.</p>
            </li>

            <li>
              <p><em>10.5/intel unstable:</em> Esta é a versão mais recente que
              pode ser instalada da árvore de códigos fontes unstable para
              usuários do OS 10.5 em hardware Intel.</p>
            </li>
          </ol>
        </li>
      </ul>
    </section>

    <section name="x11">
      <title>Lidando com o X11</title>

      <p>Muitos dos pacotes que estão disponíveis através do Fink requerem a
      instalação de algum tipo de X11. Por causa disto, uma das primeiras
      coisas que normalmente são feitas é escolher uma implementação do
      X11.</p>

      <p>Como há várias implementações do X11 disponíveis para o Mac OS X (X11
      da Apple, XFree86, X.org) e várias formas de as instalar (manualmente ou
      via Fink), há vários pacotes alternativos - um para cada configuração.
      Aqui está a lista dos pacotes X11 disponíveis e métodos de
      instalação:</p>

      <ul>
        <li>
          <p><em>xfree86, xfree86-shlibs:</em> Instale ambos os pacotes para o
          XFree86 4.5.0 (somente para o OS 10.4).</p>
        </li>

        <li>
          <p><em>xorg, xorg-shlibs</em>(somente para o OS 10.4) Instale estes pacotes
          para obter a versão 6.8.2 da distribuição do X11 da X.org.</p>
        </li>

        <li>
          <p><em>system-xfree86 + -shlibs, -dev:</em> Estes pacotes são gerados
          automaticamente caso você instale o X11 da Apple ou instale
          manualmente o XFree86 ou X.org. Eles servem como sinalizadores de
          dependência.</p>
        </li>
      </ul>

      <p>Para mais informações sobre a instalação e execução do X11, consulte o
      documento <link url="/doc/x11/">X11 no Darwin e
      no Mac OS X</link>.</p>
    </section>
  </chapter>

  <chapter filename="upgrade">
    <title>Atualizando o Fink</title>
    <shorttitle>Atualização</shorttitle>

    <preface>
      <p>Este capítulo cobre os procedimentos usados para atualizar sua
      instalação do Fink para os pacotes mais recentes.</p>
    </preface>

    <section name="bin">
      <title>Atualizando através de pacotes binários</title>

      <p>Caso você use exclusivamente a distribuição de binários, não há um
      procedimento de atualização separado. Basta solicitar à sua ferramenta
      predileta que obtenha do servidor a listagem de pacotes mais recentes e
      proceda à atualização de todos os pacotes.</p>

      <p>Para o dselect, basta escolher as opções "[U]pdate" e em seguida
      "[I]nstalar". É claro que você pode também escolher a opção "[S]eleciona"
      para conferir quais os pacotes que você selecionou e talvez descobrir
      novos pacotes.</p>

      <p>Para o apt, execute o comando <code>apt-get update</code> para receber
      a listagem de pacotes mais recente e então execute o comando
      <code>apt-get upgrade</code> para atualizar todos os pacotes que tenham
      versões novas disponíveis.</p>

      <p>Para o Fink Commander, escolha Binary-&gt;Update descriptions para
      atualizar a listagem de pacotes e em seguida Binary-&gt;Dist-Upgrade
      packages para proceder à atualização para versões novas.</p>

      <p>Para mais informações, consulte a <link
      url="/download/upgrade.php">Matriz de
      atualização</link>.</p>
    </section>

    <section name="src">
      <title>Atualizando a distribuição de códigos fontes</title>

      <p>Se você usa a distribuição de códigos fontes então o procedimento é
      composto por dois passos. No primeiro passo, você baixa as descrições
      mais recentes dos pacotes em seu computador. No segundo passo, essas
      descrições de pacotes são usadas para compilar novos pacotes; o código
      fonte é baixado quando necessário.</p>

      <p>O primeiro passo pode ser feito através da execução do comando
      <code>fink selfupdate</code>. Este comando verificará no site do Fink se
      há uma nova versão pontual disponível e irá automaticamente baixar e
      instalar as descrições de pacotes associadas. Você também tem a opção de
      obter as descrições de pacotes diretamente do git ou através do rsync. O
      Git é um repositório com versionamento onde as descrições de pacotes são
      armazenadas e gerenciadas. A vantagem do Git é que ele é atualizado
      continuamente. A desvantagem é que há um único servidor Git para o Fink e
      ele pode não ser muito confiável quando há tráfego intenso.  Por esta
      razão, recomenda-se que usuários em geral usem o rsync. Existem vários
      espelhos disponíveis para o rsync e a única desvantagem é que as
      descrições de pacotes levam por volta de uma hora para migrar aos
      espelhos rsync depois de terem sido adicionadas ao Git.</p>

      <p>Caso você encontre problemas na atualização de uma instalação a partir
      de códigos fontes, consulte <link
      url="/download/fix-upgrade.php">estas
      instruções especiais</link>).</p>

      <p>Uma vez que você tenha atualizado suas descrições de pacotes (não
      importa como), você pode atualizar todos os pacotes de uma vez só através
      do comando <code>fink update-all</code>.</p>

      <p>Para atualizar a distribuição de códigos fontes através do Fink
      Commander, escolha Source-&gt;Selfupdate para baixar as novas descrições
      de pacotes e em seguida Source-&gt;Update-all  para atualizar os
      pacotes.</p>
    </section>

    <section name="mix">
      <title>Misturando binários e códigos fontes</title>

      <p>Caso você use pacotes binários pré-compilados para alguns pacotes e
      compile outros a partir do código fonte, você precisará seguir os dois
      conjuntos de instruções acima para atualizar sua instalação do Fink, ou
      seja: primeiro use <code>dselect</code> ou <code>apt-get</code> para
      obter as versões mais recentes dos pacotes que estão disponíveis como
      binários e então use <code>fink selfupdate</code> e <code>fink
      update-all</code> para obter as descrições de pacotes mais recentes e
      atualizá-los.</p>

      <p>Se você usar a opção UseBinaryDist, configurável através da <xref
      chapter="usage" section="options">opção --use-binary-dist (ou -b)</xref>
      ou no <xref chapter="conf">arquivo de configuração do Fink</xref>, as
      descrições de pacotes (tanto os binários quanto os de códigos fontes)
      serão atualizadas se você executar o comando <code>fink
      selfupdate</code>. Neste caso você não precisa mais executar
      separadamente o comando <code>apt-get</code>.</p>

      <p>Se você estiver usando o Fink Commander, escolha Binary-&gt;Update
      descriptions para atualizar a listagem de pacotes e em seguida
      Binary-&gt;Dist-Upgrade packages para atualizar os pacotes de binários
      para suas novas versões. Depois disso, escolha Source-&gt;Selfupdate para
      baixar os novos arquivos com informações sobre os pacotes e em seguida
      escolha Source-&gt;Update-all (veja as seções anteriores para mais
      detalhes).</p>
    </section>
  </chapter>

  <chapter filename="conf">
    <title>O arquivo de configuração do Fink</title>
    <shorttitle>fink.conf</shorttitle>

    <preface>
      <p>Este capítulo explica as configurações disponíveis no arquivo de
      configuração do Fink (fink.conf) e como elas influenciam o comportamento
      do Fink, em particular a ferramenta de linha de comando
      <code>fink</code>, ou seja, focando principalmente o caso de distribuição
      de códigos fontes.</p>
    </preface>

    <section name="about">
      <title>Sobre o fink.conf</title>

      <p>Na instalação inicial do Fink você teve que responder algumas
      perguntas cujas respostas são armazenadas no arquivo de configuração,
      tais como quais <xref section="mirrors">espelhos</xref> você gostaria de
      usar para baixar os arquivos e qual método deve ser usado para obter
      privilégios administrativos. Você pode passar novamente por este processo
      através da execução do comando <code>fink configure</code>. Entretanto,
      algumas configurações só podem ser ajustadas através da edição manual do
      arquivo <em>fink.conf</em>. Normalmente essas configurações são
      direcionadas a usuários avançados.</p>

      <p>O arquivo <em>fink.conf</em> está localizado em
      <code>/sw/etc/fink.conf</code> e pode ser editado com seu editor de
      textos predileto. Você precisará de privilégios administrativos para
      editá-lo.</p>
    </section>

    <section name="syntax">
      <title>A sintaxe do fink.conf</title>

      <p>Seu arquivo fink.conf é composto por várias linhas seguindo o
      formato</p>

      <codeblock>NomeDaOpcao: Valor</codeblock>

      <p>Cada linha indica uma única opção e o nome da opção é separado de seu
      valor por : seguido de um único espaço em branco. O conteúdo do valor
      depende da opção, sendo normalmente um valor booleano ("True" ou
      "False"), uma string, ou uma lista de strings delimitadas por um espaço
      em branco. Por exemplo:</p>

      <codeblock>
OpcaoBooleana: True
OpcaoString: AlgumaCoisa
OpcaoLista: Opcao1 Opcao2 Opcao3
</codeblock>
    </section>

    <section name="required">
      <title>Configurações obrigatórias</title>

      <p>Algumas das configurações no arquivo <code>fink.conf</code> são
      mandatórias. Sem elas o Fink não consegue funcionar adequadamente. As
      seguintes configurações pertencem a esta categoria.</p>

      <ul>
        <li>
          <p>
            <em>Basepath:</em> diretório
          </p>

          <p>Informa ao <em>fink</em> onde ele foi instalado. O valor padrão é
          <em>/sw</em> a menos que você tenha informado outro diretório durante
          a instalação inicial do Fink. Você <em>não</em> deve mudar este valor
          após a instalação pois isto irá confundir o <em>fink</em>.</p>
        </li>
      </ul>
    </section>

    <section name="optional">
      <title>Configurações de usuário opcionais</title>

      <p>Há várias configurações opcionais que os usuários podem usar para
      adequar o comportamento do Fink.</p>

      <ul>
        <li>
          <p>
            <em>RootMethod:</em> su ou sudo ou none
          </p>

          <p>O Fink precisa de privilégios administrativos para algumas
          operações. Os valores aceitos para esta opção são <em>sudo</em> ou
          <em>su</em>. Você também pode definir esta opção como tendo o valor
          <em>none</em> e neste caso você deverá executar o Fink como root. O
          valor padrão é <em>sudo</em> e na maior parte dos casos não se deve
          alterá-lo.</p>
        </li>

        <li>
          <p>
            <em>Trees:</em> lista de árvores
          </p>

          <p>As árvores disponíveis são:</p>

          <codeblock>
local/main      - pacotes locais que você deseja instalar
local/bootstrap - pacotes usados durante a instalação do Fink
stable/crypto   - pacotes de criptografia estáveis
stable/main     - outros pacotes estáveis
unstable/crypto - pacotes de criptografia instáveis
unstable/main   - outros pacotes instáveis
</codeblock>

          <p>Você também pode adicionar suas próprias árvores em
          <code>/sw/fink/dists</code> caso queira mas isto em geral não é
          necessário. As árvores padrão são "local/main local/bootstrap
          stable/main". Esta lista deve ser mantida sincronizada com o arquivo
          <code>/sw/etc/apt/sources.list</code> - <code>fink</code> sincroniza
          automaticamente.</p>

          <p>A ordem das árvores tem importância uma vez que pacotes de árvores
          mais ao fim da lista podem sobrescrever pacotes de árvores listadas
          mais ao começo da lista.</p>
        </li>

        <li>
          <p>
            <em>Distribution:</em> 10.1, 10.2-gcc3.3, 10.3 ou 10.4
          </p>

          <p>O Fink precisa saber qual versão do Mac OS X você está usando. O
          Mac OS X 10.0 e versões anteriores não são suportados, e as versões
          10.1 e 10.2 não são mais suportadas pelas versões atuais do
          <code>fink</code>. Usuários do Mac OS X 10.2 são restritos ao
          fink-0.24.7, liberado em junho de 2005. Este campo é definido através
          da execução do script <code>/sw/lib/fink/postinstall.pl</code>. Você
          não deveria precisar alterar este valor manualmente.</p>
        </li>

        <li>
          <p><em>FetchAltDir:</em> diretório</p>

          <p>Normalmente o <code>fink</code> armazenará os códigos fontes em
          <code>/sw/src</code>. Usando esta opção, você pode especificar um
          diretório alternativo para indicar ao Fink onde procurar por códigos
          fontes baixados. Por exemplo:</p>

          <codeblock>FetchAltDir: /usr/src</codeblock>
        </li>

        <li>
          <p><em>Verbose:</em> um número de 0 a 3</p>

          <p>Esta opção define a quantidade de informações que o Fink lhe
          informa sobre o que ele está fazendo. Os valores são:
            <em>0</em> <tt>Quiet</tt> (não exibe estatísticas de download)
            <em>1</em> <tt>Low</tt> (não exibe a descompressão de tarballs)
            <em>2</em> <tt>Medium</tt> (exibe quase tudo)
            <em>3</em> <tt>High</tt> (exibe tudo).
            O valor padrão é 1.</p>
        </li>

        <li>
          <p><em>SkipPrompts:</em> uma lista de valores separados por vírgula</p>
          
          <p>(<code>fink-0.25</code> e mais recentes) Esta opção restringe o
          <code>fink</code> no tocante a evitar que o usuário precise responder
          a perguntas durante a execução do <code>fink</code>. Cada pergunta
          pertence a uma categoria. Se uma categoria estiver na lista de
          SkipPrompts então a opção padrão será escolhida após esperar por um
          curto período de tempo.</p>

          <p>Atualmente existem as seguintes categorias de perguntas:</p>
          
          <p><em>fetch</em> - Downloads e espelhos</p>
          <p><em>virtualdep</em> - Escolha dentre pacotes alternativos</p>
          <p>Por padrão nenhuma pergunta é evitada.</p>
        </li>

        <li>
          <p><em>NoAutoIndex:</em> booleano</p>

          <p>O Fink guarda uma cópia dos arquivos de descrição de pacotes em
          /sw/var/db/fink.db para evitar que seja necessário lê-los e
          analisá-los toda vez em que é executado. O Fink verifica se é
          necessário atualizar o índice de pacotes a menos que esta opção seja
          definida como "True". O valor padrão é "False" e não é recomendado
          que você o altere. Caso o faça, você pode precisar ter que executar o
          comando <code>fink index</code> manualmente para atualizar o
          índice.</p>
        </li>

        <li>
          <p><em>SelfUpdateNoCVS:</em> booleano</p>

          <p>O comando <code>fink selfupdate</code> atualiza o gerenciador de
          pacotes Fink para a versão mais recente. Com o valor "True", Esta
          opção garante que o CVS não seja usado para fazer essa atualização.
          esta opção é automaticamente ajustada quando se executa o comando
          <code>fink selfupdate-cvs</code>, portanto não deveria ser necessário
          que você a ajuste manualmente.</p>
        </li>

        <li>
	  <p><em>Buildpath:</em> diretório</p>

          <p>O Fink precisa criar vários diretórios temporários para cada
          pacote que ele compila a partir do código fonte. Por padrão, eles são
          situados em <filename>/sw/src</filename> no Panther e anteriores, e
          <filename>/sw/src/fink.build</filename> no Tiger. Se você quer que
          eles residam em outro lugar, especifique aqui o diretório. Veja as
          descrições das opções <code>KeepRootDir</code> e
          <code>KeepBuildDir</code> na seção <xref
          section="developer">Configurações para desenvolvedores</xref> deste
          documento para mais informações sobre estes diretórios
          temporários.</p>

          <p>No Tiger, recomenda-se que o Buildpath termine com
          <filename>.noindex</filename> ou <filename>.build</filename>. Caso
          contrário, o Spotlight tentará indexar os arquivos temporários no
          Buildpath, fazendo com que as compilações levem mais tempo.</p>
	</li>

        <li>
          <p><em>Bzip2Path:</em> a localização do executável
          <filename>bzip2</filename> (ou compatível)</p>
          
          <p>(<code>fink-0.25</code> e mais recentes) A opção Bzip2Path permite
          que você sobrescreva a localização da ferramenta de linha de comando
          <filename>bzip2</filename>. Desta forma, você pode especificar um
          local alternativo do executável <filename>bzip2</filename>, passar
          opções de linha de comando opcionais, ou usar um substituto como o
          <filename>pbzip2</filename> para descompactar arquivos
          <filename>.bz2</filename>.</p>
        </li>
      </ul>
    </section>

    <section name="downloading">
      <title>Configurações de download</title>

      <p>Há várias configurações que influenciam a forma como o Fink baixa os
      dados dos pacotes.</p>

      <ul>
        <li>
          <p><em>ProxyPassiveFTP:</em> booleano</p>

          <p>Esta opção faz com que o Fink use o modo "passivo" para os
          downloads por FTP. Alguns servidores FTP ou configurações de rede
          necessitam de que esta opção seja definida como <tt>True</tt>.
          Recomenda-se que você sempre deixe esta opção ligada pois FTP ativo
          está obsoleto.</p>
        </li>

        <li>
          <p><em>ProxyFTP:</em> URL</p>

          <p>Se você usa um proxy FTP então você precisa colocar seu endereço
          aqui, como por exemplo:</p>

          <codeblock>ProxyFTP: ftp://seuproxyftp.com:2121/</codeblock>

          <p>Deixe esta opção em branco caso você não use um proxy FTP.</p>
        </li>

        <li>
          <p><em>ProxyHTTP:</em> URL</p>

          <p>Se você usa um proxy HTTP então você precisa colocar seu endereço
          aqui, como por exemplo:</p>

          <codeblock>ProxyHTTP: http://seuproxyhttp.com:3128/</codeblock>

          <p>Deixe esta opção em branco caso você não use um proxy HTTP.</p>
        </li>

        <li>
          <p><em>DownloadMethod:</em> wget ou curl ou axel ou axelautomirror</p>

          <p>O Fink pode usar três diferentes aplicativos para baixar arquivos
          da Internet - <em>wget</em>, <em>curl</em> ou <em>axel</em>. O valor
          <em>axelautomirror</em>  usa um modo experimental do <em>axel</em>
          que tenta determinar o servidor mais próximo que possui um certo
          arquivo. O uso de <em>axel</em> e <em>axelautomirror</em> ainda não é
          recomendado. O valor padrão é <em>curl</em>. <em>A aplicação que você
          escolheu para DownloadMethod DEVE estar instalada!</em> (i.e. o
          <code>fink</code> não tentará usar o <em>curl</em> caso você tente
          usar um aplicativo de download que não esteja presente.</p>
        </li>

        <li>
          <p><em>SelfUpdateMethod:</em> point, rsync ou git</p>

          <p>O <code>fink</code> pode usar diferentes métodos para atualizar os
          arquivos com informações sobre os pacotes. <em>rsync</em> é a
          configuração recomendada; o rsync é usado para baixar apenas os
          arquivos modificados nas <xref section="optional">árvores</xref> que
          você tenha habilitado. Observe que se você houver alterado ou
          adicionado arquivos nas árvores <code>stable</code> ou
          <code>unstable</code>, usar o rsync irá eliminá-los. Faça um backup
          primeiro, por exemplo na sua árvore <code>local</code>. <em>git</em>
          irá efetuar o download do repositório do Fink usando acesso git
          anônimo ou Github. Esta configuração tem a desvantagem de que o Git
          não pode trocar de espelhos; se o servidor não estiver disponível
          você não conseguirá fazer a atualização. <em>point</em> fará somente
          o download das últimas versões dos pacotes que tenham sido liberadas
          e não é recomendado porque seus pacotes podem ficar um tanto quanto
          desatualizados.</p>
        </li>

        <li>
          <p><em>SelfUpdateCVSTrees:</em> lista de árvores</p>

          <p>(<code>fink-0.25</code> e mais recentes) Por padrão, o método de
          autoatualização <em>cvs</em> atualizará apenas a árvore de
          distribuição atual. Esta opção sobrescreve a lista de versões de
          distribuição que serão atualizadas durante uma autoatualização.
          Observe que você irá precisar de um binário "cvs" recente instalado
          caso queira incluir diretórios que não possuam diretórios CVS/ no seu
          caminho completo (por exemplo, dists/local/main ou similares).</p>
        </li>

        <li>
          <p><em>UseBinaryDist:</em> booleano</p>

          <p>Faz com que o <code>fink</code> tente baixar pacotes de binários
          pré-compilados a partir da distribuição de binário caso estejam
          disponíveis e se o pacote de binários já não estiver disponível no
          sistema. Isto pode trazer uma boa economia de tempo de instalação e
          portanto recomenda-se que esta opção esteja ligada. Passar ao fink a
          <xref chapter="usage">opção --use-binary-dist</xref> option (ou
          <code>-b</code>) tem o mesmo efeito mas só ocorre nessa execução do
          <code>fink</code> em particular. Caso você passe ao <code>fink</code>
          a opção <code>--no-use-binary-dist</code> faz com que esta
          configuração seja ignorada, acarretando a compilação a partir de
          código fonte para essa execução do <code>fink</code> em
          particular.</p>

          <p>Note que este modo instrui o <code>fink</code> a baixar um binário
          disponível caso a versão seja a última versão disponível do pacote;
          este modo <em>não</em> faz com que o <code>fink</code> escolha uma
          versão baseado na disponibilidade do binário do pacote.</p>
        </li>
      </ul>
    </section>

    <section name="mirrors">
      <title>Configurações de espelhos</title>

      <p>Obter software da Internet pode ser tedioso e normalmente os downloads
      não são tão rápidos quanto gostaríamos. Servidores espelhos hospedam
      cópias de arquivos disponíveis em outros servidores e podem ter uma
      conexão mais rápida ou estarem geograficamente mais próximos a você,
      aumentando a velocidade de download. Eles também ajudam a reduzir a carga
      nos servidores principais que geralmente estão mais ocupados, como por
      exemplo <em>ftp.gnu.org</em>, e eles oferecem uma alternativa no caso de
      um servidor não estar disponível.</p>

      <p>Para que o Fink escolha o melhor espelho para você, você precisa
      informar o continente e país em que reside. Se os downloads de um
      servidor falharem, o Fink perguntará se você deseja tentar novamente o
      mesmo espelho, um espelho diferente no mesmo país ou continente, ou ainda
      um espelho diferente em qualquer lugar do mundo.</p>

      <p>O arquivo <em>fink.conf</em> contém as configurações de quais espelhos
      você gostaria de usar.</p>

      <ul>
        <li>
          <p><em>MirrorContinent:</em> código de três letras</p>

          <p>Você deve alterar este valor usando o comando <code>fink
          configure</code>. O código de três letras pode ser encontrado em
          <code>/sw/lib/fink/mirror/_keys</code>. Por exemplo, caso more na
          Europa:</p>

          <codeblock>MirrorContinent: eur</codeblock>
        </li>

        <li>
          <p><em>MirrorCountry:</em> código de seis letras</p>

          <p>Você deve alterar este valor usando o comando <code>fink
          configure</code>. O código de seis letras pode ser encontrado em
          <code>/sw/lib/fink/mirror/_keys</code>. Por exemplo, caso more na
          Áustria:</p>

          <codeblock>MirrorCountry: eur-AT</codeblock>
        </li>

        <li>
          <p><em>MirrorOrder:</em> MasterFirst ou MasterLast ou MasterNever ou ClosestFirst</p>

          <p>O Fink suporta espelhos 'mestres', que são repositórios espelhados
          dos tarballs de códigos fontes de todos os pacotes do Fink. A
          vantagem de usar um espelho mestre é que as URLs para download de
          código fontes sempre estarão disponíveis. Os usuários podem escolher
          usar esses espelhos que são mantidos pelo time do Fink, ou usar
          somente as URLs de códigos fontes originais e espelhos externos como
          os do gnome, do KDE ou do debian. Além disso, usuários podem escolher
          combinar os dois conjuntos, sendo que eles serão pesquisados de
          acordo com a proximidade (conforme documentado acima). Ao escolher as
          opções MasterFirst ou MasterLast, o usuário pode pular para o mestre
          (ou não-mestre) caso um download falhe. As opções são:</p>

          <codeblock>MasterFirst - Procure primeiro por espelhos mestres.
MasterLast - Procure espelhos mestres por último.
MasterNever - Nunca use espelhos mestres.
ClosestFirst - Procure primeiro por espelhos mais próximos
               (combine todos os espelhos em um único conjunto).</codeblock>
        </li>

        <li>
          <p><em>Mirror-rsync:</em> URL</p>

          <p>(<code>fink-0.25.2</code> e mais recentes) Ao efetuar um
          <code>fink selfupdate</code> com <em>SelfUpdateMethod</em> definido
          como <code>rsync</code>, esta é a URL rsync a partir da qual deve ser
          feita a sincronização. Deve ser uma URL rsync anônima apontando para
          o diretório que contém todas as distribuições e árvores do Fink.</p>
        </li>
      </ul>
    </section>

    <section name="developer">
      <title>Configurações para desenvolvedores</title>

      <p>Algumas opções do arquivo <code>fink.conf</code> são úteis apenas para
      desenvolvedores. Não recomendamos que usuários convencionais as
      modifiquem. As seguintes opções estão nesta categoria.</p>

      <ul>
        <li>
          <p><em>KeepRootDir:</em> booleano</p>

          <p>Faz com que o <code>fink</code> não remova o diretório
          <filename>raiz-[nome]-[versão]-[revisão]</filename> no
          <em>Buildpath</em> após compilar um pacote. O padrão é
          <tt>False</tt>. <em>Tenha cuidado, esta opção pode rapidamente lotar
          seu disco rígido!</em> Passar ao <code>fink</code> a opção
          <em>-K</em> tem o mesmo efeito mas apenas para aquela execução do
          <code>fink</code> em particular.</p>
        </li>

        <li>
          <p><em>KeepBuildDir:</em> booleano</p>

          <p>Faz com que o <code>fink</code> não remova o diretório
          <filename>[nome]-[versão]-[revisão]</filename> no <em>Buildpath</em>
          após compilar um pacote. O padrão é <tt>False</tt>. <em>Tenha
          cuidado, esta opção pode rapidamente lotar seu disco rígido!</em>
          Passar ao <code>fink</code> a opção <em>-k</em> tem o mesmo efeito
          mas apenas para aquela execução do <code>fink</code> em
          particular.</p>
        </li>
      </ul>
    </section>

    <section name="advanced">
      <title>Configurações avançadas</title>

      <p>Há algumas outras opções que podem ser úteis mas requerem algum
      conhecimento para funcionarem a contento.</p>

      <ul>
        <li>
          <p><em>MatchPackageRegEx:</em></p>

          <p>Faz com que o fink não pergunte qual pacote instalar caso uma (e
          apenas uma) das escolhas case com a expressão regular do Perl
          colocada aqui. Exemplo:</p>

          <codeblock>MatchPackageRegEx: (.*-ssl$|^xfree86$|^xfree86-shlibs$)</codeblock>

          <p>irá casar os pacotes terminados em '-ssl' e irá casar de forma
          exata os pacotes 'xfree86' e 'xfree86-shlibs'.</p>
        </li>

        <li>
          <p><em>CCacheDir:</em> diretório</p>

          <p>Se o pacote <code>ccache-default</code> for instalado, os arquivos
          de cache gerados pelo Fink durante a compilação serão armazenados
          nesse diretório. O padrão é <filename>/sw/var/ccache</filename>. Caso
          seja definido como <code>none</code>, o fink não irá definir a
          variável de ambiente CCACHE_DIR e o ccache usará o diretório
          <filename>$HOME/.ccache</filename>, potencialmente colocando arquivos
          com proprietário root no seu diretório home.</p>
        </li>

        <li>
          <p><em>NotifyPlugin:</em> plugin</p>
          
          <p>Especifica um plugin de notificação para informar quandos os
          pacotes tiverem sido instalados ou desinstalados. O padrão é Growl
          (requer <code>Mac::Growl</code> para funcionar). Outros plugins podem
          ser encontrados no diretório
          <filename>/sw/lib/perl5/Fink/Notify</filename>. A partir do
          <code>fink-0.25</code> os plugins podem ser listados através do
          comando <code>fink plugins</code>. Consulte <link
          url="http://wiki.finkproject.org/index.php/Fink:Notificati
          on_Plugins">Fink Developer Wiki</link> para mais informações.</p>
        </li>
          
        <li>
          <p><em>AutoScanpackages:</em> booleano</p>

          <p>Quando o <code>fink</code> compila pacotes novos, o
          <code>apt-get</code> não sabe deles imediatamente. Historicamente, o
          comando <code>fink scanpackages</code> tinha que ser executado para
          informar o <code>apt-get</code> dos novos pacotes mas agora isto
          acontece de forma automática. Caso esta opção esteja presente e com
          valor <tt>False</tt>, então o comando <code>fink scanpackages</code>
          não mais será executado automaticamente após a compilação de pacotes.
          O valor padrão é <tt>True</tt>.</p>
        </li>

        <li>
          <p><em>ScanRestrictivePackages:</em> booleano</p>
          
          <p>Ao efetuar a varredura de pacotes para o <code>apt-get</code>, o
          <code>fink</code> normalmente varre todos os pacotes nas árvores
          atuais. Entretanto, caso o repositório apt resultante venha a se
          tornar disponível publicamente, o administrador pode ser obrigado
          por lei a não incluir pacotes com licenças <code>Restrictive</code>
          ou <code>Commercial</code>. Caso esta opção esteja presente e com
          valor <tt>False</tt>, então o Fink irá omitir esses pacotes durante a
          varredura.</p>
        </li>
      </ul>
    </section>

    <section name="sourceslist">
      <title>Gerenciando o arquivo sources.list do apt</title>

      <p>O arquivo <code>/sw/etc/apt/sources.list</code>, que é usado pelo apt
      para localizar arquivos binários para instalação, é automaticamente
      gerenciado pelo fink. O arquivo sources.list padrão, conforme suas
      próprias distribuições e árvores, se parece com:</p>

      <codeblock># Local modifications should either go above this line, or at the end.
#
# Default APT sources configuration for Fink, written by the fink program

# Local package trees - packages built from source locally
# NOTE: this is automatically kept in sync with the Trees: line in 
# /sw/etc/fink.conf
# NOTE: run 'fink scanpackages' to update the corresponding Packages.gz files
deb file:/sw/fink local main
deb file:/sw/fink stable main crypto

# Official binary distribution: download location for packages
# from the latest release
deb http://us.dl.sourceforge.net/fink/direct_download 10.3/release main crypto

# Official binary distribution: download location for updated
# packages built between releases
deb http://us.dl.sourceforge.net/fink/direct_download 10.3/current main crypto

# Put local modifications to this file below this line, or at the top.</codeblock>

      <p>Usando esse arquivo padrão, o apt-get procura primeiro na sua
      instalação local por binários que já tenham sido compilados, e após
      procura na distribuição de binários oficial. Você pode alterar este
      comportamento ajustando os valores no começo deste arquivo (que será lido
      em primeiro lugar) ou no fim do arquivo (que será lido por último).</p>

      <p>Se você alterar a linha Trees do arquivo fink.conf ou a distribuição
      que estiver usando, o fink irá automaticamente modificar a parte
      "default" do arquivo para refletir os novos valores. O Fink irá,
      entretanto, preservar quaisquer modificações locais que você tenha feito
      no arquivo desde que você as limite ao começo do arquivo (antes da
      primeira linha padrão) e ao fim do arquivo (abaixo da última linha
      padrão).</p>
    </section>
  </chapter>

  <chapter filename="usage">
    <title>Usando a ferramenta fink a partir da linha de comando</title>
    <shorttitle>A ferramenta fink</shorttitle>

    <section name="using">
      <title>Usando a ferramenta fink</title>

      <p>A ferramenta <code>fink</code> usa vários comandos para operar em
      pacotes de uma distribuição de códigos abertos. Alguns comandos requerem
      o nome de ao menos um pacote mas podem operar em vários nomes de pacotes
      de uma vez só. Você pode especificar apenas o nome do pacote (por
      exemplo, gimp) ou um nome completamente qualificado com o número da
      versão (por exemplo, gimp-1.2.1) ou com os números de versão e revisão
      (por exemplo, gimp-1.2.1-3). O Fink irá escolher automaticamente a última
      versão e revisão disponível caso não tenham sido especificadas. Outros
      comandos possuem opções diferentes.</p>

      <p>Apresentamos a seguir a lista de comandos da ferramenta
      <code>fink</code>.</p>
    </section>

    <section name="options">
      <title>Opções globais</title>

      <p>Há algumas opções que são aplicáveis a todos os comandos do fink. Se
      você digitar <code>fink --help</code> você obterá a lista de opções:</p>

      <p>(no contexto da versão <code>fink-0.26.0</code>)</p>

      <p><em>-h, --help</em> - exibe texto de ajuda.</p>

      <p><em>-q, --quiet</em>  - faz com que o <code>fink</code> exiba menos
      informações, o contrário de <em>--verbose</em>.  Sobrescreve a opção
      <xref chapter="conf" section="optional">Verbose</xref> em
      <filename>fink.conf</filename>.</p>

      <p><em>-V, --version</em> - exibe informações sobre a versão.</p>

      <p><em>-v, --verbose</em> - faz com que o <code>fink</code> exiba mais informações, o contrário de
      <em>--quiet</em>.  Sobrescreve a opção <xref chapter="conf"
      section="optional">Verbose</xref> em <filename>fink.conf</filename>.</p>

      <p><em>-y, --yes</em> - nas perguntas interativas, responde
      automaticamente com a resposta padrão.</p>

      <p><em>-K, --keep-root-dir</em>   - Faz com que o <code>fink</code> não
      remova o diretório <filename>raiz-[nome]-[versão]-[revisão]</filename> em
      <xref chapter="conf" section="optional">Buildpath</xref> após compilar um
      pacote. Corresponde à opção <xref chapter="conf"
      section="developer">KeepRootDir</xref> no arquivo
      <filename>fink.conf</filename>.</p>

      <p><em>-k, --keep-build-dir</em>  - Faz com que o <code>fink</code> não
      remova o diretório <filename>[nome]-[versão]-[revisão]</filename> em
      <xref chapter="conf" section="optional">Buildpath</xref> após compilar um
      pacote. Corresponde à opção <xref chapter="conf"
      section="developer">KeepBuildDir</xref> no arquivo
      <filename>fink.conf</filename>.</p>

      <p><em>-b, --use-binary-dist</em> - faz o download de pacotes
      pré-compilados na distribuição de binários caso estejam disponíveis (por
      exemplo, para diminuir o tempo de compilação ou utilização do disco).
      Note que este modo instrui o fink a baixar a versão procurada caso ela
      esteja disponível para download; o modo não faz com que o fink escolha
      uma versão qualquer que esteja disponível sob a forma de binário.
      Corresponde à opção <xref chapter="conf"
      section="downloading">UseBinaryDist</xref> no arquivo
      <filename>fink.conf</filename>.</p>

      <p><em>--no-use-binary-dist</em> - Não usa pacotes binários
      pré-compilados da distribuição de binários, o oposto da opção
      --use-binary-dist. Este é o comportamento padrão a menos que haja sido
      sobrescrito por <code>UseBinaryDist: true</code> no arquivo de
      configuração <filename>fink.conf</filename>.</p>
      
      <p><em>--build-as-nobody</em> - Usa um usuário sem privilégios
      administrativos durante o processo de extrair, ajustar, compilar e
      instalar pacotes. Note que os pacotes compilados com esta opção podem não
      funcionar corretamente. Esta opção deve ser usada apenas para
      desenvolvimento de pacotes e depuração de erros.</p>
      
      <p><em>-m, --maintainer</em> (<code>fink-0.25</code> e mais recentes)
      Executa ações úteis para mantenedores de pacotes: efetua a validação do
      arquivo <filename>.info</filename> antes de começar a compilação e no
      arquivo <filename>.deb</filename> após compilar um pacote; faz com que
      alguns avisos de tempo de compilação se tornem erros fatais;
      (<code>fink-0.26</code> e mais recentes) executa as suítes de testes
      conforme especificado no campo, fazendo com que <em>--tests</em> e
      <em>--validate</em> estejam <code>on</code>.</p>

      <p><em>--tests[=on|off|warn]</em> - (<code>fink-0.26.0</code> e mais
      recentes) Faz com que os campos <code>InfoTest</code> sejam ativados e as
      suítes de testes especificadas via <code>TestScript</code> sejam
      executadas (veja o <varlink url="../packaging/reference.php#fields"
      varurl="../packaging/packaging.en.html#reference.fields">Manual de
      empacotamento para o Fink</varlink>). Se nenhum argumento for informado
      para esta opção ou se o argumento estiver <code>on</code>, então falhas
      nas suítes de testes serão consideradas erros fatais durante a
      compilação. Se o argumento for <code>warn</code> então as falhas serão
      tratadas como avisos.</p>
      
      <p><em>--validate[=on|off|warn]</em> - Faz com que os pacotes sejam
      validados durante a compilação. Se nenhum argumento for fornecido a esta
      opção ou se o argumento for <code>on</code>, então falhas de validação
      serão consideradas erros fatais durante a compilação. Se o argumento for
      <code>warn</code>, então falhas serão tratadas como avisos.</p>

      <p><em>-l, --log-output</em> - Guarda uma cópia da saída do terminal
      durante cada processo de compilação de pacote. Por padrão, o arquivo é
      armazenado em
      <filename>/tmp/fink-build-log_[nome]-[versão]-[revisão]_[data]-[hora]</filename>
      mas a opção <em>--logfile</em> pode ser usada para especificar um nome
      alternativo.</p>

      <p><em>--no-log-output</em> - Não guarda uma cópia da saída do terminal
      durante a compilação de pacotes, o oposto da opção <em>--log-output</em>.
      É o padrão.</p>

      <p><em>--logfile=nomedearquivo</em> - Guarda os logs de compilação de
      pacotes no arquivo <filename>nomedearquivo</filename> no lugar do arquivo
      padrão (veja a opção <em>--log-output</em>, que é implicitamente ativada
      pela opção <em>--logfile</em>). Você pode usar os códigos de expansão %
      para incluir automaticamente informações específicas do pacote. Uma lista
      completa de códigos de expansão está disponível no <varlink
      url="../packaging" varurl="../packaging/packaging.en.html">Manual de
      empacotamento do Fink</varlink>; alguns códigos de expansão são:</p>

      <ul>
        <li><em>%n</em> - nome do pacote</li>
        <li><em>%v</em> - versão do pacote</li>
        <li><em>%r</em> - revisão do pacote</li>
      </ul>

      <p><em>-t, --trees=expr</em> - Considera apenas os pacotes em árvores que
      casem com <em>expr</em>. O formato de expr é uma lista de especificações
      de árvores separadas por vírgula. Árvores listadas em
      <filename>fink.conf</filename> são comparadas com <em>expr</em>. Somente
      aquelas que casarem com pelo menos uma das especificações são
      consideradas pelo <code>fink</code>, na ordem da primeira especificação
      com que casarem. Se a opção <em>--trees</em> for usada, todas as árvores
      listadas em <filename>fink.conf</filename> são incluídas em ordem. Uma
      especificação de árvore pode conter o caracter barra (/), sendo que neste
      caso é necessário um casamento exato com uma árvore. Por exemplo,
      <em>--trees=unstable/main</em> casaria somente com a árvore
      <em>unstable/main</em>, enquanto que <em>--trees=unstable</em> casaria
      tanto com <em>unstable/main</em> quanto com <em>unstable/crypto</em>. Há
      algumas especificações mágicas que podem ser incluídas em
      <em>expr</em>:</p>

      <ul>
        <li><em>status</em> - Inclui pacotes no banco de dados de status do
        dpkg.</li>

        <li><em>virtual</em> - Inclui pacotes virtuais que refletem as
        características do sistema.</li>
      </ul>

      <p>Exclusão (ou falha de inclusão) dessas árvores mágicas só são
      suportadas atualmente para operações que não instalem ou removam
      pacotes.</p>

      <p><em>-T, --exclude-trees=expr</em> Considera apenas pacotes em árvores
      que não casem com <em>expr</em>. A sintaxe de <em>expr</em> é a mesma de
      <em>--trees</em>, incluindo as especificações mágicas. Entretanto, as
      árvores que casarem são excluídas no lugar de incluídas. Note que árvores
      que casem tanto com <em>--trees</em> quanto com <em>--exclude-trees</em>
      são excluídas.</p>

      <p>Exemplos de <em>--trees</em> e <em>--exclude-trees</em>:</p>

      <ul>
        <li>
          <code>fink --trees=stable,virtual,status install <em>foo</em></code> 

          <p>Instala <em>foo</em> como se o <code>fink</code> estivesse usando
          a árvore stable mesmo que unstable esteja habilitada em
          <filename>fink.conf</filename>.</p>
        </li>

        <li>
          <code>fink --exclude-trees=local install <em>foo</em></code> 

          <p>Instala a versão de <em>foo</em> que estiver no Fink e não a
          versão que foi modificada localmente.</p>
        </li>

        <li>
          <code>fink --trees=local/main list -i</code>

          <p>Lista pacotes modificados localmente que foram instalados.</p>
        </li>
      </ul>

      <p>A maior parte destas opções são autoexplicativas. Várias também podem
      ser definidas no <xref chapter="conf">arquivo de configuração do
      Fink</xref> (<filename>fink.conf</filename>) caso queira defini-las
      permanentemente e não apenas para uma execução do <code>fink</code> em
      particular.</p>
    </section>

    <section name="install">
      <title>install</title>

      <p>O comando <em>install</em> é usado para instalar pacotes. Ele baixa,
      configura, compila e instala os pacotes cujo nome você fornecer. Ele
      também instala automaticamente as dependências necessárias mas irá
      pedir-lhe confirmação antes de fazê-lo. Exemplo:</p>
      
      <codeblock>fink install nedit

Reading package info...
Information about 131 packages read.
The following additional package will be installed:
 lesstif
Do you want to continue? [Y/n]</codeblock>
      <p>O uso da opção <xref section="options">--use-binary-dist</xref> com
      <code>fink install</code> pode aumentar significativamente a velocidade
      de compilação de pacotes complicados.</p>

      <p>Apelidos para o comando install: <em>update, enable, activate,
      use</em> (a maior parte destes por motivos históricos).</p>
    </section>

    <section name="remove">
      <title>remove</title>

      <p>O comando remove elimina pacotes do sistema por intermédio do comando
      '<code>dpkg --remove</code>'. A implementação possui uma falha: ela não
      verifica dependências por si própria mas sim delega toda a verificação
      para a ferramenta dpkg. Normalmente isto não causa problemas.</p>

      <p>O comando <em>remove</em> somente elimina os arquivos do pacote (a
      menos dos arquivos de configuração), deixando intacto o arquivo
      <filename>.deb</filename> contendo o pacote. Isto significa que você pode
      reinstalar um pacote mais tarde sem precisar passar novamente pelo
      processo de compilação. Se você precisar liberar espaço em disco, você
      pode remover os arquivos <filename>.deb</filename> na árvore
      <filename>/sw/fink/dists</filename>.</p>

      <p>As opções a seguir podem ser usadas em conjunto com o comando <em>fink
      remove</em>.</p>

      <codeblock>-h,--help       - Exibe as opções disponíveis.
-r,--recursive  - Também remove pacotes que dependam do(s) pacote(s) a ser(em) removido(s)
                  (ou seja, uma solução para a falha mencionada acima).</codeblock>

      <p>Apelidos: <em>disable, deactivate, unuse, delete</em>.</p>
    </section>

    <section name="purge">
      <title>purge</title>

      <p>O comando <em>purge</em> elimina pacotes do sistema. Executa o mesmo
      que o comando <em>remove</em> e também elimina arquivos de
      configuração.</p>

      <p>As seguintes opções são reconhecidas pelo comando:</p>
      <codeblock>-h,--help
-r,--recursive</codeblock>
    </section>

    <section name="update-all">
      <title>update-all</title>

      <p>Este comando atualiza todos os pacotes instalados para que estejam na
      versão mais recente. Ele não precisa de que você informe uma lista de
      pacotes, bastando digitar:</p>

      <codeblock>fink update-all</codeblock>
      <p>A opção <xref section="options">--use-binary-dist</xref> também é útil
      para este comando.</p>
    </section>

    <section name="list">
      <title>list</title>

      <p>Este comando produz uma lista dos pacotes disponíveis, exibindo o
      status de instalação, a versão mais recente e uma descrição curta. Caso
      você o execute sem parâmetros, ele listará todos os pacotes disponíveis.
      Você também pode passar um nome ou padrão do shell e o fink listará todos
      os pacotes que casarem.</p>

      <p>A primeira coluna mostra o status da instalação com os seguintes
      significados:</p>
      <codeblock>    não instalado
 i  a versão mais recente está instalada
(i) instalado, mas uma versão mais recente está disponível
 p  um pacote virtual provido por um pacote que esteja instalado</codeblock>

      <p>A coluna de versão sempre lista a versão mais recente (maior)
      conhecida para um dado pacote independentemente de qual versão esteja
      instalada, caso esteja. Para ver todas as versões de um pacote
      disponíveis para o seu sistema, use o comando <xref
      section="dumpinfo">dumpinfo</xref>.</p>

      <p>O comando <code>fink list</code> também aceita algumas opções:</p>

      <codeblock>
-h,--help
	  Exibe as informações disponíveis.
-t,--tab
          Exibe a lista em formato delimitado por tabulações, útil para
          processar a saída através de um script.
-i,--installed
          Exibe apenas os pacotes que estejam instalados.
-o,--outdated
          Exibe apenas os pacotes que estejam desatualizados.
-u,--uptodate
          Exibe apenas os pacotes que estejam atualizados.
-n,--notinstalled
          Exibe apenas os pacotes que não estejam instalados.
-s expr,--section=expr
          Exibe apenas os pacotes cujas seções casem com a expressão
          regular expr.
-m expr,--maintainer=expr
          Exibe apenas os pacotes cujo mantenedor case com a expressão
          regular expr.
-w=xyz,--width=xyz
          Define a largura da tela de saída para a qual você deseja
          formatar a saída. xyz é ou um valor numérico ou auto.
          auto irá definir a largura com base na largura do terminal.
          O valor padrão é auto.</codeblock>

      <p>Alguns exemplos de uso:</p>

      <codeblock>
fink list                 - lista todos os pacotes
fink list bash            - verifica se o bash está disponível e em que versão
fink list --tab --outdated | cut -f 2     
                          - lista apenas os nomes de pacotes desatualizados
fink list --section=kde   - lista os pacotes na seção kde
fink list --maintainer=fink-devel
                          - lista os pacotes sem mantenedores
fink --trees=unstable list --maintainer=fink-devel
                          - lista os pacotes sem mantenedores e que estejam
                            na árvore unstable
fink list "gnome*"        - lista todos os pacotes cujos nomes comecem com
                            'gnome'</codeblock>

      <p>As aspas no último exemplo são necessárias para impedir que o shell
      interprete o padrão.</p>
    </section>

    <section name="apropos">
      <title>apropos</title>

      <p>Este comando se comporta de forma quase idêntica a <xref
      section="list">fink list</xref>. A maior diferença é que o <code>fink
      apropos</code> também lê as descrições de pacotes para buscar pacotes. A
      segunda diferença é que a string de pesquisa precisa ser fornecida, não
      sendo opcional.</p>

      <codeblock>
fink apropos irc          - lista os pacotes para os quais 'irc' aparece
			    no nome ou na descrição.
fink apropos -s=kde irc   - o mesmo que acima, mas restrito a pacotes que
			    estejam na seção kde.</codeblock>
    </section>

    <section name="describe">
      <title>describe</title>

      <p>Este comando exibe uma descrição do pacote cujo nome você haja
      fornecido na linha de comando. Note que somente uma pequena parte dos
      pacotes possui uma descrição.</p>

      <p>Apelidos: <em>desc, description, info</em></p>
    </section>

    <section name="plugins">
      <title>plugins</title>

      <p>Lista os plugins (opcionais) disponíveis para o programa
      <code>fink</code>. Atualmente lista os mecanismos de notificação e
      algoritmos para detecção de erros nos tarballs com códigos fontes.</p>
    </section>

    <section name="fetch">
      <title>fetch</title>

      <p>Baixa os pacotes enumerados mas não os instala. Este comando irá
      baixar os tarballs mesmo que eles já tenham sido baixados
      previamente.</p>

      <p>As seguintes opções podem ser usadas com o comando
      <code>fetch</code>:</p>

      <codeblock>-h,--help		Exibe as opções disponíveis.
-i,--ignore-restrictive	Não baixa pacotes com License: Restrictive.
                        Útil para espelhos porque alguns pacotes com licenças
                        restritivas não permitem que sejam espelhados.
-d,--dry-run		Exibe apenas informações sobre o(s) arquivo(s) que
                        seria(m) baixado(s) para baixar o pacote; não faça
                        efetivamente o download.
-r,--recursive		Baixe também pacotes que sejam dependências do(s)
                        pacote(s) a ser(s) baixado(s).</codeblock>
    </section>

    <section name="fetch-all">
      <title>fetch-all</title>

      <p>Baixa <em>todos</em> os arquivos com os códigos fontes dos pacotes. Da
      mesma forma que <xref section="fetch">fetch</xref>, os tarballs são
      baixados mesmo que já o tenham sido anteriormente.</p>

      <p>As seguintes opções podem ser usadas com o comando <code>fink
      fetch-all</code>:</p>

      <codeblock>-h,--help
-i,--ignore-restrictive
-d,--dry-run</codeblock>
    </section>

    <section name="fetch-missing">
      <title>fetch-missing</title>

      <p>Baixa <em>todos</em> os arquivos com os códigos fontes de pacotes que
      estejam faltando. Este comando somente baixará arquivos que não estejam
      presentes no sistema.</p>

      <p>Ass eguintes opções podem ser usadas com o comando <code>fink
      fetch-missing</code>:</p>

      <codeblock>-h,--help
-i,--ignore-restrictive
-d,--dry-run</codeblock>
    </section>

    <section name="build">
      <title>build</title>

      <p>Compila um pacote mas não o instala. Como de hábito, os tarballs
      contendo os códigos fontes são baixados caso não possam ser encontrados.
      O resultado deste comando é um arquivo de pacote .deb instalável que pode
      ser usado posteriormente para rapidamente instalar o pacote através do
      comando install. Este comando não fará nada caso o arquivo .deb já
      exista. Note que as dependências ainda são <em>instaladas</em> e não
      apenas compiladas.</p>

      <p>A <xref section="options">opção --use-binary-dist option</xref> pode
      ser usada com este comando.</p>
    </section>

    <section name="rebuild">
      <title>rebuild</title>

      <p>Compila um pacote (da mesma forma que o comando build) mas ignora e
      sobrescreve o arquivo .deb já existente. Se o pacote for instalado, o
      recém-criado arquivo .deb também pode ser instalado no sistema através do
      <code>dpkg</code>. Bastante útil durante o desenvolvimento de
      pacotes.</p>
    </section>

    <section name="reinstall">
      <title>reinstall</title>

      <p>Igual ao install porém o pacote será instalado via <code>dpkg</code>
      mesmo que ele já esteja instalado. Você pode usar este comando caso tenha
      acidentalmente apagado arquivos de um pacote ou mudado arquivos de
      configuração e queira ter a configuração inicial de volta.</p>
    </section>

    <section name="configure">
      <title>configure</title>

      <p>Roda novamente o processo de configuração do <code>fink</code>. Dentre
      outros, permite que você mude a configuração dos servidores espelhos ou
      de proxy.</p>

      <p><em>Característica nova</em> no <code>fink-0.26.0</code>: este comando
      também permite que você habilite árvores unstable caso queira.</p>
    </section>

    <section name="selfupdate">
      <title>selfupdate</title>

      <p>Este comando automatiza o processo de atualização para uma nova versão
      do Fink. Ele verifica o site do Fink para ver se uma nova versão está
      disponível. Em seguida, ele baixa as descrições de pacotes e atualiza os
      pacotes básicos incluindo o próprio <code>fink</code>. Este comando pode
      fazer a atualização para versões regulares e também configurar seu
      diretório <filename>/sw/fink/dists</filename> para atualizações diretas
      por meio de git ou rsync caso você tenha selecionado uma destas opções na
      primeira vez em que o comando for executado. Isto significa que você
      poderá portanto acessar as últimas versões de todos os pacotes.</p>

      <p>Caso a <xref section="options">opção --use-binary-dist</xref> esteja
      habilitada, a lista de pacotes disponíveis na distribuição de binários
      também será atualizada.</p>
    </section>

    <section name="selfupdate-rsync">
      <title>selfupdate-rsync</title>

      <p>Use este comando para fazer com que <code>fink selfupdate</code> use o
      rsync para atualizar sua lsitagem de pacotes.</p>

      <p>Esta é a forma recomendada para atualizar o Fink quando se compila a
      partir do código fonte.</p>

      <p><em>Observação:</em> atualizações via rsync somente atualizam as <xref
      chapter="conf" section="optional">árvores</xref> ativas (por exemplo, se
      unstable não estiver habilitada no <code>fink.conf</code> então a lista
      de pacotes instáveis não será atualizada.</p>
    </section>

    <section name="selfupdate-git">
      <title>selfupdate-git</title>

      <p>Use este comando para fazer com que <code>fink selfupdate</code> use
      acesso Git para atualizar sua listagem de pacotes.</p>

      <p>A atualização do Rsync é preferida, exceto para desenvolvedores e pessoas
      que estão por trás de firewalls que não permitem o rsync.</p>
    </section>

    <section name="index">
      <title>index</title>

      <p>Reconstrói o cache de pacotes. Normalmente você não precisa executar
      este comando manualmente já que o <code>fink</code> deveria detectar
      automaticamente se precisa ser atualizado.</p>
    </section>

    <section name="validate">
      <title>validate</title>

      <p>Este comando executa várias validações em arquivos
      <filename>.info</filename> e <filename>.deb</filename>. Mantenedores de
      pacotes devem rodar este comando em suas descrições de pacotes e pacotes
      compilados correspondentes antes de os submeter.</p>

      <p>As seguintes opções facultativas podem ser usadas:</p>

      <codeblock>-h,--help            - Exibe as opções disponíveis.
-p,--prefix          - Simula um prefixo de diretório base alternativo nos
                       arquivos sendo validados.
--pedantic, --no-pedantic
                     - Controla a exibição de avisos de formatação.
                      --pedantic é o padrão.</codeblock>

      <p>Apelidos: <em>check</em></p>
    </section>

    <section name="scanpackages">
      <title>scanpackages</title>

      <p>Atualiza o banco de dados de .debs do <code>apt-get</code>. O padrão é
      atualizar todas as árvores mas isto pode ser restrito a uma ou mais
      árvores especificadas como argumentos.</p>
    </section>

    <section name="cleanup">
      <title>cleanup</title>

      <p>Remove arquivos obsoletos e temporários. Este comando pode liberar
      bastante espaço em disco. Um ou vários modos podem ser especificados:</p>

      <codeblock>--debs               - Remove arquivos .deb (pacotes de binários compilados)
                       correspondentes às versões de pacotes que não estejam nem
                       descritas por um arquivo de descrição de pacote (.info)
                       nas árvores ativas nem instaladas no momento.
--sources,--srcs     - Remove códigos fontes (tarballs, etc) que não estejam sendo
                       usadas por algum arquivo de descrição de pacotes (.info) nas
                       árvores ativas no momento.
--buildlocks, --bl   - Remove pacotes cuja compilação tenha travado.
--dpkg-status        - Remove do banco de dados de status do dpkg as entradas de
                       pacotes que não estejam instalados.
--obsolete-packages  - Tenta desinstalar todos os pacotes que estejam obsoletos
                       (característica nova no fink-0.26.0).
--all                - Todos os modos acima (característica nova no fink-0.26.0).</codeblock>

      <p>Caso nenhum modo tenha sido especificado, a ação padrão é <code>--debs
      --sources</code>.</p>

      <p>Além disso, as seguintes opções podem ser usadas:</p>

      <codeblock>-k,--keep-src        - Move arquivos antigos com código fonte para /sw/src/old no
                                        lugar de os remover.
-d,--dry-run         - Imprime os nomes dos arquivos que seriam removidos mas
                       não os remove de fato.
-h,--help            - Exibe os modos e opções disponíveis.</codeblock>
      <!--TODO:  current branch_0_25 fink scanpackages with no mode specified combines the effects of the - - debs and - - srcs modes; update when 0.25.1 is released-->
    </section>

    <section name="dumpinfo">
      <title>dumpinfo</title>

      <p>Exibe como o <code>fink</code> analisa as partes de um arquivo de
      pacote <filename>.info</filename>. Vários campos e expansões de códigos
      serão exibidos conforme as <em>opções</em> abaixo:</p>

      <codeblock>-h, --help           - Exibe as opções disponíveis.
-a, --all            - Exibe todos os campos da descrição do pacote. É o modo
                       padrão quando nem --field ou --percent forem informados.
-f fieldname,        - Mostra os campos na ordem
  --field=fieldname    em que forem listados.
-p key,              - Mostra os códigos de expansão na
   --percent=key       ordem em que forem listados.</codeblock>
    </section>

    <section name="show-deps">
      <title>show-deps</title>

      <p>Exibe uma lista legível das dependências, tanto de compilação quanto
      de execução (instalação), dos pacotes listados.</p>
    </section>
  </chapter>
</document>
