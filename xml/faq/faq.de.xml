<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document SYSTEM "../finkfaq.dtd">
<document filename="index" lang="de">
  <title>Die Fink F.A.Q.</title>
  <shorttitle>F.A.Q.</shorttitle>
  <cvsid>$Id: faq.de.xml,v 1.126 2020/05/31 13:43:40 nieder Exp $</cvsid>
  <preface>
    <p>Die ist eine Liste der häufig gestellten Fragen über Fink. Wie in den
      meisten FAQs wurden einige tatsächlich gestellt, andere wurden ausgedacht.
      Diese Dokumentation wurde in einem ad-hoc, Frage-und-Antwort-Stil
      geschrieben.</p>
    <p>Diese FAQ hat mehrere Seiten, jeweils eine pro Abschnitt. Alle Fragen
      sind im Inhaltsverzeichnis aufgelistet und verlinkt.</p>
  </preface>
  <chapter filename="general">
    <title>Allgemeine Fragen</title>
    <shorttitle>Allgemeines</shorttitle>
    <faqentry name="what">
      <question>
        <p>Was ist Fink?</p>
      </question>
      <answer>
        <p>Fink will mehr Unix-Programme auf Mac OS X zur Verfügung stellen.
          Daraus ergeben sich zwei Ziele:</p>
        <p>Das erste Ziel ist Programme nach Mac OS X zu portieren. Das bedeutet,
          dass wir Open-Source Unix-Programme hernehmen und alles korrigieren,
          damit sie auf Mac OS X übersetzt werden kann und lauft. Das ist bei
          manchen Paketen ganz leicht, bei anderen aber sehr schwierig oder gar
          unmöglich. Wo immer möglich, versucht Fink dies durch Hilfsmittel und
          Dokumentation zu erleichtern.</p>
        <p>Das zweite Ziel ist, die Ergebnisse für normale Nutzer zur Verfügung
          stellen. Dazu wird eine sogenannte Distribution mit
          Paket-Management-Tools erzeugt, die von Linux nach Mac OS X portiert
          wurden, insbesondere <code>dpkg</code> und <code>apt-get</code>, die
          von und für das Projekt
          <link url="http://www.debian.org/">Debian GNU/Linux</link>
          geschrieben wurden. Die binäre Distribution benutzt das
          <code>.deb</code> Paketformat. Für die Erstellung der Pakete aus den
          Quellen verwenden wir unser eigene Tool, <code>fink</code>, das die
          <code>.deb</code> Paketdateien erzeugt.</p>
      </answer>
    </faqentry>
    <faqentry name="naming">
      <question>
        <p>Welche Bedeutung hat der Name Fink?</p>
      </question>
      <answer>
        <p>Keine. Es ist nicht einmal ein Akronym.</p>
        <p>Wie sie wissen, ist ein Fink ein Vogel. Ausgehend vom Namen des
          Betriebssystem, Darwin, dachten die Gründer von Fink an Charles
          Darwin, die Galapagos-Inseln, Evolution, die Darwin-Finken und ihre
          Schnäbel im Schulbuch. Das ist alles.</p>
      </answer>
    </faqentry>
    <faqentry name="bsd-ports">
      <question>
        <p>Wie unterscheidet sich Fink vom BSD-Port-Mechanismus, einschließlich
          OpenPackages und GNU-Darwin?</p>
      </question>
      <answer>
        <p>Die wichtigsten Vorteil:</p>
        <ul>
          <li>
            <p>Fink ist in Perl geschrieben und nicht mit make/shell. Es
              verlässt sich folglich nicht auf Besonderheiten in BSD make und
              braucht keine Kennzeichen für Pakete, die GNU make benötigen.</p>
          </li>
          <li>
            <p>dpkg ist ein mächtiges Hilfsmittel für die Verwaltung binärer
              Pakete - einfache Updates, separate Behandlung von
              Konfigurationsdateien, virtuelle Pakete und weitere anspruchsvolle
              Abhängigkeiten.</p>
          </li>
          <li>
            <p>Fink installiert nichts in /usr/local außer es wird explizit
              verlangt. Es kommt ohne Tricksereien mit /usr/bin/make oder
              anderen Systemtools aus. Dadurch ist Fink sicherer zu benutzen und
              verringert Konflikte mit Mac OS X und Dritt-Software auf ein
              Minimum.</p>
          </li>
        </ul>
      </answer>
    </faqentry>
    <faqentry name="usr-local">
      <question>
        <p>Warum installiert Fink nichts in /usr/local?</p>
      </question>
      <answer>
        <p>Es gibt mehrere Gründe, aber das gemeinsame für alle ist, dass sonst
          mehr oder weniger schlimme Abstürze passieren.</p>
        <p>1. Grund: Dritt-Software. In /usr/local wird üblicherweise Software
          installiert, die nicht zum Ursprungs-System gehört. Deshalb sieht es
          zunächst wie ein guter Platz aus, aber Software von anderen wird
          ebenfalls dort installiert, dabei wird meistens einfach überschrieben,
          wenn etwas schon vorhanden ist, auch von dpkg. Man könnte natürlich
          auch irgendwo anders installieren, aber meistens wird dies bei der
          Installation nicht abgefragt.</p>
        <p>2. Grund: /usr/local/bin ist Teil des Standard-PATH. Der Vorteil ist,
          dass alles von einer Shell gefunden wird. Es wird aber aufwändig, wenn
          man etwas ausschalten möchte und kann sich im Extremfall über
          Shell-Skripte sogar im System auswirken.</p>
        <p>3. Grund: Die Compiler-Tools suchen standardmäßig in /usr/local. Der
          Compiler sucht in /usr/local/include nach Header-Dateien und der
          Linker in /usr/local/lib nach Bibliotheken. Das hört sich zunächst als
          sehr praktisch an, aber ausschalten ist sehr schwierig. Man kann den
          Compiler sehr leicht durcheinander bringen, indem man eine Datei mit
          Müll und dem Namen <code>stdio.h</code> in /usr/local/include
          ablegt.</p>
        <p>Sie wurden gewarnt! Es ist möglich, dass Fink in /usr/local
          installiert. Das Installations-Skript wird sie ausdrücklich warnen,
          aber fortfahren, nachdem sie bestätigt haben, dass es auf ihr eigenes
          Risiko weiter machen soll.</p>
      </answer>
    </faqentry>
    <faqentry name="why-sw">
      <question>
        <p>Wieso /sw?</p>
      </question>
      <answer>
        <p>Die Wahl war ziemlich willkürlich, aber es sieht danach aus, dass es
          in absehbarer Zukunft für updates so bleiben kann und vor Konflikten
          mit anderer Software sicher ist.</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="relations">
    <title>Verbindungen zu anderen Projekten</title>
    <shorttitle>Verbindungen</shorttitle>
    <faqentry name="upstream">
      <question>
        <p>Geben sie ihre Verbesserungen an die originalen Autoren weiter?</p>
      </question>
      <answer>
        <p>Wir versuchen es. Manchmal ist es einfach und alle sind froh, wenn
          die nächste Version des Pakets veröffentlicht wird. Leider ist es aber
          nicht immer so einfach. Die üblichen Probleme:</p>
        <ul>
          <li>Der Autor des Fink-Pakets ist sehr beschäftigt und hat keine Zeit
            die Verbesserungen und die Erklärungen dazu an die Original-Autoren
            zu schicken.</li>
          <li>Die Original-Autoren lehnen die Verbesserungen ab. Dafür gibt es
            jede Menge gute Gründe. Die meisten Original-Autoren wollen sauberen
            Code, saubere Tests der Konfiguration und Kompatibilität mit anderen
            Platformen.</li>
          <li>Die Original-Autoren akzeptieren die Verbesserungen, aber es
            dauert Wochen oder Monate, bis sie einen neue Version ihrer Software
            veröffentlichen.</li>
          <li>Die Software wurde von den Original-Autoren aufgegeben und es wird
            keine neue Version mehr davon geben, in die die Verbesserungen
            eingepflegt werden könnten.</li>
        </ul>
      </answer>
    </faqentry>
    <faqentry name="debian">
      <question>
        <p>Wie ist ihr Verhältnis zum Projekt Debian? Portieren sie Debian Linux
          nach Mac OS X?</p>
      </question>
      <answer>
        <p>Es gibt keine formelle Beziehung zwischen Fink und
          <link url="http://www.debian.org">Debian</link>.
          Fink ist <em>kein</em> Port der Debian-GNU/Linux-Distribution. Wir
          haben die Debian-Tools für die Paketverwaltung (dpkg, dselect und
          apt-get) portiert und benutzen diese Tools und das binäre .deb
          Paket-Format. Die eigentlichen Pakete sind für Mac OS X / Darwin
          maßgeschneidert und nutzt nicht das Quell-Paket-Format von Debian.</p>
      </answer>
    </faqentry>
    <faqentry name="apple">
      <question>
        <p>Wie ist ihr Verhältnis zu Apple?</p>
      </question>
      <answer>
        <p>
          <link url="http://www.apple.com/">Apple</link> kennt Fink und gab Fink
          als Teil seiner Open-Source-Anstrengungen einiges an Unterstützung.
          Im Sommer und Herbst 2001 erhielten wir eine Vorversion des neuen
          Mac OS X, damit die Anpassungen der Fink-Pakete zum
          Veröffentlichungstermin abgeschlossen sein können. Zitat:
          <em>"Hopefully it underscores the commitment that many suspect we're
          not willing to provide. We'll get better at the open source game over
          time."</em> Herzlichen Dank an Apple!</p>
      </answer>
    </faqentry>
    <faqentry name="darwinports">
      <question>
        <p>Wie ist ihr Verhältnis zu Darwinports?</p>
      </question>
      <answer>
        <p>Darwinports und Fink sind sich ergänzende Projekte und mehrere Leute
          unterstützen Projekte in Fink und DarwinPorts. Benjamin Reed ist zum
          Beispiel Autor der KDE-Pakete bei beiden. Darwinports und Fink
          profitieren wechselseitig von ihren Patches und es gibt Anstrengungen
          zu einer neuen Engine für Abhängigkeiten.</p>
        <p>DarwinPorts beginnt von Grund auf neu mit einem anderen Ansatz für
          das System für die Erstellung der Pakete. Weitere Details dazu auf der
          Webseite
          <link url="http://darwinports.opendarwin.org/">the DarwinPorts homepage</link>
          .</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="mirrors">
    <title>Fink-Spiegelserver</title>
    <shorttitle>Spiegelserver</shorttitle>
    <faqentry name="when-use">
      <question>
        <p>Was sind Fink-Spiegelserver?</p>
      </question>
      <answer>
        <p>Fink-Spiegelserver sind rsync-Server, die die laufenden und stabilen
          Beschreibungsdateien spiegeln, mit denen Fink die Pakete aus den
          Quellen erstellt.</p>
      </answer>
    </faqentry>
    <faqentry name="why">
      <question>
        <p>Warum sollte ich rsync-Spiegelserver nutzen?</p>
      </question>
      <answer>
        <p>Rsync ist ein sehr schnelles Protokoll. Es aktualisiert die
          Paketbeschreibungen schneller als die alte Aktualisierung mit CVS.
          Darüber hinaus werden Aktualisierungen mit CVS immer sourceforge.net
          nutzen, während die Aktualisierung mit rsync von einem Spiegelserver
          in ihrer Nähe gemacht werden können.</p>
      </answer>
    </faqentry>
    <faqentry name="where">
      <question>
        <p>Wo finde ich mehr über Fink-Spiegelserver?</p>
      </question>
      <answer>
        <p>Alle Fink-Spiegelserver werden unter der Domäne finkmirrors.net
          zusammen geführt. Die Webseite
          <link url="http://finkmirrors.net/">finkmirrors.net</link>
          hat weitere Informationen.</p>
      </answer>
    </faqentry>
    <faqentry name="when-not">
      <question>
        <p>Ich bekomme keine Verbindung zu einem rsync-Spiegelserver. Was soll
          ich tun?</p>
      </question>
      <answer>
        <p>Manchmal verbieten sehr strenge Firewall-Regeln eine Verbindung zu
          rsync-Spiegelservern. In solchen Fällen verwenden sie einfach die
          CVS-Methode.</p>
      </answer>
    </faqentry>
    <faqentry name="otherinfogone">
      <question>
        <p>Nach der Umstellung auf rsync sind alle info-Dateien aus dem
          unbenutzten Baum weg.</p>
      </question>
      <answer>
        <p>Das ist normal. Die Aktualisierung mit rsync bearbeitet nur den
          aktiven Baum und wird alle Unterverzeichnisse von CVS löschen.</p>
      </answer>
    </faqentry>
    <faqentry name="howswitch">
      <question>
        <p>Wie kann ich zwischen den beiden Methoden hin- und herschalten?</p>
      </question>
      <answer>
        <p>Einfach mit den Kommandos <code>fink selfupdate-rsync</code>
          und <code>fink selfupdate-cvs</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="Master">
      <question>
        <p>Was ist ein Spiegelserver für Distfiles?</p>
      </question>
      <answer>
        <p>Manchmal sind bestimmte Versionen von Quellen schwer zu erhalten.
          Spiegelserver für Distfiles behalten und spiegeln die Quellen, die
          Fink für seine Quell-Pakete benötigt.</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="upgrade-fink">
    <title>Fink aktualisieren(versions-spezifische Probleme)</title>
    <shorttitle>Fink aktualisieren</shorttitle>
    <faqentry name="leopard-bindist1">
      <question>
        <p>Fink erkennt keine neuen Pakete, selbst nach einem selfupdate mit
          rsync oder cvs.</p>
      </question>
      <answer>
        <p>Das ist ein gängiges Problem, wenn man auf OS X 10.5 den binären
          Installer benutzt. Überprüfen sie die Version von Fink:</p>
        <codeblock>fink --version</codeblock>
        <p>Wenn sie derzeit die Version <code>fink-0.27.13-41</code> haben, das
          die Version ist, den der Installer verwendet, oder die Version
          <code>fink-0.27.16-41</code>, gibt es eine Reihe von Optionen.</p>
        <ul>
          <li>
            <em>rsync (vorzugsweise):</em> Führen sie folgende Befehlssequenz
            aus:
<codeblock>fink selfupdate
fink selfupdate-rsync
fink index -f
fink selfupdate</codeblock>
	        </li>
	        <li>
	          <em>cvs (alternativ):</em> Führen sie folgende Befehlssequenz aus:
<codeblock>fink selfupdate-cvs
fink index -f
fink selfupdate</codeblock>
	        </li>
	      </ul>
        <p>Beides wird die neueste Version von <code>fink</code>
          installieren.</p>
      </answer>
    </faqentry>
    <faqentry name="leopard-bindist2">
      <question>
        <p>Wenn ich versuche etwas zu installiere, bekommen ich die Meldung
          'Can't resolve dependency "fink (>= 0.28.0)"'</p>
      </question>
      <answer>
        <p>Aktualisieren sie Fink wie im
          <xref section="leopard-bindist1">vorigen Abschnitt</xref>
          beschrieben.</p>
      </answer>
    </faqentry>
    <faqentry name="stuck-gettext">
      <question>
        <p>Fink verlangt, das Kommando 'sudo apt-get install
          libgettext3-dev=0.14.5-2' auszuführen, um inkonsistente Abhängigkeiten
          aufzulösen, aber alles steckt fest.</p>
      </question>
      <answer>
        <p>Die Paketbeschreibung von <em>libgettext3</em> hat ein
          Zeitstempel-Problem. Version 0.14.5-2 ist veraltet. Führen sie
          folgende Kommandos aus:</p>
<codeblock>fink index -f
fink update libgettext3-dev</codeblock>
	      <p>Dies aktualisiert zuerst den Paketbeschreibungs-Cache und dann das
          Paket.</p>
      </answer>
    </faqentry>
    <faqentry name="stuck-dpkg">
      <question>
        <p>Fink meldet 'Can't resolve dependency "dpkg (>= 1.10.21-1229)" für
          das Paket "dpkg-base-files-0.3-1"'. Wie löse ich das Problem?</p>
      </question>
      <answer>
        <p>Die aktualisierte Paketbeschreibung von <em>dpkg</em> hat ein
          Zeitstempel-Problem. Führen sie folgende Kommandos aus:</p>
<codeblock>fink index -f
fink selfupdate</codeblock>
	      <p>Dies aktualisiert zuerst den Paketbeschreibungs-Cache und installiert
          dann <code>dpkg</code> und <code>dpkg-base-files</code>.</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="usage-fink">
    <title>Fink installieren, benutzen und pflegen</title>
    <shorttitle>Fink Benutzung</shorttitle>
    <faqentry name="what-packages">
      <question>
        <p>Wie finde ich heraus, welche Pakete Fink zur Verfügung stellt?</p>
      </question>
      <answer>
        <p>Ab der Version 0.2.3 hat Fink das Kommando <code>list</code>. Es
          listet alle Pakete auf, die Fink kennt. Beispiel:</p>
<codeblock>fink list</codeblock>
        <p>Verwenden sie die binäre Distribution, dann erzeugt auch
          <code>dselect</code> eine Liste aller Pakete, die man leicht
          durchzublättern kann. Beachten sie, dass sie es mit
          Administratorrechten (root) ausführen müssen, wenn sie mit dselect
          Pakete installieren wollen.</p>
        <p>Auf der <link url="http://pdb.finkproject.org/pdb/">Webseite</link>
          gibt es auch eine Datenbank aller Pakete.</p>
      </answer>
    </faqentry>
    <faqentry name="proxy">
      <question>
        <p>Ich befinde mich hinter einer Firewall. Wie konfiguriere ich Fink,
          dass es einen HTTP-Proxy benutzt?</p>
      </question>
      <answer>
        <p>Das Kommando <code>fink</code> unterstützt explizite
          Proxy-Einstellungen, die an <code>wget</code>/<code>curl</code>
          weiter gereicht werden. Wurde man bei der erstmaligen Installation
          nicht nach Proxies gefragt, kann man das Kommando
          <code>fink configure</code> ausführen, um es einzurichten. Es kann
          jederzeit ausgeführt werden, um die Einstellungen von Fink zu ändern.
          Sind sie der Anleitung für die Installation gefolgt sind und
          <filename>/sw/bin/init.csh</filename> (oder
          <filename>/sw/bin/init.sh</filename>) benutzen, dann werden auch
          <code>apt-get</code> und <code>dselect</code> die Proxy-Einstellungen
          nutzen. Beachten sie, dass sie das Protokoll vor die Adresse stellen,
          zum Beispiel:</p>
<codeblock>ftp://proxy.yoursite.somewhere</codeblock>
        <p>Gibt es immer noch Probleme, öffnen sie die Systemeinstellungen,
          wählen sie Netzwerk aus und dort die Proxy-Einstellungen. Dort muss
          die Einstellung "Passiven FTP-Modus (PASV) verwenden" eingeschaltet
          sein.</p>
      </answer>
    </faqentry>
    <faqentry name="firewalled-cvs">
      <question>
        <p>Wie aktualisiere ich Pakete mit cvs, wenn ich mich hinter einer
          Firewall befinde?</p>
      </question>
      <answer>
        <p>Das Paket <em>cvs-proxy</em> kann durch HTTP-Proxies tunneln.</p>
        <ul>
          <li>
            <p>Installieren sie das Paket <em>cvs-proxy</em> mit dem
              Kommando:</p>
<codeblock>fink --use-binary-dist install <em>cvs-proxy</em></codeblock>
          </li>
          <li>
            <p>Wechseln sie zur Aktualisierung mit CVS mit dem Kommado:</p>
<codeblock>fink selfupdate-cvs</codeblock>
          </li>
        </ul>
        <p>Ist Fink nicht konfiguriert, den Proxy zu verwenden, ändern sie die
          Einstellungen mit:</p>
<codeblock>fink configure</codeblock>
      </answer>
    </faqentry>
    <faqentry name="moving">
      <question>
        <p>Kann ich Fink nach der Installation an eine andere Stelle
          verschieben?</p>
      </question>
      <answer>
        <p>Nein. Natürlich kann man die Dateien mit dem Kommando mv oder im
          Finder verschieben, aber 99% der Programme werden danach nicht mehr
          funktionieren, weil letztlich alle Unix-Programme mit fest
          eingestellten Pfaden verwenden, um Daten, Bibliotheken und anderes zu
          finden.</p>
      </answer>
    </faqentry>
    <faqentry name="moving-symlink">
      <question>
        <p>Funktioniert es, wenn man Fink nach der Installation verschiebt und
          dann einen symbolischen Link von der alten Stelle erzeugt?</p>
      </question>
      <answer>
        <p>Vielleicht. Im allgemeinen sollte es funktionieren, aber es kann
          versteckte FAllen geben.</p>
      </answer>
    </faqentry>
    <faqentry name="removing">
      <question>
        <p>Wie kann ich Fink komplett deinstallieren?</p>
      </question>
      <answer>
        <p>Fast alle von Fink installierten Dateien sind in
          <filename>/sw</filename> (oder eben da, wo sie es installiert haben).
          Es gibt nur wenige Ausnahmen. Geben sie folgende Befehle ein:</p>
<codeblock>fink remove --recursive daemonic xinitrc
sudo rm -rf /sw</codeblock>
        <p>Wenn sie nicht vorhaben, Fink erneut zu installieren, sollten sie die
          Zeile "<code>source /sw/bin/init.csh</code>" in ihrer Datei
          <filename>.cshrc</filename> löschen mit einem Texteditor oder die
          Zeile "<code>source /sw/bin/init.sh</code>" in der Datei
          <filename>.bashrc</filename>, je nach ihrem Setup.
          Haben sie das Paket <code>xinitrc</code> installiert, sollten sie die
          originale Datei <filename>/usr/X11/lib/X11/xinit/xinitrc</filename>
          wieder herstellen, die mit dem Namen
          <filename>/usr/X11/lib/X11/xinit/xinitrc.YYYYMMDDhhmm</filename>
          gesichert wurde (mit Jahr, Monat, Tag, Stunde und Minute als
          Datei-Extension). Gibt es davon mehrere, das Original enthält
          eigentlich nie <code>sys-xinitrc-fink</code>. Haben sie die richtige
          Datei gefunden, können sie mit folgendem Kommando</p>
<codeblock>sudo mv /usr/X11/lib/X11/xinit/xinitrc.YYYYMMDDhhmm  \
  /usr/X11/lib/X11/xinit/xinitrc</codeblock>
        <p>YYMMDDhhmm durch die eigentliche Extension auf ihrem System
          ersetzen.</p>
      </answer>
    </faqentry>
    <faqentry name="bindist">
      <question>
        <p>Die Paket-Datenbank der Webseite listet das Paket xxx, aber apt-get
          und dselect kennen es nicht. Wer hat recht?</p>
      </question>
      <answer>
        <p>Beide. Die
          <link url="http://pdb.finkproject.org/pdb/">Paket-Datenbank</link>
          kennt jedes Paket, einschließlich der im "unstable" Baum.
          <code>Dselect</code> und <code>apt-get</code> kennen nur Pakete, die
          als vorübersetzte, binäre Pakete zur Verfügung stehen. Es gibt viele
          Gründe, warum ein Paket so nicht zur Verfügung steht. Es muss im
          "stable" Baum der letzten veröffentlichen Version von Fink sein und es
          muss eine Reihe zusätzlicher Tests bestehen, die das Einhalten von
          Regeln und Restriktionen durch Lizensen und Patente überprüfen.</p>
        <p>Wollen sie ein Paket installieren, das nicht in
          <code>dselect</code> / <code>apt-get</code> zur Verfügung steht, dann
          müssen sie es aus den Quellen mit dem Kommando <code>fink install
          <em>packagename</em></code> erzeugen.
          Bevor sie das versuchen, sollten sie überprüfen, ob die Developer
          Tools installiert sind. (Gibt es keinen Installer für die Developer
          Tools im Ordner <code>/Applications</code>, können sie den Installer
          von der Seite
          <link url="http://connect.apple.com/">Apple Developer Connection</link>
          nach einer kostenlosen Registrierung herunter laden). Schauen sie sich
          auch die nächste Frage über den "unstable" Baum an.</p>
      </answer>
    </faqentry>
    <faqentry name="unstable">
      <question>
        <p>Ich möchte ein Paket aus dem "unstable" Baum installieren, aber Fink
          antwortet nur mit 'no package found'. Wie kann ich es installieren?</p>
      </question>
      <answer>
        <p>Informieren sie sich zuerst über die Bedeutung von "unstable". Es
          gibt mehrere Gründe, warum ein Paket nur im "unstable" Baum ist.
          Manchmal gibt es noch bekannte Probleme mit dem Paket, oder einfach
          noch keine Rückmeldungen von Nutzern, dass das Paket funktioniert.
          Deshalb zeigt Fink die Pakete im "unstable" Baum nicht an.</p>
        <p>Aktivieren sie den "unstable" Baum, dann schicken sie bitte eine
          E-Mail an den Autor des Pakets, wenn etwas funktionert oder auch wenn
          nicht. Ihr Rückmeldung entscheidet, ob etwas in den "stable"
          übernommen wird! Informationen über den Autor des Pakets erhalten sie
          mit dem Kommando <code>fink info <em>packagename</em></code>.</p>
        <p>Für <code>fink-0.26</code> und später: Wenn sie das Kommando
          <code>fink configure</code> ausführen, ist eine der Fragen an sie, ob
          der "unstable" Baum eingeschaltet werden soll.</p>
        <p>Bei Fink-Versionen früher als <em>0.26</em> editieren sie die Datei
          <filename>/sw/etc/fink.conf</filename> und fügen sie
          <code>unstable/main</code> und <code>unstable/crypto</code> in der
          Zeile <code>Trees:</code> ein.</p>
        <p>Im Fink Commander gibt es eine Einstellung Pakete aus dem "unstable"
          Baum zu zu benutzen.</p>
        <p>Keine dieser Optionen lädt die Paketbeschreibungen des "unstable"
          Baums herunter. Sie müssen für das Aktualisieren <code>rsync</code>
          oder <code>cvs</code> einschalten, was bei einer neuen
          Fink-Installation nicht der Fall ist. Die folgenden Kommandos
          führen dies bei einer neuen Fink-Installation aus:</p>
<codeblock>fink selfupdate</codeblock>
        <p>gefolgt von</p>
<codeblock>fink selfupdate-rsync</codeblock>
	      <p>oder</p>
<codeblock>fink selfupdate-cvs</codeblock>
	      <p>und dann</p>
<codeblock>fink index -f
fink scanpackages</codeblock>
        <p><em>Bemerkung:</em> Für alle Aktionen gibt es entsprechendes im Fink
          Commander außer dem Kommando <code>fink index -f</code>. Dies muss
          also im Terminal eingegeben werden.</p>
	      <p>Ist die Aktualisierung mit <code>rsync</code> oder <code>cvs</code>
          bereits eingeschaltet, dann reichen folgende Kommandos (oder das
          entsprechende im Fink Commander):</p>
<codeblock>fink selfupdate
fink index
fink scanpackages</codeblock>
        <p>Sind sie sich nicht sicher, welche Aktualisierungsmethode verwendet
          wird, führen sie das Kommmdo <code>fink --version</code> aus und
          schauen sie nach, ob <code>cvs</code> oder <code>rsync</code> erwähnt
          wird.</p>
	      <p>Wollen sie keine Pakete aus dem "unstable" Baum mehr installieren
          wollen, dann nutzen sie den Befehl <code>update-all</code> nicht mehr,
          bis sie den "unstable" Baum wieder ausgeschaltet haben.</p>
      </answer>
    </faqentry>
    <faqentry name="unstable-onepackage">
      <question>
        <p>Muss man <em>wirklich</em> alles aus dem "unstable" Baum
          installieren, obwohl ich nur ein Paket möchte?</p>
      </question>
      <answer>
        <p>Nein, auch wenn wir das ausdrücklich empfehlen. Mischen und Anpassen
          kann zu nicht vorhersehbaren Problemen führen, die sehr schwierig zu
          lösen sind, wenn sie auftreten.</p>
        <p>Soweit so gut. Wenn sie also wirklich nur ein oder zwei Pakete aus
          dem "unstable" Baum installieren wollen, müssen sie zuerst die
          Aktualisierung mit <code>fink selfupdate-cvs</code> auf CVS
          umschalten, weil rsync nur die Bäume aktualisiert, die in der Datei
          <filename>fink.conf</filename> aktiviert sind. Editieren sie die Datei
          <filename>/sw/etc/fink.conf</filename> und fügen sie
          <code>local/main</code> in der Zeile <code>Trees:</code> ein. Danach
          müssen sie das Kommando <code>fink selfupdate</code>, damit die
          Paketbeschreibungen herunter geladen werden. Dann kopieren sie die
          entsprechenden <code>.info</code> (und zugehörige <code>.patch</code>)
          Dateien aus
          <filename>/sw/fink/dists/unstable/main/finkinfo</filename> (oder
          <filename>/sw/fink/dists/unstable/crypto/finkinfo</filename>) nach
          <filename>/sw/fink/dists/local/main/finkinfo</filename>.
          Denken sie aber daran, dass die Pakete von anderen Paketen (oder
          bestimmten Versionen) abhängen können, die ebenfalls nur im "unstable"
          Baum sind. Dann müssen sie auch diese <code>.info</code> und
          <code>.patch</code> Dateien verschieben. Sind alle Dateien verschoben,
          sollten sie das Kommando <code>fink index</code> ausführen, damit die
          Liste der verfügbaren Pakete aktualisiert wird. Wenn sie wollen,
          können sie danach die Aktualisierung mit
          <code>fink selfupdate-rsync</code> wieder auf rsync umstellen.</p>
      </answer>
    </faqentry>
    <faqentry name="sudo">
      <question>
        <p>Ich bin es leid, wieder und wieder für sudo mein Passwort einzugeben.
          Gibt es dafür eine Lösung?</p>
      </question>
      <answer>
        <p>Wenn sie nicht paramoid sind, können sie sudo konfigurieren, dass es
          nicht mehr nach dem Passwort fragt. Starten sie dazu als root
          <code>visudo</code> and fügen sie folgende Zeile hinzu:</p>
<codeblock>username ALL =(ALL) NOPASSWD: ALL</codeblock>
        <p>Esetzen sie <code>username</code> mit ihrem tatsächlichen
          Nutzernamen. Mit dieser Zeile können sie jedes Kommando ausführen,
          ohne ihr Passwort einzugeben..</p>
      </answer>
    </faqentry>
    <faqentry name="exec-init-csh">
      <question>
        <p>Wenn ich die Dateien init.csh or init.sh ausführe, bekomme ich die
          Fehlermeldung "Permission denied". Was mache ich falsch?</p>
      </question>
      <answer>
        <p>init.csh und init.sh sollen eigentlich nicht wie normale Skripte
          ausgeführt werden. Sie setzen in ihrer Shell Umgebungsvariablen wie
          PATH und MANPATH. Damit die Änderungen in der Shell bleibend sind,
          müssen sie für csh/tcsh über das Kommando <code>source</code> und für
          bash/zsh über <code>.</code> ausgeführt werden. Das sieht dann so
          aus:</p>
        <p>für csh/tcsh:</p>
<codeblock>source /sw/bin/init.csh</codeblock>
        <p>für bash/zsh:</p>
<codeblock>. /sw/bin/init.sh</codeblock>
      </answer>
    </faqentry>
    <faqentry name="dselect-access">
      <question>
        <p>Hilfe! Ich habe den Menue-Eintrag "[A]ccess" in dselect ausgewählt
          und jetzt kann ich keine Pakete mehr herunter laden!</p>
      </question>
      <answer>
        <p>Wahrscheinlich haben wurde in apt ein Debian-Spiegelserver
          eingestellt, der aber keine Fink-Dateien kennt. Führen sie das
          Kommando</p>
<codeblock>fink configure</codeblock>
        <p>in einem Terminalfenster aus. Gehen sie durch alle Optionen bis zur
          Auswahl der Spiegelserver. Wählen sie für das
          <em>apt-get repository</em> einen anderen Spiegelserver aus. Gehen sie
          dann noch durch des Rest der Optionen durch, damit die Einstellungen
          gesichert werden.</p>
      </answer>
    </faqentry>
    <faqentry name="cvs-busy">
      <question>
        <p>Führe ich das Kommando <quote>fink selfupdate</quote> oder
          <quote>fink selfupdate-cvs</quote> aus, erhalte ich die Fehlermeldung
          "<code>Updating using CVS failed. Check the error messages above.</code>"
        </p>
      </question>
      <answer>
        <p>Ist die Meldung</p>
<codeblock>Can't exec "cvs": No such file or directory at
/sw/lib/perl5/Fink/Services.pm line 216, &lt;STDIN&gt; line 3.
### execution of cvs failed, exit code -1</codeblock>
        <p>müssen sie die Developer Tools installieren.</p>
        <p>Lautet aber die letzte Zeile</p>
<codeblock>### execution of su failed, exit code 1</codeblock>
        <p>müssen sie weiter oben nach dem Fehler suchen. Lautet die Meldung,
          dass ihre Verbindung abgelehnt wurde:</p>
<codeblock>(Logging in to anonymous@fink.cvs.sourceforge.net)
CVS password:
cvs [login aborted]: connect to fink.cvs.sourceforge.net:2401 failed: 
Connection refused
### execution of su failed, exit code 1
Failed: Logging into the CVS server for anonymous read-only access failed.</codeblock>
        <p>oder diese Meldung:</p>
<codeblock>cvs [update aborted]: recv() from server fink.cvs.sourceforge.net:
Connection reset by peer 
### execution of su failed, exit code 1 
Failed: Updating using CVS failed. Check the error messages above.</codeblock>
        <p>oder</p>
<codeblock>cvs [update aborted]: End of file received from server</codeblock>
        <p>oder</p>
<codeblock>cvs [update aborted]: received broken pipe signal</codeblock>
        <p>dann ist der CVS-Server vermutlich überlastet und sie müssen es
          einfach später noch einmal probieren.</p>
        <p>Es kann auch sein, dass die Zugriffsrechte in ihrem CVS-Verzeichnis
          falsch sind. Auch dann bekommen sie "Permission denied" Meldungen:</p>
<codeblock>cvs update: in directory 10.2/stable/main:
cvs update: cannot open CVS/Entries for reading: No such file or directory
cvs server: Updating 10.2/stable/main 
cvs update: cannot write 10.2/stable/main/.cvsignore: Permission denied
cvs [update aborted]: cannot make directory 10.2/stable/main/finkinfo: 
No such file or directory 
### execution of su failed, exit code 1 Failed: 
Updating using CVS failed. Check the error messages above.</codeblock>
        <p>In diesem Fall sollten sie die Rechte mit folgendem Kommando zurück
          setzen:</p>
<codeblock>sudo find /sw/fink -type d -name 'CVS' -exec rm -rf {}\
; fink selfupdate-cvs</codeblock>
        <p>Ist es keine dieser Meldungen, bedeutet das fast immer, dass sie
          eine Datei in ihrem /sw/fink/dists Baum geändert haben und jetzt der
          Autor etwas ändern möchte. Suchen sie weiter oben in der Ausgabe nach
          dem Kommando selfupdate-cvs nach Zeilen, die mit &quot;C&quot;
          anfangen, wie z. B.:</p>
<codeblock>C 10.2/unstable/main/finkinfo/libs/db31-3.1.17-6.info
... (other info and patch files) ... 
### execution of su failed, exit code 1 
Failed: Updating using CVS failed. Check the error messages above.</codeblock>
        <p>Das &quot;C&quot; bedeutet, dass CVS bei der Aktualisierung auf die
          letzte Version einen Konflikt hat, der so behoben wird. Löschen sie
          jede Datei, die mit &quot;C&quot; in der Ausgabe nach dem Kommando
          <code>selfupdate-cvs</code> aufgelistet wird und versuchen sie es
          erneut:</p>
<codeblock>sudo rm /sw/fink/10.2/unstable/main/finkinfo/libs/db31-3.1.17-6.info
fink selfupdate-cvs</codeblock>
    		<p>Bei Fehlermeldungen mit <em>cvs.sourceforge.net</em>:</p>
<codeblock>cvs [update aborted]: connect to cvs.sourceforge.net(66.35.250.207):
2401 failed: Operation timed out</codeblock>
	      <p>geht das auf Umstrukturierungen der CVS-Server im Jahr 2006 bei
          sourceforge.net zurück. Die Dateien von Fink sind jetzt hier:
          <em>fink.cvs.sourceforge.net</em>.</p>
	      <p>Überprüfen sie die Version ihrer Fink-Installation mit</p>
<codeblock>fink --version</codeblock>
	      <p>Enthält die Ausgabe <code>10.4-transitional</code>, müssen sie auf
          die reguläre 10.4 Distribution umstellen. Dieses
          <link url="http://prdownloads.sourceforge.net/fink/scripts-10.4-update-0.4.tar.gz?download">Aktualisierungs-Skript</link>
          unterstützt sie dabei.</p>
      </answer>
    </faqentry>
    <faqentry name="kernel-panics">
      <question>
        <p>Benutze ich Fink, stürzt der Rechner ab, friert ein oder zeigt
          kernel panics. Hilfe!</p>
      </question>
      <answer>
        <p>Im Herbst 2002 wurde auf der Mailing-Liste
          <link url="http://sourceforge.net/mailarchive/forum.php?forum=fink-users">fink-users</link>
          von solchen Problemen berichtet (einschließlich kernel panics und
          hängen bleiben beim Patchen), wenn Pakete übersetzt werden sollten und
          gleichzeitig Anti-Virus-Programme installiert waren. Sie müssen in
          solchen Fällen die Anti-Virus-Programme abstellen, bevor sie Fink
          nutzen.</p>
      </answer>
    </faqentry>
    <faqentry name="not-found">
      <question>
        <p>Ich versuche ein Paket zu installieren, aber Fink kann es nicht
          herunter laden. Die Download-Seite zeigt eine neuere Version des
          Pakets an als die von Fink. Was mache ich jetzt?</p>
      </question>
      <answer>
        <p>Die Paketquellen werden auf der Upstream-Seite hin- und hergeschoben,
          wenn eine neue Version veröffentlicht wird.</p>
        <p>Als erstes sollten sie das Kommando <code>fink selfupdate</code>
          ausführen. Vielleicht hat der Paket-Autor das Problem schon behoben
          und sie bekommen eine aktualisierte Paketbeschreibung mit der
          korrekten URL oder eine neuere Version.</p>
        <p>Wenn das alles nicht hilft, gibt es die Quellen auf unserer
          Web-Seite
          <link url="http://distfiles.master.finkmirrors.net/">http://distfiles.master.finkmirrors.net/</link>
          (Dank an Rob Braun), und sie können das Kommando
          <code>fink configure</code> ausführen und dort <em>search "Master"
          source</em> auswählen, so dass Fink dort automatisch sucht.</p>
        <p>Sollte auch das nicht funktionieren, benachrichtigen sie den Autor
          des Pakets, dass die URL falsch ist. Seine E-Mail-Adresse bekommen sie
          mit "<code>fink describe <em>packagename</em></code>". Nicht alle
          Autoren lesen die Mailing-Listen regelmäßig.</p>
        <p>Suchen sie dann die Quellen zuerst auf der Webseite in anderen
          Verzeichnissen nach der Version, die fink braucht, möglicherweise ein
          "altes" Verzeichnis. Es kann aber auch sein, dass es tatsächlich
          gelöscht wurde. Dann kann man immer noch per Websuche schauen, ob
          es den Tarball noch auf einer anderen als der offiziellen Seite gibt.
          Sie können auch hier schauen:
          <link url="http://us.dl.sourceforge.net/fink/direct_download/source/">http://us.dl.sourceforge.net/fink/direct_download/source/</link>.
          Fink speichert hier die Quelldateien von Paketen, die binär zur
          Verfügung gestellt werden. Klappt gar nichts, können sie immer noch
          auf der Mailing-Liste
          <link url="http://sourceforge.net/mailarchive/forum.php?forum=fink-users">fink-users</link>
          nachfragen, ob jemand die Quellen noch hat.</p>
        <p>Haben sie den Tarball mit den Quellen gefunden, dann laden sie ihn
          herunter und verschieben sie ihn dahin, wo Fink die Quellen speichert
          (bei einer üblichen Fink-Installation mit dem Befehl:
          "<code>sudo mv <em>package-source.tar.gz</em> /sw/src/</code>").
          Danach können sie das Paket ganz normal mit
          '<code>fink install <em>packagename</em></code>' installieren.</p>
        <p>Sollten sie die Quelldatei nicht bekommen, müssen sie leider warten
          bis der Paket-Autor das Problem behoben hat, also entweder die URL
          aktualisiert oder .info und .patch Dateien auf eine neue Version
          aktualisiert.</p>
      </answer>
    </faqentry>
    <faqentry name="fink-not-found">
      <question>
        <p>Führe ich Fink aus oder ein Programm, das ich mit Fink installiert,
          habe, kommt nur die Fehlermeldung &quot;command not found&quot;.</p>
      </question>
      <answer>
        <p>Möglicherweise haben sie aus Versehen die Startup-Skripte geändert.
          Führen sie das Skript <filename>/sw/bin/pathsetup.sh</filename> in
          einem Terminalfenster aus. Das Skript detektiert die voreingestellte
          Shell und fügt Finks Initialisierungs-Skript in seine Konfiguration
          ein. Damit dies wirksam wird, müssen sie ein neues Terminalfenster
          starten. <em>Anmerkung:</em> Bei einigen älteren Versionen von Fink
          heißt das Skript statt dessen <filename>pathsetup.command</filename>.
          Alternativ köönen sie auch das Programm
          <filename>pathsetup.app</filename> auf dem binären Fink-Disk-Image
          ausführen.</p>
        <p>Tritt dieser Fehler aber nur in Apples X11-Terminal auf, ist die
          einfachste Lösung, den Eintrag "Terminal" im Programm-Menu mit der
          Option <em>Applications-&gt;Customize Menu ...</em>zu ändern. Ändern
          sie das Kommando-Feld von</p>
<codeblock>xterm</codeblock>
        <p>auf</p>
<codeblock>xterm -ls</codeblock>
        <p><code>ls</code> bedeutet hier <quote>login shell</quote>. Dadurch
          werden ihr komplette Anmelde-Einstsellungen benutzt (genau wie das
          OS X Terminal).</p>
        <p>Die Skripte <filename>/sw/bin/init.*</filename> machen noch weit mehr
          als nur <filename>/sw/bin</filename> im PATH hinzu fügen. Viele Pakete
          laufen ansonsten nicht korrekt.</p>
      </answer>
    </faqentry>
    <faqentry name="invisible-sw">
      <question>
        <p>Ich möchte den Ordner /sw im Finder verstecken, damit Nutzer die
          Fink-Installation nicht so leicht beschädigen können.</p>
      </question>
      <answer>
        <p>Das geht. Hat man die Development Tools installiert, kann man
          folgendes Kommando ausführen:</p>
<codeblock>sudo /Developer/Tools/SetFile -a V /sw</codeblock>
        <p>Damit wird der Ordner /sw genau so unsichtbar wie die normalen
          System-Ordner (/usr, usw.). Ohne die Developer Tools kann man auch
          Programme von Drittanbietern nehmen, mit denen man die Datei-Attribute
          manipulieren kann, damit /sw unsichtbar wird.</p>
      </answer>
    </faqentry>
    <faqentry name="install-info-bad">
      <question>
        <p>Ich kann nichts installieren, weil ich immer den folgenden Fehler
          bekomme: &quot;install-info: unrecognized option
          `--infodir=/sw/share/info'&quot;</p>
      </question>
      <answer>
        <p>Normalerweise ist das ein Problem im PATH. Geben sie folgendes in
          einem Terminalfenster ein:</p>
<codeblock>printenv PATH</codeblock>
        <p>Wenn <filename>/sw/sbin</filename> da überhaupt nicht auftaucht, muss
          man die Umgebung so einrichten, wie in den
          <link url="/doc/users-guide/install.php#setup">Instruktionen</link>
          im Users Guide beschrieben. Ist <filename>/sw/sbin</filename>
          vorhanden, aber noch andere Einträge davor gibt (z. B.
          <filename>/usr/local/bin</filename>), können sie die Abfolge der
          Einträge im PATH so ändern, dass <filename>/sw/sbin</filename> weiter
          vorne steht. Muss der andere Ordner wirklich vor
          <filename>/sw/sbin</filename> stehen und enthält der Ordner ebenfalls
          einen Unterordner <filename>install-info</filename>, dann benennen sie
          diesen Unterordner um, sobald sie Fink benutzen..</p>
      </answer>
    </faqentry>
    <faqentry name="bad-list-file">
      <question>
        <p>Ich kann nicht installieren oder löschen, weil ein Problem auftritt
          mit dem Text: "files list file".</p>
      </question>
      <answer>
        <p>Typische Formen dieses Fehlers sind:</p>
<codeblock>files list file for package <em>packagename</em> contains empty filename</codeblock>
        <p>oder</p>
<codeblock>files list file for package <em>packagename</em> is missing final newline</codeblock>
        <p>Der Fehler ist leicht zu beheben. Liegt die .deb-Datei für das
          problematische Paket auf ihrem System vor, dann überprüfen sie die
          Datei mit folgendem Kommando:</p>
<codeblock>dpkg --contents <em>full-path-to-debfile</em></codeblock>
        <p>zum Beispiel:</p>
<codeblock>dpkg --contents /sw/fink/debs/libgnomeui2-dev_2.0.6-2_darwin-powerpc.deb</codeblock>
        <p>Erhalten sie eine Liste von Verzeichnissen und Dateien, dann ist die
          .deb-Datei in Ordnung. Enthält die Liste aber auch etwas anderes oder
          es liegt keine .deb-Datei vor, dann können sie weiter machen, weil der
          Fehler das Erstellen anderer Pakete nicht verhindert.</p>
        <p>Installieren sie die binäre Distribution oder sind sie sich sicher,
          dass die Version, die sie installierten, die gleiche ist wie in der
          binären Distribution (indem sie z. B. in der
          <link url="http://pdb.finkproject.org/pdb/index.php">Datenbank</link>
          nachschauen.), dann können sie die .deb-Datei mit folgendem Kommando
          beziehen:
          <code>sudo apt-get install --reinstall --download-only
          <em>packagename</em></code>
          Eine andere Lösung ist, das Paket mit dem Kommando
          <code>fink rebuild <em>packagename</em></code> neu zu erstellen. Sie
          werden es aber noch nicht installieren können.</p>
        <p>Sobald sie eine gültige .deb-Datei haben, können sie alles wieder
          herstellen. Verschaffen sie sich zunächst Administratorrechte:
          <code>sudo -s</code> (Wenn nötig, geben sie ihr Administrator-Passwort
          ein), und führen sie dann folgende Kommandos aus:</p>
<codeblock>dpkg -c <em>full-path-to-debfile</em> | awk '{if ($6 == "./"){ print "/."; } \
else if (substr($6, length($6), 1) == "/")\
{print substr($6, 2, length($6) - 2); } \
else { print substr($6, 2, length($6) - 1);}}'\ 
&gt; /sw/var/lib/dpkg/info/<em>packagename</em>.list</codeblock>
        <p>z. B.</p>
<codeblock>dpkg -c /sw/fink/debs/libgnomeui2-dev_2.0.6-2_darwin-powerpc.deb | awk \
'{if ($6 == "./") { print "/."; } \
else if (substr($6, length($6), 1) == "/") \
{print substr($6, 2, length($6) - 2); } \
else { print substr($6, 2, length($6) - 1);}}' \ 
&gt; /sw/var/lib/dpkg/info/libgnomeui2-dev.list</codeblock>
        <p>Dies extrahiert den Inhalt der .deb-Datei, löscht alles außer den
          Dateinamen und schreibt diese in die .list-Datei.</p>
      </answer>
    </faqentry>
    <faqentry name="dselect-garbage">
      <question>
        <p>Wenn ich in <filename>dselect</filename> Pakete auswähle, bekomme ich
          nur einen Haufen Müll. Wie kann ich es benutzen?</p>
      </question>
      <answer>
        <p>Zwischen <filename>dselect</filename> und
          <filename>Terminal.app</filename> gibt es Probleme. Folgende Kommandos
          beheben sie.</p>
        <p>tcsh-Nutzer:</p>
<codeblock>setenv TERM xterm-color</codeblock>
        <p>bash-Nutzer:</p>
<codeblock>export TERM=xterm-color</codeblock>
        <p>Sie können die Kommandos auch in ihre Startup-Dateien (also
          <code>.cshrc</code> oder <code>.profile</code>) einfügen, so dass sie
          immer ausgeführt werden.</p>
      </answer>
    </faqentry>
    <faqentry name="cant-upgrade">
      <question>
        <p>Ich kann anscheinend Finks Version nicht aktualisieren.</p>
      </question>
      <answer>
        <p>Wenn keines der Kommandos <code>fink selfupdate</code>
          oder <code>sudo apt-get update ; sudo apt-get dist-upgrade</code>
          Fink aktualisiert, müssen sie eine neue Version von <code>fink</code>
          selbst herunter laden. Die entsprechenden Kommandos sind:</p>
        <ul>
          <li>
            <em>10.3.x:</em> (0.7.1 Distribution)
<codeblock>curl -O http://us.dl.sf.net/fink/direct_download/dists/fink-0.7.1-updates/main/binary-darwin-powerpc/base/fink_0.22.4-1_darwin-powerpc.deb
sudo dpkg -i fink_0.22.4-1_darwin-powerpc.deb
rm fink_0.22.4-1_darwin-powerpc.deb
fink selfupdate</codeblock>
          </li>
          <li>
            <em>10.2.x:</em> (0.6.3 Distribution)
<codeblock>curl -O http://us.dl.sf.net/fink/direct_download/dists/fink-0.6.3/release/main/binary-darwin-powerpc/base/fink_0.18.3-1_darwin-powerpc.deb
sudo dpkg -i fink_0.18.3-1_darwin-powerpc.deb
rm fink_0.18.3-1_darwin-powerpc.deb
fink selfupdate</codeblock>
          </li>
        </ul>
      </answer>
    </faqentry>
    <faqentry name="spaces-in-directory">
      <question>
        <p>Kann ich Fink in einem Ordner installieren, der ein Leerzeichen in
          seinem Namen hat?</p>
      </question>
      <answer>
        <p>Wir raten dringend davon ab. Es ist einfach den Ärger nicht wert.</p>
      </answer>
    </faqentry>
    <faqentry name="packages-gz">
      <question>
        <p>Wenn ich eine binäre Aktualisierung machen, erhalte ich viele
          Fehlermeldungen mit "File not found" oder "Couldn't stat package
          source list file".</p>
      </question>
      <answer>
        <p>Wenn sie folgende Fehlermeldungen erhalten:</p>
<codeblock>Err file: local/main Packages
File not found 
Ign file: local/main Release 
Err file: stable/main Packages 
File not found 
Ign file: stable/main Release 
Err file: stable/crypto Packages 
File not found 
Ign file: stable/crypto Release 
...
Failed to fetch file:/sw/fink/dists/local/main/binary-darwin-powerpc/Packages
File not found 
Failed to fetch file:/sw/fink/dists/stable/main/binary-darwin-powerpc/Packages
File not found
Failed to fetch file:/sw/fink/dists/stable/crypto/binary-darwin-powerpc/Packages
File not found 
Reading Package Lists... Done 
Building Dependency Tree...Done 
E: Some index files failed to download, 
they have been ignored, or old ones used instead. 
update available list script returned error exit status 1.</codeblock>
        <p>, dann führen sie das Kommand <code>fink scanpackages</code>aus.
          Damit werden die Dateien erzeugt, die nicht gefunden wurden..</p>
        <p>Wenn sie Fehlermeldungen folgender Art erhalten:</p>
<codeblock>W: Couldn't stat source package list file: unstable/main Packages
(/sw/var/lib/apt/lists/_sw_fink_dists_unstable_main_binary-darwin-
powerpc_Packages) - stat (2 No such file or directory)</codeblock>
        <p>, sollten sie diese Kommandos ausführen, damit die Fehler behoben
          werden:</p>
<codeblock>sudo apt-get update
fink scanpackages</codeblock>
      </answer>
    </faqentry>
    <faqentry name="wrong-tree">
      <question>
        <p>Ich habe mein System oder die Developer Tools gewechselt, aber Fink
          erkennt den Wechsel nicht.</p>
      </question>
      <answer>
        <p>Wird die Fink-Distribution geändert (Quell-Distribution und binäre
          Distribution sind Untermengen.), muss das Fink mitgeteilt werden.
          Führen sie dazu ein Skript aus, das normalerweise bei der
          Erst-Installation ausgeführt wird:</p>
<codeblock>/sw/lib/fink/postinstall.pl</codeblock>
        <p>Führt man dieses Skript aus, wird alles zurecht gerückt.</p>
      </answer>
    </faqentry>
    <faqentry name="lost-command-line-tools">
      <question>
        <p>After installing a macOS update, Fink no longer recognizes my installed Command Line Tools.</p>
      </question>
      <answer>
        <p>Updates to macOS routinely break parts of Apple's Command Line Tools. If you get this error after updating your copy of macOS:</p>
        <codeblock>Can't resolve dependency "xcode (>= 6.2)"</codeblock>
        <p>Fink has lost track of Apple's Command Line Tools.</p>
        <p>The easiest solution is to download and reinstall the Command Line Tools specific to your macOS version from <link url="https://developer.apple.com/">https://developer.apple.com/</link>.</p>
        <p>Another possible solution is to run the following command:</p>
        <codeblock>xcode-select --install</codeblock>
        <p>but this often reports the following:</p>
        <codeblock>xcode-select: error: command line tools are already installed, use "Software Update" to install updates</codeblock>
        <p>However, the Tools might be in a non-functional state such that Fink still can't recognize them. In that case, a clean reinstall as described above has always worked to fix their detection with Fink.</p>
        <p>Finally, you may need to run the command:</p>
        <codeblock>sudo xcodebuild -license</codeblock>
        <p>to agree to the software license.</p>
      </answer>
    </faqentry>
    <faqentry name="seg-fault">
      <question>
        <p>Ich erhalte Fehlermeldungen von <code>gzip</code>,
          <code>dpkg-deb</code> oder anderen Programmen aus dem Paket
          <code>fileutils</code>! Hilfe!</p>
      </question>
      <answer>
        <p>Fehlermeldungen der Art:</p>
<codeblock>gzip -dc /sw/src/dpkg-1.10.9.tar.gz | /sw/bin/tar -xf -
### execution of gzip failed, exit code 139</codeblock>
        <p>oder</p>
<codeblock>gzip -dc /sw/src/aquaterm-0.3.0a.tar.gz | /sw/bin/tar -xf -
gzip: stdout: Broken pipe 
### execution of gzip failed, exit code 138</codeblock>
        <p>oder</p>
<codeblock>dpkg-deb -b root-base-files-1.9.0-1 /sw/fink/dists/unstable/main/binary-darwin-powerpc/base

### execution of dpkg-deb failed, exit code 1
Failed: can't create package base-files_1.9.0-1_darwin-powerpc.deb</codeblock>
        <p>oder "segmentation faults" wenn man Programme aus dem Paket
          <code>fileutils</code>, z. B. <code>ls</code> oder <code>mv</code>,
          werden wahrscheinlich durch "prebinding"-Fehler in eine Bibliothek
          verursacht und können mit folgendem Kommando behoben werden:</p>
<codeblock>sudo /sw/var/lib/fink/prebound/update-package-prebinding.pl -f</codeblock>
      </answer>
    </faqentry>
    <faqentry name="pathsetup-keeps-running">
      <question>
        <p>When I open a Terminal window, I get a message that "Your
        environment seems to be correctly set up for Fink already.", and it
        logs out.</p>
      </question>
      <answer>
        <p>What happened is that somehow the OSX Terminal program has been
        told to run <code>/sw/bin/pathsetup.command</code> every time you log
        in. You can fix this by removing the Preferences file,
        <code>~/Library/Preferences/com.apple.Terminal.plist</code>.</p>
        <p>If you have other preferences that you want to keep, you can edit
        the file with a text editor and remove the reference to
        <code>/sw/bin/pathsetup.command</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="ext-drive">
      <question>
        <p>Ich habe Fink nicht auf der Haupt-Partition installiert und ich kann
          das Paket Fink nicht aus dem Quellen aktualisieren. Die
          Fehlermeldungen enthalten <quote>chowname</quote>.</p>
      </question>
      <answer>
        <p>Sollten die Fehler so aussehen:</p>
<codeblock>This first test is designed to die, so please ignore the error
message on the next line.
# Looks like your test died before it could output anything.
./00compile............................ok
./Base/initialize......................ok
./Base/param...........................ok
./Base/param_boolean...................ok
./Command/cat..........................ok
./Command/chowname.....................#     
Failed test (./Command/chowname.t at line 27)
#          got: 'root'
#     expected: 'nobody'</codeblock>
        <p>dann müssen sie <em>Get Info</em> auf der Platte oder Partition
          ausführen, auf der Fink installiert ist und wählen sie den Button
          "Ignore ownership" ab.</p>
      </answer>
    </faqentry>
    <faqentry name="mirror-gnu">
      <question>
        <p>Fink weigert sich, meine Pakete zu aktualisieren, weil es den
          'gnu'-Spiegelserver nicht finden kann.</p>
      </question>
      <answer>
        <p>Erhalten sie eine Fehlermeldung, die so aufhört:</p>
<codeblock>Failed: No mirror site list file found for mirror 'gnu'.</codeblock>
        <p>, dann muss man meistens das Paket <code>fink-mirrors</code>
          aktualisieren, sprich folgendes Kommando ausführen:</p>
<codeblock>fink install fink-mirrors</codeblock>
      </answer>
    </faqentry>
    <faqentry name="cant-move-fink">
      <question>
        <p>Ich kannn Fink nicht aktualisieren, weil ich /sw/fink nicht aus dem
          Weg räumen kann.</p>
      </question>
      <answer>
        <p>Der folgende Fehler:</p>
<codeblock>Failed: Can't move &quot;/sw/fink&quot; out of the way.</codeblock>
        <p>wird der Fehler meistens dadurch verursacht, dass die Zugriffsrechte
          temporärer Ordner es verhindern, die während eines
          <code>selfupdate</code> angelegt werden, auch wenn die Fehlermeldung
          etwas anderes behauptet. Entfernen sie diese Ordner mit:</p>
<codeblock>sudo rm -rf /sw/fink.tmp /sw/fink.old</codeblock>
      </answer>
    </faqentry>
    <faqentry name="fc-cache">
      <question>
        <p>Ich erhalte diese Fehlermeldung: &quot;No fonts found&quot;.</p>
      </question>
      <answer>
        <p>Sehen eine der folgenden Fehlermelungen (bisher nur bei OS 10.4):</p>
<codeblock>No fonts found; this probably means that the fontconfig
library is not correctly configured. You may need to
edit the fonts.conf configuration file. More information
about fontconfig can be found in the fontconfig(3) manual
page and on http://fontconfig.org.</codeblock>
        <p>können sie das so beheben:</p>
<codeblock>sudo fc-cache</codeblock>
      </answer>
    </faqentry>
    <faqentry name="non-admin-installer">
      <question>
        <p>Ich kann Fink nicht mit dem Installerpaket installieren, weil ich den
          Fehler &quot;volume doesn't support symlinks&quot; erhalte.</p>
      </question>
      <answer>
        <p>Diese Fehlermeldung bedeutet, dass sie versuchten Fink als Nutzer zu
          installieren, der keine Administratorrechte hat. Melden sie sich ab
          und als Nutzer mit Administratorrechten wieder an, oder wechseln sie
          im Finder zu so einem Nutzer bevor sie den Fink-Installer starten.</p>
        <p>Treten diese Probleme auf, obwohl sie Administratorrechte haben, ist
          es wahrscheinlich ein Problem mit den Zugriffsrechten für das oberste
          Verzeichnis. Starten sie Apples Festplatten-Dienstprogramm (aus dem
          Unterordner Hilfsprogramme im Ordner Programme), wählen sie die
          fragliche Platte oder Partition aus, gehen sie zu <em>Erste Hilfe</em>
          und drücken sie <em>Zugriffsrechte Reparieren</em>. Sollte das nicht
          helfen, müssen sie die Zugriffsrechte manuell setzen:</p>
<codeblock>sudo chmod 1775 /</codeblock>
      </answer>
    </faqentry>
    <faqentry name="wrong-arch">
      <question>
        <p>Ich kann Fink nicht aktualisieren. Es bricht mit
          <quote>package architecture (darwin-i386) does not match system
          (darwin-powerpc)</quote> ab.</p>
      </question>
      <answer>
        <p>Dieser Fehler tritt auf, wenn sie das PowerPC-Installerpaket auf
          einem Intel-MacIntosh ausführen. Sie müssen ihre Fink-Installation
          löschen, d. h. dieses Kommando ausführen:</p>
<codeblock>sudo rm -rf /sw</codeblock>
        <p>und dann das Disk-Image für Intel-MacIntosh von den
          <link url="/download/index.php">downloads-Webseiten</link>
          herunter laden.</p>
      </answer>
    </faqentry>
   </chapter>
  <chapter filename="comp-general">
    <!-- FAQs in comp-general are coded into VirtPackage.pm
       Do not rename, remove, or otherwise cause the URL to change. -->
    <title>Probleme beim Übersetzen - Allgemein</title>
    <shorttitle>Übersetzen (1)</shorttitle>
    <faqentry name="compiler">
      <question>
        <p>Ein configure-Skript beklagt sich, dass es keinen "acceptable cc"
          findet. Was bedeutet das?</p>
      </question>
      <answer>
        <p>Lesen sie bitte das nächste Mal die Dokumentation. Sie müssen die
          Apple Developer Tools installieren, um Pakete aus den Quellen zu
          übersetzen, denn sie enthalten auch den C Compiler, <code>cc</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="cvs">
      <question>
        <p>Nach dem Kommando "fink selfupdate-cvs" erhalte ich die Nachricht:
          "cvs: Command not found."</p>
      </question>
      <answer>
        <p>Sie müssen die Apple Developer Tools installieren.</p>
      </answer>
    </faqentry>
    <faqentry name="missing-make">
      <question>
        <p>Ich erhalte Fehlermeldungen mit <code>make</code>
        </p>
      </question>
      <answer>
        <p>Die Fehlermeldung</p>
<codeblock>make: command not found</codeblock>
        <p>oder</p>
<codeblock>Can't exec &quot;make&quot;:
No such file or directory at /sw/lib/perl5/Fink/Services.pm line 190.</codeblock>
        <p>bedeuten, dass sie die Apple Developer Tools installieren müssen.</p>
        <p>Lautet die Fehlermeldung</p>
<codeblock>make: illegal option -- C</codeblock>
        <p>, dann haben sie die GNU-Version von <code>make</code> aus den
          Developer Tools durch die BSD-Version ersetzt. Viele Pakete benötigen
          aber spezielle Optionen der GNU-Version. Überprüfen sie, dass
          <code>/usr/bin/make</code> ein Symlink auf <code>gnumake</code>, und
          nicht auf <code>bsdmake</code> ist. Außerdem sollte
          <code>/usr/local/bin/</code> nicht auch noch eine Version von
          <code>make</code> enthalten.</p>
      </answer>
    </faqentry>
    <faqentry name="head">
      <question>
        <p>Das Kommando head erzeugt seltsame Fehlermeldungen. Was ist
          kaputt?</p>
      </question>
      <answer>
        <p>Sieht die Meldung so aus:</p>
<codeblock>Unknown option: 1 Usage: head [-options] &lt;url&gt;...</codeblock>
        <p>gefolgt von einer Liste mit Optionsbeschreibungen, dann ist das
          Programm <code>head</code> zerschossen. Das passiert, wenn sie die
          Perl libww Bibliothek auf einer HFS+ Systempartition installieren.
          Dabei wird versucht, ein neues Kommando <code>/usr/bin/HEAD</code>
          zu erzeugen, wodurch das existierende Kommando <code>head</code>
          überschrieben wird, weil das File-System Groß- und Kleinschreibung
          nicht unterscheidet. Das Kommando <code>head</code> ist ein Standard,
          der in vielen Shell-Skripten und Makefiles verwendet wird. Für die
          Benutzung von Fink benötigen sie das originale <code>head</code>.</p>
        <p>Das Boot-Skript überprüft das, aber der Fehler kann auch dann
          auftreten, wenn sie die binäre Distribution für die erstmalige
          Installation verwenden oder libwww nach Fink installieren.</p>
        <p>Es wurde auch schon berichtet, dass das Problem bei der Installation
          von <filename>/sw/bin/HEAD</filename> (Nicht durch ein Fink-Paket)
          auftritt. Das kann leicht durch Umbenennen behoben werden.</p>
      </answer>
    </faqentry>
    <faqentry name="also_in">
      <question>
        <p>Wenn ich versuche, ein Paket zu installieren, erhalte ich eine
          Fehlermeldung, dass versucht wird, eine Datei zu überschreiben, die
          zu einem anderen Paket gehört.</p>
      </question>
      <answer>
        <p>Dies passiert manchmal bei Splitoff-Paketen (also die mit den
          Endungen  -dev, -shlibs, usw.), wenn eine Datei aus einem Splitoff in
          ein anderes verschoben wird (z. B. von <code>foo</code> nach
          <code>foo-shlibs</code>). Da die beiden Dateien letztlich dieselbe
          ist, können sie die Datei mit folgendem Kommado überschreiben:</p>
<codeblock>sudo dpkg -i --force-overwrite <em>filename</em></codeblock>
        <p>wobei <em>filename</em> die .deb-Datei ist, die das Paket enthält,
          das sie installieren wollen.</p>
      </answer>
    </faqentry>
    <faqentry name="mv-failed">
      <question>
        <p>Was bedeutet "execution of mv failed, exit code 1", wenn ich
          versuche, ein Paket zu installiere?</p>
      </question>
      <answer>
        <p>Wenn sie StuffIt Pro installiert haben, könnte es sein, dass sie den
          Modus "Archive Via Real Name" eingeschaltet haben. Überprüfen sie die
          Einstellungen von StuffIt und schalten sie "ArchiveViaRealName" ab.
          Der Modus enthält eine fehlerhafte Reimplementierung einiger wichtiger
          Systemaufrufe, die merkwürdige und transiente Fehler wie diesen zur
          Folge haben.</p>
        <p>Andernfalls bedeutet ein Fehler mit <filename>mv</filename> meistens
          dass schon vorher ein Fehler aufgetreten ist, der Prozess aber nicht
          abgebrochen wurde. Suchen sie im Protokoll nach den Dateien, die zum
          Fehler führen, z. B. so etwas:</p>
<codeblock>mv /sw/src/root-foo-0.1.2-3/sw/lib/libbar*.dylib \
/sw/src/root-foo-shlibs-0.1.2-3/sw/lib/ 
mv: cannot stat `/sw/src/root-foo-0.1.2-3/sw/lib/libbar*.dylib': 
No such file or directory 
### execution of mv failed, exit code 1 
Failed: installing foo-0.1.2-3 failed</codeblock>
        <p>In diesen Fällen, suchen sie nach der Datei
          <filename>libbar</filename> weiter zurück im Protokoll des
          Build-Prozesses.</p>
      </answer>
    </faqentry>
    <faqentry name="node-exists">
      <question>
        <p>Ich kann ein Paket nicht installieren oder aktualisieren, weil ich
          die Fehlermeldung erhalte, dass ein "node" bereits existiert.</p>
      </question>
      <answer>
        <p>Diese Fehlermeldungen sehen so aus:</p>
<codeblock>Failed: Internal error: node for system-xfree86 already exists</codeblock>
        <p>Das Problem ist, dass der Abhängigkeits-Motor verwirrt ist, weil es
          Änderungen in der Paket-Info-Datei gibt. Beheben sie den Fehler so:</p>
        <ul>
          <li>
            <p>Erzwingen sie das Löschen des Paket. Mit dem Beispiel von oben,
              wäre das:</p>
<codeblock>sudo dpkg -r --force-all system-xfree86</codeblock>
          </li>
          <li>
            <p>Versuchen sie noch einmal das Paket zu installieren oder
              aktualisieren. Irgendwann kommt ein Prompt "virtual dependency"
              mit dem Paket, das sie gerade gelöscht haben. Wählen sie es aus
              und es wird erneut installiert.</p>
          </li>
        </ul>
      </answer>
    </faqentry>
    <faqentry name="usr-local-libs">
      <question>
        <p>Ich habe gehört, dass Bibliotheken und Header-Dateien, die in
          /usr/local installiert sind, manchmal Probleme machen. Stimmt das?</p>
      </question>
      <answer>
        <p>Dies ist ein sehr häufiges Probelm, weil die configure-Skripte der
          Pakete Header-Dateien und Bibliotheken in
          <filename>/usr/local</filename> finden und sie denen aus dem
          Fink-Baum vorziehen. Häufig zeigen sich diese Fehler erst, wenn das
          Erstellen des Pakets diagnostiziert wird, z. B.:</p>
<codeblock>Looking for incorrect headers in 44 dependency files...
	 ./objs/.libs/ftgzip.d uses /usr/local/include/zconf.h
	 ./objs/.libs/ftgzip.d uses /usr/local/include/zlib.h
Please fix build process to get consistent use of fink's headers.</codeblock>
        <p>Treten Probleme auf, die in keinem FAQ-Eintrag erwähnt werden, dann
          sollten sie nachschauen, ob Bibliotheken in
          <filename>/usr/local/lib</filename> oder Header-Dateien in
          <filename>/usr/local/include</filename> sind.</p>
        <p>Sind Header-Dateien und/oder Bibliotheken in
          <filename>/usr/local</filename>, dann benennen sie
          <filename>/usr/local</filename> in etwas anderes um, also:</p>
<codeblock>sudo mv /usr/local /usr/local.moved</codeblock>
        <p>Erzeugen sie ihr Paket, dann können die Umbenennung von
          <filename>/usr/local</filename> wieder rückgängig machen:</p>
<codeblock>sudo mv /usr/local.moved /usr/local</codeblock>
        <p>Starting with macOS 10.14, it's sometimes not possible to rename <filename>/usr/local</filename>. If you get an error when renaming <filename>/usr/local</filename> directly, then rename the subdirectories inside it instead:</p>
        <codeblock>
        sudo mv /usr/local/include /usr/local/include.moved
        sudo mv /usr/local/lib /usr/local/lib.moved
        </codeblock>
        <p>do your build, and then you can put <filename>/usr/local/include</filename> and <filename>/usr/local/lib</filename>
        back:</p>
        <codeblock>
        sudo mv /usr/local/include.moved /usr/local/include
        sudo mv /usr/local/lib.moved /usr/local/lib
        </codeblock>
      </answer>
    </faqentry>
    <faqentry name="toc-out-of-date">
      <question>
        <p>Wenn ich versuche, ein Paket zu erzeugen, bekomme ich die
          Fehlermeldung, "table of contents" ist veraltet. Was muss ich tun?</p>
      </question>
      <answer>
        <p>Das Protokoll gibt Hinweise darauf, was zu tun ist, z. B.:</p>
<codeblock>ld: table of contents for archive:
/sw/lib/libintl.a is out of date; 
rerun ranlib(1) (can't load from it)</codeblock>
        <p>Sie müssen also (als root) ranlib mit der Bibliothek ausführen, die
          Probleme macht. Im obigen Beispiel wäre das:</p>
<codeblock>sudo ranlib /sw/lib/libintl.a</codeblock>
      </answer>
    </faqentry>
    <faqentry name="fc-atlas">
      <question>
        <p>Fink Commander bleibt hängen, wenn ich versuche das Paket atlas zu
          installieren.</p>
      </question>
      <answer>
        <p>Das kommt daher, dass in einem der Schritte bei Bau von
          <code>atlas</code> ein Prompt ausgegeben wird, der von Fink Commander
          nicht angezeigt wird. Sie müssen statt dessen das Kommando
          <code>fink install atlas</code> ausführen.</p>
      </answer>
    </faqentry>
    <faqentry name="basic-headers">
      <question>
        <p>Ich erhalte Fehlermeldungen, dass die Dateien
          <filename>stddef.h</filename>, <filename>wchar.h</filename>,
          <filename>stdlib.h</filename> oder <filename>crt1.o</filename> fehlen
          oder dass der <quote>C compiler cannot create executables</quote>.</p>
      </question>
      <answer>
        <p>Typischerweise heisst das, dass essentielle Header-Dateien fehlen,
          die im Paket DevSDK der Developer Tools enthalten sind. Überprüfen
          sie, ob <filename>/Library/Receipts/DevSDK.pkg</filename> auf ihrem
          System vorhanden ist. Wenn nicht, dann starten sie den Installer für
          die Developer Tools ein weiteres Mal und installieren sie das Paket
          DevSDK mittels Custom Install.</p>
        <p>Der Fehler <quote>cannot create executables</quote> kann auch
          auftreten, wenn die Version ihrer Developer Tools nur für ein älteres
          OS X gültig ist.</p>
      </answer>
    </faqentry>
    <faqentry name="multiple-dependencies">
      <question>
        <p>Ich kann nicht aktualisieren, denn Fink meldet "unable to resolve
          version conflict on multiple dependencies".</p>
      </question>
      <answer>
        <p>Zur Behebung dieses Fehlers, versuchen sie, ein einziges Paket zu
          aktualisieren. Dann können sie "fink update-all" noch einmal
          probieren. Wenn sie die Meldung immer noch bekommen, wiederholen sie
          die Prozedur.</p>
      </answer>
    </faqentry>
    <faqentry name="dpkg-parse-error">
      <question>
        <p>Ich kann gar nichts installieren und bekommen nur die Fehlermeldung:
          "dpkg: parse error, in file `/sw/var/lib/dpkg/status'"!</p>
      </question>
      <answer>
        <p>Dies bedeutet, dass die dpkg-Datenbank irgendwie beschädigt wurde,
          meist durch einen Absturz oder ähnlich schlimmes. Häufig ist ein
          Buildlock damit verbunden, z. B.:</p>
<codeblock>package `fink-buildlock-foo-1.2.3-4':  missing version</codeblock>
	      <p>(selbstverständlich muss der Name <filename>foo-1.2.3-4</filename>
          durch den ersetzt werden, für den der Fehler auftritt).</p>
        <p>Sollte dies passieren, müssen sie die Datei
          <filename>/sw/var/lib/dpkg/status</filename> als root editieren.
          Gehen sie zu der Zeile, die in der Fehlermeldung steht. Dort sollte
          ein Paket mit dem Namen <code>fink-buildlock-foo-1.2.3-4</code>
          stehen, dessen Feld <code>Status</code> markiert ist</p>
<codeblock>install ok installed</codeblock>
	      <p>Ändern sie dies zu</p>
<codeblock>purge ok not-installed</codeblock>
	      <p>Unter Umständen steht auch Müll in diesem Fall. Dies können sie
          beheben, in dem sie die Datei mit ihrer vorigen Version
          überschreiben:</p>
<codeblock>sudo cp /sw/var/lib/dpkg/status-old /sw/var/lib/dpkg/status</codeblock>
        <p>Sie müssen allerdings die Pakete, die sie kurz vorher installiert
          haben, erneut installieren.</p>
      </answer>
    </faqentry>
    <faqentry name="freetype-problems">
      <question>
        <p>Ich erhalte einen Fehler mit freetype.</p>
      </question>
      <answer>
        <p>Es gibt damit mehrere verschiedene Fehler. Sieht er so aus:</p>
<codeblock>/usr/bin/ld: can't locate file for: -lfreetype</codeblock>
        <p>überprüfen sie, ob sie ein zusätzliches Programm
          <filename>freetype-config</filename> haben, in dem sie dieses Kommando
          ausführen:</p>
<codeblock>where freetype-config</codeblock>
        <p>wenn sie <filename>tcsh</filename> benutzen, oder</p>
<codeblock>type -a freetype-config</codeblock>
        <p>wenn sie <filename>bash</filename> benutzen. Man weiß, dass das
          Framework Mono <filename>/usr/bin/freetype-config</filename>
          installiert, das ein Symlink auf eine Datei in diesem Framework
          ist.</p>
        <p>Sieht ihr Fehler so aus:</p>
<codeblock>/sw/include/pango-1.0/pango/pangoft2.h:52:
error: parse error before '*' token 
/sw/include/pango-1.0/pango/pangoft2.h:57:
error: parse error before '*' token
/sw/include/pango-1.0/pango/pangoft2.h:61: 
error: parse error before '*' token 
/sw/include/pango-1.0/pango/pangoft2.h:86: 
error: parse error before "pango_ft2_font_get_face"
/sw/include/pango-1.0/pango/pangoft2.h:86: 
warning: data definition has no type or storage class 
make[2]: *** [rsvg-gz.lo] Error 1
make[1]: *** [all-recursive] Error 1 
make: *** [all-recursive-am] Error 2 
### execution of make failed, exit code 2 
Failed: compiling librsvg2-2.4.0-3 failed</codeblock>
        <p>oder</p>
<codeblock>In file included from vteft2.c:32:
vteglyph.h:64: error:
parse error before "FT_Library" 
vteglyph.h:64: warning: 
no semicolon at end of struct or union vteft2.c: 
In function `_vte_ft2_get_text_width': 
vteft2.c:236: error: 
dereferencing pointer to incomplete type 
vteft2.c: In function `_vte_ft2_get_text_height':
vteft2.c:244: error: 
dereferencing pointer to incomplete type
vteft2.c: In function `_vte_ft2_get_text_ascent': 
vteft2.c:252: error:
dereferencing pointer to incomplete type 
vteft2.c: In function `_vte_ft2_draw_text': 
vteft2.c:294: error: 
dereferencing pointer to incomplete type 
vteft2.c:295: error: 
dereferencing pointer to incomplete type
make[2]: *** [vteft2.lo] Error 1 
make[1]: *** [all-recursive] Error 1 
make: *** [all] Error 2 
### execution of make failed, exit code 2
Failed: compiling vte-0.11.10-3 failed</codeblock>
        <p>oder</p>
<codeblock>checking for freetype-config.../usr/X11R6/bin/freetype-config
checking For sufficiently new FreeType (at least 2.0.1)... no 
configure: error: pangoxft 
Pango backend found but did not find freetype libraries 
make: *** No targets specified and no makefile found. Stop. 
### execution of LD_TWOLEVEL_NAMESPACE=1 failed, exit code 2 
Failed: compiling gtk+2-2.2.4-2 failed</codeblock>
        <p>Das Problem ist ein Konflikt zwischen den Header-Dateien aus den
          Paketen <code>freetype</code> oder <code>freetype-hinting</code>
          und der <code>freetype2</code> Header-Datei, die in X11 oder XFree86
          enthalten ist.</p>
<codeblock>fink remove freetype freetype-hinting</codeblock>
        <p>wird löschen, was auch immer installiert ist. Sieht der Fehler aber
          so aus:</p>
<codeblock>ld: Undefined symbols: _FT_Access_Frame</codeblock>
        <p>ist das dafür typisch, das noch Dateien von einer früheren
          Installation von X11 übrig sind. Installieren sie das X11 SDK
          erneut.</p>
      </answer>
    </faqentry>
    <faqentry name="dlfcn-from-oo">
      <question>
        <p>Ich bekommen Fehler mit 'Dl_info'.</p>
      </question>
      <answer>
        <p>Sieht der Fehler so aus:</p>
<codeblock>unix_dl.c: In function `rep_open_dl_library':
unix_dl.c:328: warning: assignment discards qualifiers from pointer target type 
unix_dl.c: In function `rep_find_c_symbol': 
unix_dl.c:466: error: `Dl_info' undeclared (first use in this function)
unix_dl.c:466: error: (Each undeclared identifier is reported only once 
unix_dl.c:466: error: for each function it appears in.)
unix_dl.c:466: error: parse error before "info" 
unix_dl.c:467: error: `info' undeclared (first use in this function) 
make[1]: *** [unix_dl.lo] Error 1</codeblock>
        <p>haben sie wahrscheinlich die Header-Datei
          <code>/usr/local/include/dlfcn.h</code>, die nicht mit Panther nicht
          kompatible ist. Verschieben sie die Datei.</p>
        <p>Meistens wird sie von Open Office installiere und sie sollten die
          Header-Datei und die Bibliothek <code>/usr/local/lib/libdl.dylib</code>
          durch Symlinks zu den Dateien ersetzen, die in Panther enthalten
          sind.</p>
<codeblock>sudo ln -s /usr/include/dlfcn.h /usr/local/include/dlfcn.h
sudo ln -s /usr/lib/libdl.dylib /usr/local/lib/libdl.dylib</codeblock>
      </answer>
    </faqentry>
    <faqentry name="gcc2">
      <!-- FAQ comp-general.gcc2 is coded into VirtPackage.pm
         Do not rename, remove, move to a different chapter, or
         otherwise cause the URL to change. -->
      <question>
        <p>Fink behauptet, dass <filename>gcc2</filename> oder
          <filename>gcc3.1</filename> fehlen, es sieht nicht so aus, dass ich
          sie installieren kann.</p>
      </question>
      <answer>
        <p><filename>gcc2</filename> und <filename>gcc3.1</filename> sind
          virtuelle Pakete, die anzeigen, dass gcc-2.95 und gcc-3.1 auf dem
          System installiert sind. Installieren sie gcc2.95 und/oder gcc3.1 aus
          Xcode Tools (frühere Versionen von OS  X enthalten sie in der normalen
          Installation der Developer Tools).</p>
        <p><em>Anmerkung: </em>Installiert man gcc2.95 und/oder gcc3.1
          verursacht dies keine Probleme bei der Installation des gcc3.3
          Compilers - sie können koexistieren.</p>
      </answer>
    </faqentry>
    <faqentry name="system-java">
      <question>
        <p>Fink beklagt sich mit: <code>Failed: Can't resolve dependency
          "system-java-dev"</code>, aber das Paket gibt es gar nicht.</p>
      </question>
      <answer>
        <p>"system-java-dev" ist ein virtuelles Paket. Derzeit (Jan. 2011) tritt
          der Fehler auf Leopard und Snow Leopard auf, bei denen sich Apples
          Java-Pakete änderten.</p>
        <p>Sie müssen das Paket <filename>Java Developer Package</filename>
          von
          <link url="http://connect.apple.com">Apple</link>
          herunter laden.</p>
        <p>Dann überprüfen sie mit dem Kommando</p>
<codeblock>fink -V</codeblock>
        <p>, dass die Version des Package Manager <em>0.29.15</em> oder höher
          ist.</p>
        <p>Ist die Version von <filename>fink</filename> version älter,
          aktualisieren sie fink mit:</p>
<codeblock>fink selfupdate</codeblock>
        <p>Zeigt ihre <code>Distributionsversion</code> <em>point</em>, wechseln
          sie auf <em>rsync</em> oder <em>cvs</em>, indem sie mit</p>
<codeblock>fink selfupdate-rsync</codeblock>
        <p>oder</p>
<codeblock>fink selfupdate-cvs</codeblock>
	      <p>aktualisieren. Ist die Version von <filename>fink</filename>
          <em>0.29.99.cvs</em>, dann benutzen sie ein CVS checkout von
          <filename>fink</filename>, das man nicht aktualisieren kann und das
          deshalb hinter der aktuellen Version zurück bleibt. Wir empfehlen,
          diese Kommandos auszuführen:</p>
<codeblock>fink selfupdate ; fink dumpinfo -fallversions fink</codeblock>
	      <p>Dies wird folgende Ausgabe erzeugen:</p>
<codeblock>$ fink dumpinfo -fallversions fink
Scanning package description files..........
Information about 10146 packages read in 2 seconds.
allversions:
   	0.29.21-51
 bi	0.29.99.cvs-20110408.1821</codeblock>
	      <p>Wählen sie letzte Release-Version (eine ohne <em>.cvs</em>, z. B.
          die <em>0.29.21-51</em> von oben) und führen sie diese Kommando aus:</p>
<codeblock>fink install fink-version-revision</codeblock>
        <p>Zum Beispiel:</p>
<codeblock>fink install fink-0.29.21-51</codeblock>
	      <p>um <filename>fink-0.29.51</filename> zu installieren.</p>
        <p>Den Speicherplatz der CVS checkouts von <filename>fink</filename>
          bekommt man mit folgendem Befehl zurück:</p>
<codeblock>sudo rm /sw/fink/10.4/local/injected/binary-darwin-&lt;architecture&gt;/*;
sudo rm /sw/fink/10.4/local/injected/finkinfo/*;
fink index -f
fink scanpackages
sudo apt-get update
fink cleanup</codeblock>
        <p>ersetzen sie &lt;architecture&gt; mit ihrer Architektur, also
          <em>powerpc</em>, <em>i386</em>, oder <em>x86_64</em>.</p>
       </answer>
    </faqentry>
    <faqentry name="dpkg-split">
      <question>
        <p>Wenn ich ein Paket installieren möchte, bekomme ich
          <quote>dpkg (subprocess): failed to exec dpkg-split to see if it's
          part of a multiparter: No such file or directory</quote>. Wie behebe
          ich diesen Fehler?</p>
      </question>
      <answer>
        <p>Im allgemeinen kann dies behoben werden, in dem man die Umgebung
          korrekt einrichtet, wie hier
          <xref chapter="usage-fink" section="fink-not-found">hier</xref>
          beschrieben.</p>
      </answer>
    </faqentry>
    <faqentry name="xml-parser">
      <question>
        <p>Ich bekommen folgende Fehler-Meldung: <quote>configure: error:
          XML::Parser perl module is required for intltool</quote>.  Was soll
          ich machen?</p>
      </question>
      <answer>
        <p>Benutzen sie den unstable Baum, überprüfen sie, dass
          intltool-0.34.1 oder später installiert ist..</p>
        <p>Andernfalls überprüfen sie, ob die richtige Variante des Pakets
          xml-parser-pm installiert ist, die zu der Perl-Version auf ihrem
          System passt. Auf Panther sollten sie zum Beispiel
          <code>xml-parser-pm581</code> statt <code>xml-parser-pm560</code>
          haben (Sie können auch den Platzhalter <code>xml-parser-pm</code>
          haben), weil sie <code>Perl-5.8.1</code> und nicht
          <code>Perl-5.6.0</code> haben. Benutzen sie auf Jaguar die
          Standard-Systemversion von Perl, haben sie die Variante
          <code>pm560</code>. Haben sie <code>Perl 5.8.0</code> installiert,
          haben sie die Variante <code>pm580</code>.</p>
      </answer>
    </faqentry>
    <faqentry name="master-problems">
      <question>
        <p>Wenn ich versuche, ein Paket herunter zu laden, geht Fink auf eine
          merkwürdige Seite mit <quote>distfiles</quote> im Namen und die Datei
          gibt es dort nicht.</p>
      </question>
      <answer>
        <p>Es ist folgendes passiert: Fink versuchte einen seiner
          <quote>Master</quote>-Spiegelserver zu nutzen. Sie wurden aufgesetzt,
          damit Quell-Dateien für Fink-Pakete auch zur Verfügung stehen, wenn
          sie auf den Originalseiten verschoben wurden. Meistens tritt dieser
          Fehler auf, wenn eine neue Version veröffentlicht wurde, die
          Quell-Dateien aber noch nicht auf die
          <quote>Master</quote>-Spiegelserver kopiert wurden.</p>
        <p>Beheben sie das Problem, indem sie das Kommando
          <code>fink configure</code> ausführen und setzen sie die
          Suchreihenfolge auf "use Master mirrors last".</p>
    </answer>
  </faqentry>
  <faqentry name="compile-options">
    <question>
      <p>Ich möchte, dass Fink andere Optionen beim Erstellen eines Pakets
        verwendet.</p>
    </question>
    <answer>
      <p>Als erstes sollten sie den Paket-Autor kontaktieren und ihn um eine
        Variante bitten. Das ist manchmal leicht. Meldet sich der Autor aber
        nicht, es gibt kein neues Paket oder wollen sie eine andere Option
        selbst probieren, schauen sie sich die folgenden zwei Kapitel an:
        <link url="/doc/quick-start-pkg/index.php">Packaging Tutorial</link>
        und <link url="/doc/packaging/index.php">Packaging Handbuch</link>.</p>
      <p><em>Anmerkung: </em>Die Einstellungen von Fink sind bewusst so, dass
        alle offiziellen Binär-Programme identisch sind egal auf welchem
        Rechner sie erstellt wurden. Optimierungen für einen G5 Prozessor sind
        also in offiziellen Paketen nicht eingeschaltet. Wenn sie das brauchen,
        müssen sie das selbst machen.</p>
    </answer>
  </faqentry>
  <faqentry name="alternates">
    <question>
      <p>Immer wenn ich Pakete aus Quellen erzeugen möchte, fragt Fink immer
        wieder nach alternativen Versionen der selben Bibliothek.</p>
    </question>
    <answer>
      <p>In komplexen Erstellungsabhängigkeiten kommt es oft vor, dass ein Paket
        von einer bestimmten Version einer Bibliothek abhängt und andere Pakete
        von einer anderen Version (z. B: <code>db47</code> vs.
        <code>db44</code>). Folglich versucht Fink immer zu der Version zu
        wechseln, die wegen der Abhängigkeiten in dem Paket benötigt werden, die
        sie aktualisieren wollen.</p>
      <p>Unglücklicherweise kann es wegen einiger Beschränkungen in Fink bei
        einem ausreichend kompliziertem <code>update-all</code> zu einer
        Fehlersituation mit folgender Meldung kommen:</p>
<codeblock>Fink::SysState: Could not resolve inconsistent dependencies</codeblock>
      <p>Diese Situation kann mit folgenden Kommandos aufgelöst werden:</p>
<codeblock>fink scanpackages
sudo apt-get update
sudo apt-get install foo=1.23-4</codeblock>
      <p>In manchen komplizierten Situationen kann es aber sein, dass dies noch
        nicht ausreicht. Dann müssen sie die Pakete eines nach dem anderen
        aktualisieren, zumindest ein Stück weit.</p>
    </answer>
  </faqentry>
  <faqentry name="python-mods">
    <question>
      <p>Versuche ich, ein Python-Modul zu erstellen, bekomme ich eine Fehlermeldung mit <code>MACOSX_DEPLOYMENT_TARGET </code>.</p>
    </question>
    <answer>
      <p>Wenn die Fehlermeldungen so aussehen:</p>
<codeblock>running build
running build_ext
Traceback (most recent call last):
  File "setup_socket_ssl.py", line 21, in ?
    depends = ['socketmodule.h'] )
  File "/sw/src/root-python24-2.4.1-1/sw/lib/python2.4/distutils/core.py", line 166, in setup
SystemExit: error: $MACOSX_DEPLOYMENT_TARGET mismatch: now "10.4" but "10.3" during configure
### execution of /sw/bin/python2.4 failed, exit code 1</codeblock>
      <p>liegt das Problem daran, dass das Paket <code>python2*</code> das
        aktuelle <code>MACOSX_DEPLOYMENT_TARGET</code> in eine
        Konfigurationsdatei schreibt, wenn es erzeugt wird und die python build
        utilities diesen Wert nehmen, wenn sie Module erstellen. Dadurch können
        Konflikte entstehen, wenn z. B. ein Paket <code>python24</code> unter
        10.4 von 10.3 stammt, weil entweder von 10.3 auf 10.4 oder über die
        binäre <em>10.4-transitional</em> Distribution aktualisiert wurde und
        dabei <code>python24</code> nicht erneut erstellt wurde, weil python von
        einem <code>MACOSX_DEPLOYMENT_TARGET</code> 10.3 ausgeht, das System
        aber 10.4 hat.</p>
      <p>Die Lösung ist das problematische Paket <code>python</code> neu zu
        erstellen, also <code>fink rebuild python24</code> im obigen Beispiel.</p>
      <p>Taucht der gleiche Fehler zur Laufzeit auf, dann erstellen sie zuerst
        das entsprechende Paket <code>python2*</code> erneut und dann das
        Modul.</p>
    </answer>
  </faqentry>
  <faqentry name="libtool-unrecognized-dynamic">
    <question>
      <p>Ich bekomme von <filename>libtool</filename>den Fehler
        <quote>unrecognized option `-dynamic'</quote>.</p>
    </question>
    <answer>
      <p>Der Fehler:</p>
<codeblock> libtool: unrecognized option `-dynamic'</codeblock>
      <p>bedeutet normalerweise, dass Apples
        <filename>/usr/bin/libtool</filename> durch <filename>libtool</filename>
        von GNU ersetzt haben. Unglücklicherweise machen die beiden
        <code>libtools</code> <em>nicht</em> das selbe.</p>
      <p>Die einzige Lösung ist von irgend woher ein funktionierendes
        <filename>libtool</filename> von Apple zu bekommen. Es ist im Paket
        <filename>DeveloperTools.pkg</filename> der Xcode Tools enthalten und
        sie können das gesamte Paket erneut installieren, wenn sie zuerst seine
        Quittung in <filename>/Library/Receipts</filename> löschen (einfach in
        den Mülleimer ziehen oder mit dem Kommando <code>sudo rm -rf
        /Library/Receipts/DeveloperTools.pkg</code>).</p>
    </answer>
  </faqentry>
  <faqentry name="missing-usr-include-headers">
    <question>
      <p>Ich erhalte eine Fehlermeldung über fehlende Header in
        <filename>/usr/include</filename></p>
    </question>
    <answer>
      <p>Wenn sie auf 10.9 oder 10.10 Fehlermeldungen wie</p>
<codeblock>The directory that should contain system headers does not exist:
  /usr/include</codeblock>
      <p>oder</p>
<codeblock>cp: /usr/include/lber*.h: No such file or directory</codeblock>
      <p>während der Erstellung erhalten, bedeutet das, dass sie eine Version
        der Xcode command-line tools von einer früheren OS X version verwenden.
        Versuchen sie, eine neuere Version aus dem App Store zu erhalten, mit
        <code>sudo xcode-select -install</code> zu aktualisieren oder von der
        Seite developer.apple.com herunter zu laden.</p>
      </answer>
    </faqentry>
    <faqentry name="pkginfo">
      <question>
        <p>Wenn ich ein Paket mit app-Bundle unter Yosemite aktualisieren
          möchte, erhalte ich Fehler mit einer Datei PkgInfo.</p>
      </question>
      <answer>
        <p>Die Fehlermeldung sieht vermutlich so aus:</p>
<codeblock>Unpacking replacement wxmaxima-mac ...
/sw/bin/dpkg: error processing /sw/fink/dists/stable/main/binary-darwin-x86_64/sci/wxmaxima-mac_15.04.0-1_darwin-x86_64.deb (--install):
 unable to make backup link of `./sw/Applications/wxMaxima.app/Contents/PkgInfo' before installing new version: Operation not permitted
/sw/bin/dpkg-deb: subprocess paste killed by signal (Broken pipe: 13)</codeblock>
        <p>Gegenwärtig muss man das problematische Paket entfernen (remove),
          womit auch die Datei PkgInfo gelöscht wird und dann die aktualisierte
          Version installieren.</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="comp-packages">
    <title>Probleme beim Übersetzen - Bestimmte Pakete</title>
    <shorttitle>Übersetzen (2)</shorttitle>
    <faqentry name="libgtop">
      <question>
        <p>Das Übersetzen eines Pakets bricht mit einer Fehlermeldung ab, in der
          <code>sed</code> vorkommmt.</p>
      </question>
      <answer>
        <p>Dieser Fehler kann auftreten, wenn das Login-Skript (also
          <code>~/.cshrc</code>) etwas in ein Terminalfenster schreiben möchte,
          z. B. mit "<code>echo Hello</code>" oder <code>xttitle</code>. Man
          kann den Fehler beheben, in dem man die Zeile auskommentiert oder
          löscht.</p>
        <p>Wollen sie das Echo aber unbedingt behalten, können sie den Fehler
          so abfangen:</p>
<codeblock>if ( $?prompt) then
	echo Hello 
endif</codeblock>
      </answer>
    </faqentry>
  <faqentry name="Leopard-libXrandr">
    <question>
      <p>Ich kann <em>gtk+2</em> auf OS X 10.5 nicht installieren.</p>
    </question>
    <answer>
      <p>Dieser Fehler geht meistens auf fehlende Bibliotheken zurück, z. B.:
        <filename>/usr/X11/lib/libXrandr.2.0.0.dylib</filename> oder
        <filename>/usr/X11/lib/libXdamage.1.1.0.dylib</filename> (oder andere
        Versionen der Bibliotheken in <filename>/usr/X11/lib/</filename>).</p>
      <p>Derzeit ist die beste Lösung Xcode 3.1.3 oder später zu installieren.</p>
<!--    <p>Ein zweites Problem betrifft undefinierte Symbole :
        "<code>_gdk_threads_add_idle referenced from libgtk-x11-2 expected to be 
        defined in libgdk-x11-2</code>", usw.</p>
      <p>Entfernt man das Paket <code>gtk+2-dev</code>, geht es weiter. Dieser
        Fehler ist behoben und sollte nicht mehr auftreten.</p> <-->
    </answer>
  </faqentry>
  <faqentry name="xml-sax-expat">
    <question>
      <p>Wenn ich ein Paket xml-sax-pm installiere, bekomme ich Fehlermeldungen
        mit <code>_Perl_Gthr_key_ptr</code>.</p>
    </question>
    <answer>
      <p>Sieht der Fehler so oder so ähnlich aus</p>
<codeblock>update-perl5123-sax-parsers: adding Perl SAX parser
module info file of XML::SAX::Expat...
dyld: lazy symbol binding failed: Symbol not found:
_Perl_Gthr_key_ptr
  Referenced from: /sw/lib/perl5/5.12.3/darwin-
  thread-multi-2level/auto/XML/Parser/Expat/Expat.bundle
  Expected in: flat namespace</codeblock>
      <p>wird meistens ein anderes <filename>perl5.12</filename> statt das des
        Systems ausgewählt (oder je nach System
        <filename>perl5.10.0</filename> oder <filename>perl5.8.8</filename>).</p>
      <p>Sie können dies mit folgendem Befehl überprüfen:</p>
<codeblock>type -a perl5.12</codeblock>
	    <p>wenn sie die Shell <filename>bash</filename> verwenden oder</p>
<codeblock>where perl5.12</codeblock>
	    <p>wenn sie die Shell <filename>tcsh</filename> verwenden (und ersetzen
        sie <filename>perl5.12</filename> entsprechend ihrer Situation).</p>
	    <p>Ein temporäre Lösung ist <filename>perl5.12</filename> umzubenennen,
        solange sie mit Fink Pakete erstellen.</p>
    </answer>
  </faqentry>
  <faqentry name="malloc-symlink">
    <question>
      <p>Ich kann das Finkpaket <code>gcc</code> wegen "conflicting types for
        'pointer_t'" nicht erstellen.</p>
    </question>
    <answer>
      <p>Der Fehler sieht meistens so aus:</p>
<codeblock>../../gcc-4.6.3/gcc/fortran/module.c:110:1:
error: conflicting types for 'pointer_t'
/usr/include/mach/vm_types.h:40:26:
note: previous declaration of 'pointer_t' was here
make[3]: *** [fortran/module.o] Error 1</codeblock>
      <p>Das kommt meistens davon, dass unnötigerweise ein Symlink
      <filename>/usr/include/malloc.h</filename><code>-&gt;</code><filename>/usr/include/malloc/malloc.h</filename>
      eingerichtet wurde. Löschen sie den Symlink.</p>
      <p>Auf OS X sollte normalerweise statt
        <code>#include &lt;malloc.h&gt;.</code>
        <code>#include &lt;stdlib.h&gt;</code> verwendet werden.</p>
    </answer>
  </faqentry>
    <faqentry name="all-others">
      <question>
        <p>Ich habe mit Paketen Probleme, die hier nicht aufgeführt sind.</p>
      </question>
      <answer>
        <p>Da Probleme mit Paketen oft nur vorübergehend sind, haben wir uns
          entschieden, sie auf der Fink Wiki-Seite einzutragen. Schauen sie auf
          der Seite
          <link url="http://wiki.finkproject.org/index.php/Fink:Package_issues"> Package issues page</link>
          nach.</p>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="usage-general">
    <!-- FAQs in usage-general are coded into VirtPackage.pm
       Do not rename, remove, or otherwise cause the URL to change. -->
    <title>Benutzung von Paketen - Allgemein</title>
    <shorttitle>Benutzung (1)</shorttitle>
    <faqentry name="xlocale">
      <question>
        <p>Ich erhalte viele Meldungen der Art "locale not supported by C
          library". Ist das schlimm?</p>
      </question>
      <answer>
        <p>Es ist nicht weiter schlimm. Es bedeutet lediglich, dass das Programm
          die voreingestellten englischen Meldungen, Datumsformate usw. benutzen
          wird. Ansonsten wird das Program ganz normal funktionieren. Die Seite
          <link url="/doc/x11/trouble.php#locale">Probleme beheben</link>
          hat weitere Details.</p>
      </answer>
    </faqentry>
    <faqentry name="passwd">
      <question>
        <p>Plötzlich gibt es eine ganze Reihe von seltsamen Nutzern auf meinem
          System. Die Namen sind "mysql", "pgsql" und "games". Wo kommen die
          denn her?</p>
      </question>
      <answer>
        <p>Sie haben mit Fink ein Paket installiert, das von einem anderen Paket
          abhängt, das passwd heisst. Diese Paket installiert aus
          Sicherheitsgründen eine Reihe von extra Nutzern auf ihrem System. Auf
          allen Unix-Systemen gehören Dateien und Prozessen bestimmten
          "Eigentümern", wodurch System-Administratoren Feinabstimmungen über
          Zugriffsrechte und damit der Systemsicherheit vornehmen können.
          Programme wie apache und mysql benötigen einen Eigentümer und eine
          Zuordnung dieser Daemons zu root ist unsicher. Stellen sie sich doch
          nur vor, dass apache kompromittiert wurde und als root auch noch auf
          alle Dateien ihres Systems zugreifen kann. Für diesen Zweck gibt es
          das Paket passwd, mit dem diese extra Nutzer eingerichtet werden, die
          von bestimmten Fink-Paketen benötigt werden.</p>
        <p>Es sieht zunächst alarmierend aus, wenn plötzlich eine Reihe
          unerwarteter Nutzer in den Systemeinstellungen -> Nutzer auftauchen.
          Aus folgenden Gründen auf keinen Fall die Nutzer löschen:</p>
        <ul>
          <li>Offensichtlich haben sie ein Paket installiert, das die Nutzer
            benötigt. Diese Nutzer zu löschen wird wohl nicht sinnvoll sein,
            oder?</li>
          <li>Es gibt sowieso einige extra Nutzer im System, von denen sie
            bisher vermutlich nichts mitbekommen haben: www, daemon und nobody
            sind nur einige davon. Ihre Anwesenheit ist Konvention auf jedem
            Unix-System. Das Paket passwd fügt einige hinzu, die von Apple nicht
            zur Verfügung gestellt werden. Sie können sich die Nutzer mit dem
            Tool NetInfo Manager.app oder mit dem Kommando
            <code>niutil -list . /users</code> ansehen.</li>
          <li>Sollten sie diese Nutzer entgegen unserem Rat doch löschen wollen,
            dann seien sie extrem vorsichtig. Löscht man sie über die
            Systemeinstellungen, dann werden die Dateien und Ordner, die bisher
            diesen Nutzern zugeordnet waren, einem zufälligen Administrator
            zugeordnet. Dabei kam es in der Vergangenheit dazu, dass die
            Zugriffsrechte der Administratorkonten so verstellt wurden, dass
            nichts mehr ging. Das ist ein Fehler in den Systemeinstellungen und
            wurde auch als Bugreport an Apple gemeldet. Besser ist es diese
            Nutzer mit dem Programm NetInfo Manager.app oder dem Kommando
            <code>niutil</code> zu löschen. Lesen sie auf jeden Fall die
            man-Pages für <code>niutil</code> und machen sie sich über NetInfo
            kundig.</li>
        </ul>
        <p>Fink fragt <em>ausdrücklich</em> während der Installation des Pakets
          passwd um ihre Erlaubnis, diese Nutzer einzurichten. So sehr sollten
          sie also nicht über die Präsenz dieser Nutzer überrascht sein.</p>
      </answer>
    </faqentry>
    <faqentry name="compile-myself">
      <question>
        <p>Wie übersetze ich ein Program selbst, das Pakete aus Fink benutzt?</p>
      </question>
      <answer>
        <!-- TODO: maybe change this to use LIBRARY_PATH / DYLD_LIBRARY_PATH ? 
         -->
        <p>Wenn sie etwas selbst außerhalb von Fink übersetzen wollen, müssen
          dem Compiler und dem Linker mitgeteilt werden, wo die von Fink
          installierten Header-Dateien und Bibliotheken sind. Man muss dem
          Compiler die erforderliche Architektur mitteilen. Wird ein Programm
          mit dem üblichen configure/make Prozess erzeugt, muss man folgende
          Umgebungsvariablen setzen:</p>
        <p>-bash-</p>
<codeblock>export CFLAGS=-I/sw/include
export LDFLAGS=-L/sw/lib 
export CXXFLAGS=$CFLAGS 
export CPPFLAGS=$CXXFLAGS 
export ACLOCAL_FLAGS=&quot;-I /sw/share/aclocal&quot;
export PKG_CONFIG_PATH=&quot;/sw/lib/pkgconfig&quot;
export PATH=/sw/var/lib/fink/path-prefix-10.6:$PATH
export MACOSX_DEPLOYMENT_TARGET=10.5</codeblock>
        <p>-tcsh-</p>
        <codeblock>setenv CFLAGS -I/sw/include 
setenv LDFLAGS -L/sw/lib 
setenv CXXFLAGS $CFLAGS 
setenv CPPFLAGS $CXXFLAGS 
setenv ACLOCAL_FLAGS &quot;-I /sw/share/aclocal&quot;
setenv PKG_CONFIG_PATH &quot;/sw/lib/pkgconfig&quot;
setenv PATH /sw/var/lib/fink/path-prefix-10.6:$PATH
setenv MACOSX_DEPLOYMENT_TARGET 10.5</codeblock>
	      <p>(Dies gilt für Systeme ab 10.5)</p>
        <p>Es ist oft am einfachsten, die Umgebungsvariablen in den
          Startup-Dateien (also <filename>.cshrc</filename> oder
          <filename>.profile</filename>) einzutragen, so dass sie automatisch
          gesetzt werden. Verwendet ein Paket diese Variablen nicht, dann müssen
          sie die Optionen "-I/sw/include" (für Header-Dateien) und
          "-L/sw/lib" (für Bibliotheken) selbst in die Kommandos für das
          Übersetzen hinzufügen. Einige Pakete nutzen extra Variablen
          außerhalb des üblichen, wie die configure-Optionen EXTRA_CFLAGS oder
          --with-qt-dir=. "./configure --help" erzeugt normalerweise eine Liste
          der extra Optionen eines Pakets.</p>
        <p>Oft muss man auch die Entwicklungspakete mit den Header-Dateien für
          das Bibliothekspaket installieren, das sie benutzen, z. B. das Paket
          <em>foo-1.0-1-dev</em> für das Bibliothekspaket
          <em>foo-1.0-1-shlibs</em>.</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x11-applications-menu">
      <question>
        <p>Ich kann keines der Programme, die ich in Fink installiert habe, über
          das Programme-Menu (Applications) in Apples X11 starten.</p>
      </question>
      <answer>
        <p>Apples X11 protokolliert die Änderungen in der Fink-Umgebung nicht
          mit. Dies bedeutet, dass the Pfad im Programme-Menu nicht so gesetzt
          ist, dass Fink-Programme gefunden werden. Die Lösung ist dem Namen des
          Fink-Programms ein</p>
<codeblock>source /sw/bin/init.sh ;</codeblock>
        <p>voran zu stellen. Wenn sie z. B. das mit fink installierte Gimp
          starten wollen, schreiben sie in den Eintrag für Gimp:</p>
<codeblock>source /sw/bin/init.sh ; gimp</codeblock>
        <p>Sie können auch die Datei .xinitrc (in ihrem Nutzer-Verzeichnis)
          editieren und folgendes nach der ersten Zeile hinzufügen:</p>
<codeblock>source /sw/bin/init.sh</codeblock>
      </answer>
    </faqentry>
    <faqentry name="x-options">
      <question>
        <p>Ich durch die vielen Optionen für X11 (Apple X11, XFree86,
          etc. )verwirrt. Welche soll ich installieren?</p>
      </question>
      <answer>
        <p>Alle Optionen sind Variaten von XFree86, denn sie sind alle von
          XFree86-Code abgeleitet, wenn auch mit kleinen Unterschieden. Die
          Optionen sind für Panther und Jaguar unterschiedlich.</p>
        <p>Unter Panther hat man die Wahl zwischen:</p>
        <ul>
          <li>
            <p>Apples X11 (auf der dritten Disk), aber vergessen sie nicht, auch
              noch die X11 SDK zu installieren, die auf der XCode Disk ist,
              wenn sie auch Programme übersetzen wollen oder wenn sie vorhaben,
              andere Fink-Pakete aus den Quellen zu übersetzen, die ebenso von
              X11 abhängen.</p>
          </li>
          <li>
            <p>4.4.x erstellt mit Fink: Installieren sie die Pakete
              <code>xfree86</code> und <code>xfree86-shlibs</code>.</p>
          </li>
          <li>
            <p>X.org erstellt mit Fink: Installieren sie die Pakete
              <code>xorg</code> und <code>xorg-shlibs</code>.</p>
          </li>
        </ul>
        <p>Unter Jaguar sind folgende Optionen beliebt und damit auch einige
          der Fink-Pakete:
        </p>
        <ul>
          <li>
            <p>4.2.x erstellt mit Fink: Installieren sie die Pakete
              <code>xfree86-base</code> und <code>xfree86-rootless</code> oder
              <code>xfree86-base-threaded</code> und
              <code>xfree86-rootless-threaded</code> und die entsprechenden
              <code>-shlibs</code>-Pakete.</p>
          </li>
          <li>
            <p>4.3.x erstellt mit Fink: Installieren sie die Pakete
              <code>xfree86</code> und <code>xfree86-shlibs</code>.</p>
          </li>
          <li>
            <p>4.2.x von Apple (unter der Annahme, dass sie User- und SDK-Pakete
              installiert haben): Das Paket <code>system-xfree86</code> wird für
              die aktuelle Version von Fink automatisch erzeugt; installieren
              sie das Paket <em>nicht</em>. (Bemerkung: Die öffentliche
              Beta-Version von Apples X11 für Jaguar ist nicht mehr verfügbar,
              d. h., dass diese Option nur gegeben ist, wenn sie Apples X11
              installiert haben, als es noch zur Verfügung stand.)</p>
          </li>
        </ul>
        <p>Es gibt noch anderen Optionen. Lesen sie die ausführlichere
          Dolkumentation in
          <link url="/doc/x11/index.php">Nutzung von X11</link>
          .</p>
      </answer>
    </faqentry>
    <faqentry name="no-display">
      <question>
        <p>Wenn ich versuche, ein Programm zu starten, erhalte ich die
          Fehlermeldung: "cannot open display:". Was mucss ich tun?</p>
      </question>
      <answer>
        <p>Die Fehlermeldung bedeutet, dass ihr System keine Verbindung zu ihrem
          X-Bildschirm aufbaut. Gehen sie wie folgt vor::</p>
        <p>1. Starten sie X (Apples X11, XFree86, ...).</p>
        <p>2. Überprüfen sie, dass die Umgebungsvariable DISPLAY korrekt gesetzt
          ist. Mit den üblichen Einstellungen können sie das so machen:</p>
<codeblock>setenv DISPLAY :0</codeblock>
        <p>wenn sie die Shell <code>tcsh</code> benutzen oder</p>
<codeblock>export DISPLAY=:0</codeblock>
        <p>wenn sie die Shell <code>bash</code>benutzen.</p>
      </answer>
    </faqentry>
    <faqentry name="suggest-package">
      <question>
        <p>Ich finde mein Lieblingsprogramm nicht in Fink. Wie kann ich ein
          neues Programm für Fink vorschlagen?</p>
      </question>
      <answer>
        <p>Tragen sie ihren Wunsch auf Webseiten von Fink im
          <link url="http://sourceforge.net/tracker/?atid=371315&amp;group_id=17203">Package Request Tracker</link>
          ein.</p>
        <p>Anmerkung: Dazu benötigen sie ein Konto bei SourceForge.</p>
      </answer>
    </faqentry>
    <faqentry name="virtpackage">
      <!-- FAQ usage-general.virtpackage is coded into VirtPackage.pm
         Do not rename, remove, move to a different chapter, or
         otherwise cause the URL to change. -->
      <question>
        <p>Was bedeuten all diese virtuellen Pakete <code>system-*</code>,
          die zwar immer mal wieder auftauchen, die ich aber selbst nicht
          installieren oder löschen kann?</p>
      </question>
      <answer>
        <p>Pakete mit Namen wie <code>system-perl</code> sind reine Platzhalter.
          Sie enthalten keine tatsächlichen Dateien, sondern dienen nur als ein
          Mechanismus, um Fink Informationen über Programme zur Verfügung zu
          stellen, die manuell und außerhalb von Fink installiert wurden.</p>
        <p>Beginnend mit OS X 10.3 sind die meisten Platzhalter-Pakete keine
          echten Pakete, sondern virtuelle, in denen Datenstrukturen über Pakete
          aus einer bestehenden Liste von Fink selbst gespeichert werden. Für
          jedes virtuelle Paket überprüft Fink die Präsenz bestimmter Dateien an
          bestimmten Plätzen und wenn sie gefunden werden, bekommt das virtuelle
          Paket den Status "installiert".</p>
        <p>Mit dem Programm <code>fink-virtual-pkgs</code> aus dem Paket fink
          bekommen sie eine Liste der Programme, von denen Fink davon ausgeht,
          dass sie installiert sind. Mit der Option <code>--debug</code>
          erhalten sie die zusätzlich Information, welche Dateien überprüft hat,
          um den Status eines Pakets fest zu stellen.</p>
        <p>Unglücklichweise ist es nicht vorgesehen, dass sie ein beliebiges
          Programm selbst installieren und fink dann feststellt, dass das
          Programm bereits installiert ist und die eigene Version nicht
          installiert. Es ist einfach viel zu kompliziert, für den allgemeinen
          Fall die configure- und compiler-Optionen, Pfadnamen und so weiter
          festzustellen oder zu überprüfen.</p>
        <p>Es folgt die Liste der wichtigsten, virtuellen Pakete die Fink
          definiert (ab fink-0.19.2):</p>
        <ul>
          <li>system-perl: [virtual package representing perl]
            <p>Steht für <filename>/usr/bin/perl</filename>. Es ist Teil der
              normalen OS X Installation. Zu diesem Paket gehören auch
              <code>system-perlXXX</code> und <code>perlXXX-core</code>, je nach
              Version X.X.X des Perl-Iinterpreters.</p>
          </li>
          <li>system-javaXXX: [virtual package representing Java X.X.X]
            <p>Steht für die Java Runtime Environment, die Teil von OS X
              (und auch in Apples Software-Aktualisierung) ist. Weitere
              Informationen stehen auf
              <link url="http://www.apple.com/java">Apples Java-Seite</link>
              .</p>
          </li>
          <li>system-javaXXX-dev: [virtual package representing Java X.X.X
            development headers]
            <p>Steht für die Java SDK, die man manuell von der Seite
              <link url="http://connect.apple.com">connect.apple.com</link>
              herunter laden (man muss sich registrieren, wenn auch kostenlos)
              und installieren muss. Haben sie ihr Java Runtime Environment
              nicht aktualisiert, wird ihr SDK möglicherweise nicht automatisch
              aktualisiert (und vielleicht sogar gelöscht!). Denken sie daran,
              dass sie die SDK überprüfen, wenn sie die Runtime Environment
              installiert oder aktualisiert haben. Je nachdem müssen sie die SDK
              herunter laden und installieren. Schauen sie sich auch das Kapitel
              <xref chapter="comp-general" section="system-java"> in dieser FAQ
              an</xref>.</p>
          </li>
          <li>system-java3d: [virtual package representing Java3D]</li>
          <li>system-javaai: [virtual package representing Java Advanced Imaging]
            <p>Steht für die Java extensions für 3D-Grafik und Bildbearbeitung,
              die man manuell von Apple herunter laden und installieren muss.
              Weitere Informationen erhalten sie auf
              <link url="http://docs.info.apple.com/article.html?artnum=120289">Apples Web-Seite</link>
              .</p>
          </li>
          <li>system-xfree86: [placeholder for user installed x11]</li>
          <li>system-xfree86-shlibs: [placeholder for user installed x11 shared
            libraries]
            <p>Steht für Apples X11/XDarwin, ein optionaler Teil von OS X
              (X11User.pkg). Es liefert die virtuellen Pakete <code>x11</code>
              und <code>x11-shlibs</code>. Lesen sie dazu auch dieses Kapitel
              <xref chapter="comp-packages" section="cant-install-xfree">in
              dieser FAQ</xref> durch.</p>
          </li>
          <li>system-xfree86-dev [placeholder for user installed x11 development
            tools]
            <p>Steht für Apples X11/XDarwin SDK, ein optionaler Teil von OS X
              (X11SDK.pkg). Es liefert das virtuelle Paket <code>x11-dev</code>.
              Lesen sie dazu auch dieses Kapitel<xref chapter="comp-packages"
              section="cant-install-xfree">in dieser FAQ</xref> durch.</p>
          </li>
        </ul>
      </answer>
    </faqentry>
  </chapter>
  <chapter filename="usage-packages">
    <!-- FAQs in usage-packages are coded into VirtPackage.pm
       Do not rename, remove, or otherwise cause the URL to change. -->
    <title>Benutzung von Paketen - Bestimmte Pakete</title>
    <shorttitle>Benutzung (2)</shorttitle>
    <faqentry name="xmms-quiet">
      <question>
        <p>Ich bekommen keinen Ton von XMMS</p>
      </question>
      <answer>
        <p>Überprüfen sie, dass in den Einstellungen von XMMS das "eSound
          Output Plugin" ausgewählt ist. Aus unerfindlichem Grund wird der
          disk writer als Voreinstellung eingestellt.</p>
        <p>Ist immer noch kein Ton zu hören oder wenn sich XMMS beklagt, dass es
          die Soundkarte nicht finden kann, können sie folgendes probieren:</p>
        <ul>
          <li>Überprüfen sie zuerst, ob nicht der Ton in OS X ausgestellt
            ist.</li>
          <li>Führen sie das Kommando <code>esdcat
            /usr/libexec/config.guess</code> (oder irgendeine andere Datei von
          normaler Größe) aus. Hören sie ein kurzes Geräusch, dann funktioniert
          eSound und XMMS sollte auch funktionieren, wenn es richtig konfiguriert
          ist. Hören sie überhaupt nichts, funktioniert esd aus irgendeinem
          Grund nicht. Sie können versuchen, es manuell mit dem Kommando
          <code>esd &amp;</code> zu starten und die Meldungen abwarten.</li>
          <li>Wenn es immer noch nicht funktioniert, überprüfen sie die
            Zugriffsrechte der Dateien <code>/tmp/.esd</code> und
            <code>/tmp/.esd/socket</code>. Sie sollten normalen Nutzern
            gehören. Gehören sie nicht ihnen, brechen sie esd ab, wenn es läuft,
            löschen sie das Verzeichnis als root (<code>sudo
            rm -rf /tmp/.esd</code>), starten esd noch einmal (als normaler
            Nutzer, nicht als root).</li>
        </ul>
        <p>Beachten sie, dass esd entworfen wurde, um unter einem normalen
          Nutzerkonto und nicht unter root zu laufen. Normalerweise kommuniziert
          es über den file system socket <code>/tmp/.esd/socket</code>. Sie
          brauchen die Optionen <code>-tcp</code> und <code>-port</code> nur,
          wenn sie esd-Klienten auf anderen Rechnern über ein Netzwerk laufen
          lassen wollen.</p>
        <p>Es gab auch Berichte, dass XMMS auf OS X 10.1 abstürzt oder
          einfriert. Dieses Problem ist weder analysiert noch behoben.</p>
      </answer>
    </faqentry>
    <faqentry name="nedit-window-locks">
      <question>
        <p>Wenn ich eine Datei mit nedit editiere und eine weitere Datei öffne,
          erscheint ein Fenster, das aber nicht auf Eingaben reagiert.</p>
      </question>
      <answer>
        <p>Dies ist ein bekanntes Problem, das mit neueren Version von
          <filename>nedit</filename> und <filename>lesstif</filename> auf allen
          Plattformen auftritt. Die Lösung ist, ein neues Fenster mit
          File--&gt;New zu öffnen und dann die nächste Datei, die man bearbeiten
          will, zu öffnen.</p>
        <p>Das ist in der Version <filename>nedit-5.3-6</filename> behoben, das
          von <filename>openmotif3</filename> und nicht von
          <filename>lesstif</filename> abhängt.</p>
      </answer>
    </faqentry>
    <faqentry name="xdarwin-start">
      <question>
        <p>Hilfe! Wenn ich XDarwin starte, bricht es sofort ab!</p>
      </question>
      <answer>
        <p>Nur keine Panik. Das Dokument über X11 hat ein ausführliches
          Kapitel über
          <link url="/doc/x11/trouble.php#immediate-quit">ausführliches Kapitel</link>
          zu diesem Problem.</p>
      </answer>
    </faqentry>
    <faqentry name="no-server">
      <question>
        <p>Wenn ich versuche, XDarwin zu starten, erhalte ich die Fehlermeldung
          "xinit: No such file or directory (errno 2): no server
          "/usr/X11R6/bin/X" in PATH".</p>
      </question>
      <answer>
        <p>Überprüfen sie zuerst, dass source init.sh in ihrem X startup
          <code>~/.xinitrc</code> steht.</p>
        <p>Unter Jaguar werden manchmal alle <code>xfree86</code> Pakete
          erstellt, aber nur <code>xfree86-base</code> und
          <code>xfree86-base-shlibs</code> installiert. Überprüfen sie, ob die
          Pakete <code>xfree86-rootless</code> und
          <code>xfree86-rootless-shlibs</code> installiert sind. Wenn nicht,
          sollte das Kommando <code>fink install xfree86-rootless</code> die
          Probleme beheben.</p>
        <p>Sind die Pakete installiert, dann versuchen sie ein <code>fink
          rebuild xfree86-rootless</code>. Sollte das auch nicht funktionieren,
          überprüfen sie ob sie <code>/usr/bin/X11R6</code> in ihrer
          Umgebungsvariable PATH steht.</p>
      </answer>
    </faqentry>
    <faqentry name="apple-x-delete">
      <question>
        <p>Ich möchte, dass die Löschen-Taste in Apples X11.app sich so wie in
          XDarwin verhält.</p>
      </question>
      <answer>
        <p>Einige Nutzer berichteten, dass sich die <code>Löschen</code>-Taste
          in XDarwin und Apples X11 unterschiedlich verhalten. Dies kann so
          behoben werden, indem man folgende Zeilen in die entsprechende
          X Startup-Datei einfügt:</p>
        <p><em>.Xmodmap:</em></p>
<codeblock>keycode 59 = Delete</codeblock>
        <p><em>.Xresources:</em></p>
<codeblock>xterm*.deleteIsDEL: true
xterm*.backarrowKey: false
xterm*.ttyModes: erase ^?</codeblock>
        <p><em>.xinitrc</em></p>
<codeblock>xrdb -load $HOME/.Xresources
xmodmap $HOME/.Xmodmap</codeblock>
      </answer>
    </faqentry>
    <faqentry name="apple-x11-wants-xfree86">
      <!-- FAQ comp-general.apple-x11-wants-xfree86 is coded into VirtPackage.pm
         Do not rename, remove, move to a different chapter, or
         otherwise cause the URL to change. -->
      <question>
        <p>Ich habe Probleme mit X11 und Fink.</p>
      </question>
      <answer>
        <p>Es könnte zwei verschieden Ursachen haben.</p>
        <ul>
          <li><em>Sie installieren binäre Dateien:</em>
            <p>Normalerweise müssen sie das Paket X11User erneut installieren,
              denn der Installer vergisst manchmal eine Datei zu installieren.
              Man muss dies manchmal mehrmals wiederholen. Das Kommando</p>
<codeblock>fink list -i system-xfree86</codeblock>
       	    <p>sollte zeigen, dass die Pakete <code>system-xfree86</code> und
              <code>system-xfree86-shlibs</code> installier sind, und</p>
<codeblock>fink list x11</codeblock>
      	    <p>sollte zeigen dass die virtuellen Pakete <code>x11-shlibs</code>
              und <code>x11</code> installiert sind.</p>
	          <p>Sollte die erneute Installation des Pakete X11User nicht
              funktionieren, lesen sie untern das Kapitel mit den
              <xref section="special-x11-debug">special debug</xref>
              Instruktionen.</p>
          </li>
          <li><em>Sie installieren aus Quell-Code:</em>
            <p>Normalerweise bedeutet dieser Fehler, dass sie X11SDK (erneut)
              installieren müssen, wenn sie Pakete aus Quell-Code erstellen
              wollen. Es ist in dem Ordner Xcode Tools der Tiger DVD oder
              (Optional Installs/)Xcode Tools/Packages auf der Leopard DVD(s).
              Das Kommando</p>
<codeblock>fink list -i system-xfree86  </codeblock>
            <p>sollte die Pakete <code>system-xfree86</code>,
              <code>system-xfree86-shlibs</code> und
              <code>system-xfree86-dev</code> als installiert anzeiten. Fehlt
              das Paket <code>-dev</code>, installieren sie die X11SDK erneut,
              denn der Apple Installer vergisst eine Datei. Manchmal muss dies
              wiederholt werden. Fehlt eines der beiden anderen, dann
              installieren sie aus demselben Grund das Paket X11User. Jetzt
              sollte das Kommando</p>
<codeblock>fink list x11</codeblock>
      	    <p>anzeigen, dass die virtuellen Pakete <code>x11-dev</code>,
              <code>x11-shlibs</code> und <code>x11</code> installiert sind.</p>
	          <p>Führt die erneute Installation der Pakete X11SDK oder X11User
              nicht zum Erfolg, lesen sie unten die ausführlichen
              <xref section="special-x11-debug">special debug</xref>
              Instruktionen.</p>
           </li>
        </ul>
      </answer>
    </faqentry>
    <faqentry name="special-x11-debug">
      <question>
        <p>Ich habe immer noch Probleme mit X11 und Fink.</p>
      </question>
      <answer>
        <p>Wenn die Hinweise im Kapitel <xref
          section="apple-x11-wants-xfree86">Ich habe Probleme mit X11 und
          Fink</xref> nicht helfen oder nicht zu den Problemen passen, kann es
          sein, dass sie die gesamte X11-Installation löschen müssen und ebenso
          alte Platzhalter-Pakete und teilweise oder vollständig installierte
          Pakete mit X11-Bezug:</p>
        <p>Benutzen sie unter Leopard diese Kommandos:</p>
<codeblock>sudo pkgutil --forget com.apple.pkg.X11User
sudo pkgutil --forget com.apple.pkg.X11SDKLeo</codeblock>
        <p>Dann auf 10.4 oder 10.5 führen sie diese Sequenz aus:</p>
<codeblock>sudo dpkg -r --force-all system-xfree86 system-xfree86-42 system-xfree86-43 \
xorg xorg-shlibs xfree86 xfree86-shlibs \
xfree86-base xfree86-base-shlibs xfree86-rootless xfree86-rootless-shlibs \
xfree86-base-threaded xfree86-base-threaded-shlibs \
xfree86-rootless-threaded xfree86-rootless-threaded-shlibs
rm -rf /Library/Receipts/X11SDK.pkg /Library/Receipts/X11User.pkg \
 /Library/Receipts/X11Update*.pkg
fink selfupdate; fink index</codeblock>
        <p>(Die erste Zeile kann Warnungen zur Folge haben, dass sie versuchen,
          Pakete zu löschen, die nicht installiert sind.) Installieren sie dann
          erneut Apples X11 und, wenn benötigt auch X11SDK oder auf 10.4
          eine alternative X11 Implementation wie XFree86 oder X.org.</p>
        <p>Wenn sie immer noch Probleme haben, können sie folgendes Kommando
          ausführen</p>
<codeblock>fink-virtual-pkgs --debug</codeblock>
        <p>um Informationen zu erhalten, was fehlt.</p>
        <p>Benutzen sie eine frühere Version von <code>fink</code>, dann gibt es
          dafür ein Perl-Skript (Dank an Martin Costabel), das sie herunter
          laden und dann ausführen können.</p>
        <ul>
          <li>Laden sie es von hier herunter:
            <link url="http://perso.wanadoo.fr/costabel/fink-x11-debug">http://perso.wanadoo.fr/costabel/fink-x11-debug</link>
          </li>
          <li>Speichern sie es, wo immer sie es wollen.</li>
          <li>Führen sie das Skript im Terminal aus:
<codeblock>perl fink-x11-debug</codeblock>
          </li>
        </ul>
      </answer>
    </faqentry>
    <faqentry name="tiger-gtk">
      <question>
        <p>Nach der Aktualisierung auf Tiger (OS 10.4), bekomme ich immer
          Fehlermeldung mit <code>_EVP_idea_cbc</code>, sobald ich ein GTK-
          Programm starte.</p>
      </question>
      <answer>
        <p>Die Ursache ist ein Fehler in Tigers dynamic linker (aktuell bis
          10.4.1), der aber in 10.4.3 behoben ist. Fink hat eine Lösung im Paket
          <code>base-files-1.9.7-1</code> oder später.</p>
        <p>Wenn sie Tiger und/oder das Paket <code>base-files</code> noch nicht
          aktualisiert haben, können sie das Problem umgehen, in dem sie dem
          Namen der Programme folgendes voranstellen:</p>
<codeblock>env DYLD_FALLBACK_LIBRARY_PATH=: </codeblock>
<p>Wenn sie also <code>gnucash</code> starten wollen, verwenden sie:</p>
<codeblock>env DYLD_FALLBACK_LIBRARY_PATH=: gnucash</codeblock>
        <p>Diese Methode funktioniert bei Programmen, egal ob sie im
          Programme-Menu in Apples X11 oder in einem Terminal gestartet
          werden.</p>
        <p>Vielleicht finden sie es besser, dies global zu setzen (z. B. in
          ihrem Startup-Skript und/oder ihrem <code>.xinitrc</code>, das beim
          Start von GNOME verwendet wird). Fügen sie</p>
<codeblock>export DYLD_FALLBACK_LIBRARY_PATH=:</codeblock>
        <p>in ihrer Datei <code>.xinitrc</code> dazu (unabhängig von ihrer
          Login-Shell) oder der Datei <code>.profile</code> (oder andere
          Startup-Skripte) für <em>bash</em>-Nutzer und:</p>
<codeblock>setenv DYLD_FALLBACK_LIBRARY_PATH :</codeblock>
        <p>ist das entsprechende Kommando für die Datei <code>.cshrc</code>
          für <em>tcsh</em>-Nutzer.</p>
        <p>Anmerkung: This wird automatisch erledigt, wenn sie ein ausreichend
          aktuelles <code>base-files</code> installieren.</p>
      </answer>
    </faqentry>
    <faqentry name="yelp">
      <question>
        <p>Ich erhalte in GNOME-Programmen keine Hilfe.</p>
      </question>
      <answer>
        <p>Sie müssen das Paket <code>yelp</code> installieren. Diese Paket
          wurde nicht in das GNOME-Bundle aufgenommen, weil es Kryptographie
          enthält und man nicht das gesamte GNOME-Bundle in den crypto-Baum
          verschieben wollte, nur damit man das Hilfe-System von GNOME nutzen
          kann.</p>
      </answer>
    </faqentry>
  </chapter>
</document>
