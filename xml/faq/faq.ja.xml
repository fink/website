<?xml version = '1.0' encoding = 'UTF-8'?>
<!DOCTYPE document SYSTEM "../finkfaq.dtd">
<document filename="index" lang="ja" >
<title>The Fink F.A.Q.</title>
<shorttitle>F.A.Q.</shorttitle>
<cvsid>$Id: faq.ja.xml,v 1.49 2020/05/31 13:43:40 nieder Exp $</cvsid>
<preface>
<p>このページは Fink の FAQ です。
質問は、他の FAQ と同様に実際に質問されたものと、あらかじめ予想して作られたものがあります。
質問と回答の形をとった仮のドキュメントとなっています。</p>
<p>FAQは節毎にページがわかれています。
下記の目次にすべての質問があります。
それぞれリンクされていますので、辿っていってください。</p>
</preface>
<chapter filename="general" >
<title>一般的な質問</title>
<shorttitle>一般</shorttitle>
<faqentry name="what" >
<question>
<p>Fink とは何ですか?</p>
</question>
<answer>
<p>Fink は、多くの Unix ソフトウェアを Mac OS X で使えるようにするものです。
このために、次の二つのゴールを設定しています。</p>
<p>一つ目のゴールは、ソフトウェアを Mac OS X に移植することです。
これは、 役に立つ Open Source の Unix ソフトウェアを、 Mac OS X でコンパイルと実行できるよう、必要な修正を行ないます。
この作業は簡単なこともありますが、非常に困難な場合や、パッケージによっては不可能な場合もあります。
我々は、この作業を簡単にするためにツールやドキュメントを提供するよう努めています。</p>
<p>二つ目のゴールは、成果を普通のユーザーが使える形にすることです。
このために我々は、 Linux で使われている <code>dpkg</code> と、 <code>fink</code> という パッケージ管理ツールを使ったディストリビューションを構築しました。
後者は、  <link url="http://www.debian.org/" >Debian GNU/Linux</link> プロジェクトが独自で作成したものです。
バイナリディストリビューションは <code>.deb</code> パッケージ形式を使います。
ソースからパッケージをビルドするには、我々の独自のツールである <code>fink</code> を使い、 <code>.deb</code>  パッケージのファイルを作成します。</p>
</answer>
</faqentry>
<faqentry name="naming" >
<question>
<p>Fink とはどういう意味ですか?</p>
</question>
<answer>
<p>意味はありません。ただの名称です。なにかの頭文字でもありません。</p>
<p>実際は、ドイツ語でフィンチという鳥のことです。
このプロジェクトに名称を考えていた時、 OS の名称である Darwin から、チャールズ＝ダーウィン、ガラパゴス諸島、進化を連想しました。
それで、ダーウィン・フィンチのことを思い出しました。
まぁ、それだけです...</p>
</answer>
</faqentry>
<faqentry name="bsd-ports" >
<question>
<p>
Fink と BSD の port メカニズムはどう違うのですか (OpenPackages や GNU-Darwin も含めて)?
</p>
</question>
<answer>
<p>利点:</p>
<ul>
<li>
<p>Perl で書かれています。 make/shell ではありません。
このため、 BSD make だけにある特殊な機能に依存せず、ビルドするために GNU make が必要かどうかフラグを立てる必要がありません。</p>
</li>
<li>
<p>
dpkg のバイナリパッケージ管理は洗練されています。
スムーズなアップデート、設定ファイルの扱い、バーチャルパッケージ、高度の依存性などの機能があります。。
</p>
</li>
<li>
<p>Fink は指定しない限りは /usr/local にインストールすることはなく、 /usr/bin/make や他のシステム依存のコマンドをいじる必要がありません。
こうすることで、より安全に使用することができ、 Mac OS X や他のサードパーティーのソフトウェアとのインターフェイスを最小限に減らすことができます。</p>
</li>
</ul>
</answer>
</faqentry>
<faqentry name="usr-local" >
<question>
<p>なぜ Fink は /usr/local にインストールしないのですか?</p>
</question>
<answer>
<p>いくつか理由はありますが、共通しているのは、「いつか壊れるから」です。</p>
<p>理由1: サードパーティー・ソフトウェア。
/usr/local は、システムの一部ではないソフトウェアを入れる場所として確立されています。
このため、いろいろなものを入れるには格好の場所ですが、同様に他の人もこの場所にいろいろなものを入れる可能性があります。
ほとんどのインストール・ルーチンはすでにあるものを上書きしてしまいますし、 dpkg もそうします。
もちろん、サードパーティー・ソフトウェアを /usr/local にインストールしないように選択をすることは可能です。
しかし、ほとんどのインストーラは事前に何を何処にインストールするか知らせてくれません。</p>
<p>理由2: /usr/local/bin は、デフォルトの PATH に入っています。
このため、シェルが自動的にインストール・プログラムを見つけてしまいます。
逆にいうと、このプログラムを使いたくない場合は何かしなければなりません。
極端な場合、これはシステム全体に影響します。
多くのパーツはシェルスクリプトに依存しているからです。</p>
<p>理由3: コンパイラ・ツール・チェーンはデフォルトで /usr/local を検索します。
コンパイラは、 /usr/local/include 内でヘッダファイルを検索し、リンカは /usr/local/lib 内でライブラリを検索します。
これがうまくいくときもありますが、そうしたくない時にしないのが非常に難しいです。
コンパイラは、 /usr/local/include に <code>stdio.h</code> という名前のゴミファイルを追加すれば無効化することができます。</p>
<p>以上のことから、 Fink を /usr/local にインストールするのは不可能です。
インストール・スクリプトは警告メッセージを出しますが、これを無視することもできます。
この場合は自己責任で行なって下さい。</p>
</answer>
</faqentry>
<faqentry name="why-sw" >
<question>
<p>ではなぜ /sw を選んだのですか?</p>
</question>
<answer>
<p>
この選択にあまり意味はありませんが、実用上の（アップグレードの）問題と、他のパッケージング・システムとのコンフリクト問題を避けるため、近い将来に変更することはないと思われます。</p>
</answer>
</faqentry>
</chapter>
<chapter filename="relations" >
<title>他のプロジェクトとの関係</title>
<shorttitle>関係</shorttitle>
<faqentry name="upstream" >
<question>
<p>パッチを送るなど、本家のメンテナに貢献していますか?</p>
</question>
<answer>
<p>努力しています。
パッチを送り返すのは簡単で、次のパッケージで皆が満足することもありますが、ほとんどの場合そう簡単にはいきません。
共通の問題:</p>
<ul>
<li>Fink のパッケージメンテナは多忙で、パッチとその説明を本家のメンテナに送る時間がない。</li>
<li>本家のメンテナは、クリーンなコード、クリーンな configure  チェック、他のプラットフォームとの互換性を理由に拒否することがある。</li>
<li>本家のメンテナはパッチを受け入たが、次のバージョンがリリースされるまでに数週間から数カ月かかる。</li>
<li>パッケージのメンテナンスが終了し、これ以上リリースされないためパッチがマージされない。</li>
</ul>
</answer>
</faqentry>
<faqentry name="debian" >
<question>
<p>Debian プロジェクトとは関係がありますか。 Debian Linux を Mac OS X に移植しようとしているのですか?</p>
</question>
<answer>
<p>Fink と <link url="http://www.debian.org" >Debian</link> には公式の関係はありません。
Fink は Debian GNU/Linux ディストリビューションの移植では<em>ありません</em>。
Debian パッケージ管理ツール (dpkg, dselect, apt-get) を移植し、 .deb バイナリパッケージ形式を使ってはいますが、実際のパッケージは Mac OS X / Darwin 専用のものです。</p>
</answer>
</faqentry>
<faqentry name="apple" >
<question>
<p>Apple とは関係がありますか?</p>
</question>
<answer>
<p><link url="http://www.apple.com/" >Apple</link> は Fink を認知していて、オープンソース関連の活動の一環としてサポートしています。
2001年の夏と秋には、 Fink パッケージの修正がリリースに間に合うように、新しい Mac OS X バージョンのプレリリースを提供してくれました。
引用:
<em>
「多くの人が、我々は提供したくないのではと疑ってかかっているので、このことでオープンソースへの貢献を強調できるでしょうか。
我々はオープンソースというゲームに強くなると思います。」
</em>
Apple ありがとう!</p>
</answer>
</faqentry>
<faqentry name="darwinports" >
<question>
<p>Darwinports とは関係がありますか?</p>
</question>
<answer>
<p>Darwinports と Fink は補完的なプロジェクトです。
両者は重なる部分があり、 Fink と OpenDarwin プロジェクトの両方に貢献している人もいま。
例えば、 Benjamin Reed は双方の KDE パッケージを担当しています。
Darwinports と Fink は、自由に双方のパッチを利用し、両者は現在新しいディペンダンシー・エンジンの協働を検討してきました。</p>
<p>
OpenDarwin は独自のパッケージ・システムを開発しています。
<link url="http://darwinports.opendarwin.org/" >OpenDarwin.org</link>  に詳細があります。</p>
</answer>
</faqentry>
</chapter>
<chapter filename="mirrors">
<title>Fink ミラー</title>
<shorttitle>ミラー</shorttitle>
<faqentry name="when-use">
<question>
<p>Fink ミラーとは何ですか?</p>
</question>
<answer>
<p>Fink ミラーは、パッケージをソースからビルドする際に使う current と stable の詳細ファイルをミラーしている rsync サーバーです。</p>
</answer>
</faqentry>
<faqentry name="why">
<question>
<p>なぜ rsync ミラーを使わないといけないのですか?</p>
</question>
<answer>
<p>
rsync は高速なプロトコルで、古い CVS アップデートによる方法よりも速く詳細ファイルを更新します。
また、 CVS アップデートは常に sourceforge.net から行われるのに対し、 rsync アップデートは近いミラーから行われます。
</p>
</answer>
</faqentry>
<faqentry name="where">
<question>
<p>Fink ミラーの情報はどこにありますか?</p>
</question>
<answer>
<p>Fink ミラーは全て、 finkmirrors.net ドメインに参加しています。
もっと詳しく知りたい方は、ウェブサイト http://finkmirrors.net/ を参照して下さい。</p>
</answer>
</faqentry>
<faqentry name="when-not">
<question>
<p>rsync サーバーに接続できません。どうしたら良いですか?</p>
</question>
<answer>
<p>ファイヤーウォールによっては、 rsync サービスへの接続を許可していない場合もあります。
この場合は CVS 方式を使って下さい。</p>
</answer>
</faqentry>
<faqentry name="otherinfogone">
<question>
<p>rsync 方式に変えたら、unused ツリーの info ファイルが全て消えてしまいました。</p>
</question>
<answer>
<p>これが正しい動作なのです。
rsync アップデート方式はアクティブなツリーだけ更新します。
また、 CVS サブディレクトリの削除も行います。</p>
</answer>
</faqentry>
<faqentry name="howswitch">
<question>
<p>どのように方式を切り替えるのですか?</p>
</question>
<answer>
<p> fink selfupdate-rsync または fink selfupdate-cvs コマンドで、 rsync と CVS を切り替えます。</p>
</answer>
</faqentry>

<faqentry name="Master">
<question>
<p>Distfiles ミラーとは何ですか?</p>
</question>
<answer>
<p>
時としてインターネットから特定バージョンのソースを取得することが困難な場合があります。
Distfiles ミラーはソースパッケージをビルドする際に必要なソースパッケージを保存し、ミラーしています。</p>
</answer>
</faqentry>
</chapter>
<chapter filename="upgrade-fink" >
<title>Fink のアップグレード (バージョン固有の問題対処法)</title>
<shorttitle>Fink のアップグレード</shorttitle>
    <faqentry name="leopard-bindist1">
      <question>
        <p>rsync や cvs の selfupdate を実行しても、Fink が新しいパッケージを読み込んでくれません。</p>
      </question>
      <answer>
        <p>これは OS 10.5 バイナリインストーラを使用している際の問題です。まず、バージョンを確認し：</p>
        <codeblock>fink --version</codeblock>
        <p>もし <code>fink-0.27.13-41</code> であれば、これはインストーラのものです。
	また、<code>fink-0.27.16-41</code>の場合も同様に、</p>
	<ul>
	  <li>
	    <em>rsync (推奨):</em> 下記の手順で実行してください
	    <codeblock>fink selfupdate
fink selfupdate-rsync
fink index -f
fink selfupdate</codeblock>
	  </li>
	  <li>
	    <em>cvs (別の方法):</em> 下記の手順で実行してください
	    <codeblock>fink selfupdate-cvs
fink index -f
fink selfupdate</codeblock>
	  </li>
	</ul>
        <p>どちらも、最新バージョンの <code>fink</code> に更新します。</p>
      </answer>
    </faqentry>
    
    <faqentry name="leopard-bindist2">
      <question>
        <p>何かをインストールしようとすると、'Can't resolve dependency "fink (>= 0.28.0)"' というエラーが出ます。</p>
      </question>
      <answer>
        <p><xref section="leopard-bindist1">上述の FAQ</xref> をしてください。</p>
      </answer>
    </faqentry>
    <faqentry name="stuck-gettext">
      <question>
        <p>Fink が、'sudo apt-get install libgettext3-dev=0.14.5-2' を実行して問題のある依存性を解消するように言ってきますが、まだおかしいです。</p></question>
      <answer>
	<p><em>libgettext3</em> のパッケージ記述ファイルのタイムスタンプに問題があります: 0.14.5-2 は古いバージョンでです。</p>
	<codeblock>fink index -f
fink update libgettext3-dev	
	</codeblock>
	<p>と実行し、パッケージ記述ファイルのキャッシュを更新した後、パッケージを更新してください。</p>
      </answer>
    </faqentry>
    <faqentry name="stuck-dpkg">
      <question>
        <p>Fink が 'Can't resolve dependency "dpkg (>= 1.10.21-1229)" for package "dpkg-base-files-0.3-1"' って言うてはりますけど、  
          どないしたらよろしいですやろ？
          </p></question>
      <answer>
	<p>更新された <em>dpkg</em> パケージ記述にタイムスタンプの問題があります。</p>
	<codeblock>fink index -f
fink selfupdate
	</codeblock>
	<p>と実行し、パッケージ記述のキャッシュを更新し、 <code>dpkg</code> と <code>dpkg-base-files</code> をインストールしてください。</p>
      </answer>
    </faqentry>
</chapter>
<chapter filename="usage-fink" >
<title>Fink のインストール、使用、メンテナンス</title>
<shorttitle>Fink の使用方法</shorttitle>
<faqentry name="what-packages" >
<question>
<p>Fink がサポートしているパッケージはどのように探せますか?</p>
</question>
<answer>
<p>Fink 0.2.3 以降は、 <code>list</code> コマンドがあります。
このコマンドは、あなたの Fink 環境の管理している全てのパッケージのリストを作成します。
例:
</p>
<codeblock>fink list</codeblock>
<p>バイナリ・ディストリビューションを使っている場合、 <code>dselect</code> でパッケージリストを閲覧することができます。
dselect からパッケージを選択してインストールする場合、 root 権限が必要ですので注意して下さい。</p>
<p>または、本サイトに <link url="http://pdb.finkproject.org/pdb/" >パッケージ・データベース</link> もあります。
</p>
</answer>
</faqentry>
<faqentry name="proxy" >
<question>
<p>ファイヤーウォールの内側にいます。どう設定したら Fink で HTTP プロキシが使えますか?</p>
</question>
<answer>
<p>
<code>fink</code> コマンドは、明示的にプロキシを設定できます。
この設定は <code>wget</code>/<code>curl</code> に渡されます。
新規インストール時に聞かれなかった場合、または設定し直したい場合、 <code>fink configure</code> を実行することができます。
もしインストールガイドを読み、 <filename>/sw/bin/init.csh</filename> (または <filename>/sw/bin/init.sh</filename>) を使ったなら、次のようにプロキシの前にプロトコルをつけるようにして下さい。</p>
<codeblock>ftp://proxy.yoursite.somewhere</codeblock>
<p>もしこれでも問題があるようなら、システム環境設定からネットワークを選択し、プロキシのタブをクリックし、 &quot;Use Passive FTP Mode (PASV)&quot; がチェックされているか確認して下さい。</p>
</answer>
</faqentry>
<faqentry name="firewalled-cvs" >
<question>
<p>ファイヤーウォールの内側から CVS でパッケージをアップデートするにはどうしたらいいですか?</p>
</question>
<answer>
<p>パッケージ <em>cvs-proxy</em> は HTTP プロキシを介して通ります。</p>
<ul>
<li>
<p>
まず、 <link url="http://fink.cvs.sourceforge.net/fink/dists/10.2/unstable/main/finkinfo/devel/" >cvs-proxy</link>
ファイル (.info と a .patch) をダウンロードし、ローカルツリー ( /sw/fink/dists/local/main/finkinfo/) に入れる。
</p>
</li>
<li>
<p><em>cvs-proxy</em> パッケージを、次のコマンドでインストールする:</p>
<p>
<code>fink --use-binary-dist install <em>cvs-proxy</em>
</code>
</p>
</li>
<li>
<p>次のコマンドで CVS 更新に変更する:</p>
<p>
<code>fink selfupdate-cvs</code>
</p>
<p>
<code>fink update-all</code>
</p>
</li>
</ul>
<p>fink がプロキシを使うように設定されていなかったら、設定を行ないます:</p>
<p>
<code>fink configure</code></p>
</answer>
</faqentry>
<faqentry name="moving" >
<question>
<p>インストール後に Fink を他の場所に移動できますか?</p>
</question>
<answer>
<p>
できません。
もちろん、 mv やファインダからファイルを動かすことはできますが、 99% の確率で動かなくなるプログラムがでてきます。
これは、全ての Unix ソフトウェアはファイルやライブラリなどを検索するのに、ハードコードのパスに依存しているからである。
</p>
</answer>
</faqentry>
<faqentry name="moving-symlink" >
<question>
<p>Fink をインストール後、他の場所に移動してシンボリックリンクを張ったら、動きますか?</p>
</question>
<answer>
<p>
動くかも知れない。
動くと予想されますが、どこに落し穴があるかわかったものじゃありません。
</p>
</answer>
</faqentry>
<faqentry name="removing" >
<question>
<p>Fink を全てアンインストールするには?</p>
</question>
<answer>
<p>Fink でインストールしたファイルはほとんど /sw (あるいはインストール時に選択した場所) にあります。
なので、 Fink を削除するには、通常このコマンドを入力します:</p>
<codeblock>sudo rm -rf /sw</codeblock>
<p>唯一の例外は XFree86 または X.org です。もし X サーバを Fink でインストールした (<code>xfree86</code> 、
<code>xfree86-rootless</code> または <code>xorg</code> パッケージ) なら、次のコマンドも必要です:
</p>
<codeblock>sudo rm -rf /usr/X11R6 /etc/X11 /Applications/XDarwin.app</codeblock>
<p>Fink をインストールし直すことがないのでしたら、テキストエディタを使い、 <filename>.cshrc</filename> ファイルの中の &quot;<code>source /sw/bin/init.csh</code>&quot; と書かれている行、あるいは <filename>.bashrc</filename> ファイルの中の &quot;<code>source /sw/bin/init.sh</code>&quot; と書かれている行を削除して下さい。</p>
</answer>
</faqentry>
<faqentry name="bindist" >
<question>
<p>ウェブのパッケージデータベースは、パッケージ xxx を表示しているのに、 apt-get と dselect は何もしない。どっちが嘘をついてるのですか?
</p>
</question>
<answer>
<p>
どちらも正しいです。
パッケージデータベースは unstable セクションにあるものも含め、全てのパッケージを管理します。
<code>dselect</code> と <code>apt-get</code> は、コンパイル済みバイナリパッケージしか関与しません。
パッケージがコンパイルされないのは様々な理由があります。
パッケージがコンパイルするかどうかを判定するには、まず最新リリースの &quot;stable&quot; セクションになければなりません。 更にポリシーに合っているか、ライセンスや知的所有権を侵していないかチェックされます。</p>
<p><code>dselect</code> / <code>apt-get</code> が対応していないパッケージをインストールする場合、 <code>fink install <em>packagename</em></code> を使ってソースからコンパイルします。
このコマンドを実行する前に、 Developer Tools がインストールされているか確認して下さい。
(Developer Tools インストーラがない場合、 <link url="http://connect.apple.com/" >Apple Developer Connection</link> で登録後、入手して下さい)
下記の unstable に関する質問も合わせて参照して下さい。
</p>
</answer>
</faqentry>
<faqentry name="unstable" >
<question>
<p>unstable にあるパッケージをインストールしようとすると、 fink が 'no package found' といいます。どうしたらインストールできるのですか?</p>
</question>
      <answer>
        <p>
	  まず、'unstable の意味を確認してください。
	  unstable tree にあるパッケージは、さまざまな理由により安定ではありません。
	  既知の問題が残っていたり、valid error があったり、あるいは十分なフィードバックがないかもしれません。
	  この理由により、Fink はデフォルトでは unstable tree を探さないのです。
	</p>
        <p>
	  unstable を使う場合、もしうまく行った場合 (あるいは行かなかった場合)、メンテナにメールすることを心がけてください。
	  あなたからのフィードバックは、stable に移行するための貴重な根拠となるのです!
	  パッケージのメンテナを知るには、<code>fink info <em>packagename</em></code> と実行してください。
	</p>
	<p> 
	  <code>fink-0.26</code> 以降:
	  <code>fink configure</code> を実行すれば、たくさんある質問の中で unstable tree を on にするかという質問があります。
	</p>
	<p>
	  <em>0.26</em> よりも古いバージョンの Fink が unstable を使うよう設定するには、
	  <filename>/sw/etc/fink.conf</filename> を編集し、<code>Trees:</code> 行に <code>unstable/main</code>
	  と <code>unstable/crypto</code> to the <code>Trees:</code> を追加してください。
	</p>
	<p>
	  Fink Commander を使っている場合、Preference から unstable パッケージを使うことができます。
	</p>
	<p>
	  これらのことをするだけでは、unstable tree のパッケージ記述を自動的にはダウンロードしません。
	  各自で <code>rsync</code> または <code>cvs</code> の更新をする必要があります。
	  これは、Fink のデフォルトではないので、以下のコマンドの入力してください。
	</p>
	<codeblock>fink selfupdate</codeblock>
	<p>とした後、</p>
	<codeblock>fink selfupdate-rsync</codeblock>
	<p>または</p>
	<codeblock>fink selfupdate-cvs</codeblock>
	<p>その後</p>
	<codeblock>fink index -f
fink scanpackages</codeblock>
	<p><em>注記:</em> Fink Commander では、同様のことが、 
	<code>fink index -f</code> 以外、できます。これだけはコマンドラインから行ってください。</p>
	<p>すでに <code>rsync</code> または <code>cvs</code> で更新できるようになっている場合、以下のものだけで十分です:</p>
	<codeblock>
fink selfupdate
fink index
fink scanpackages
	</codeblock>
	<p>
	  もし、update 方法を知らない場合、<code>fink --version</code> とすることで 
	  <code>cvs</code> または <code>rsync</code> であることがわかります。
	</p>
	<p>
	  特定のパッケージ (および base パッケージ) 以外、unstable からインストールしたくない場合、
	  unstable を off に戻す前に <code>update-all</code> コマンドを実行しないよう注意してください。
	</p>
      </answer>
</faqentry>

    <faqentry name="unstable-onepackage">
      <question>
        <p>
          unstable にあるパッケージをひとつだけインストールするにも、 unstable 全体を有効にしなければなりませんか?
        </p>
      </question>
      <answer>
        <p>
          いいえ。しかし、そうすることをお勧めします。
          混在によって予期できない問題が発生した場合、これを直すには非常に困難です。
        </p>
        <p>
          もし、unstable からひとつかふたつのパッケージが欲しく、他はいらないのであれば、
          (<code>fink selfupdate-cvs</code> で) CVS 更新に変更する必要があります。
          これは、 rsync では <filename>fink.conf</filename> でアクティブなツリーしか更新しないためです。
          <filename>/sw/etc/fink.conf</filename> を編集し、 <code>Trees:</code> 行に
          <code>local/main</code> がなければ追加してください。
          その後、 <code>fink selfupdate</code> を実行して、パッケージ記述ファイルをダウンロードしてください。
          次に、関連する <code>.info</code> ファイル (および対応する <code>.patch</code> ファイル) を、
          <filename>/sw/fink/dists/unstable/main/finkinfo</filename> (または
          <filename>/sw/fink/dists/unstable/crypto/finkinfo</filename>) から
          <filename>/sw/fink/dists/local/main/finkinfo</filename> へコピーします。
          しかし、このパッケージは、 unstable にある他のパッケージ (またはバージョン) に依存していることもあります。
          この場合、これらの <code>.info</code> と <code>.patch</code> ファイルも同様にコピーします。
          全てのファイルをコピーしたら、 <code>fink index</code> を実行することで、 Fink は
          入手可能なパッケージの一覧を更新します。
          ここまで終わったら、rsync に戻すことができます (<code>fink selfupdate-rsync</code>)。
        </p>
      </answer>
    </faqentry>
<faqentry name="sudo" >
<question>
<p>sudo でパスワードを何度も何度も入力するのは疲れます。何か良い方法はありませんか?</p>
</question>
<answer>
<p>sudo がパスワードを聞いてこないように設定することができます。
root 権限で <code>visudo</code> を開き、次の行を追加します:</p>
<codeblock>username ALL =(ALL) NOPASSWD: ALL</codeblock>
<p>もちろん、 <code>username</code> は実際のユーザー名に変えて下さい。</p>
</answer>
</faqentry>
<faqentry name="exec-init-csh" >
<question>
<p>init.csh or init.sh を実行しようとすると、 &quot;Permission denied&quot; エラーが出ます。
何がおかしいのですか?</p>
</question>
<answer>
<p>init.csh と init.sh は通常のコマンドのように実行するものではありません。
これらのファイルは環境変数の PATH や MANPATH を設定するものです。
これをシェルに保持させるには、csh/tcsh では <code>source</code> コマンド、bash/zsh では <code>.</code> コマンドを使い:</p>
<p> csh/tcsh の場合:</p>
<codeblock>source /sw/bin/init.csh</codeblock>
<p> bash の場合:</p>
<codeblock>. /sw/bin/init.sh</codeblock>
<p>と入力します。</p>
</answer>
</faqentry>
<faqentry name="dselect-access" >
<question>
<p>うぎゃ! dselect で &quot;[A]ccess&quot; メニューを使ったら、パッケージをダウンロードできなくなった!</p>
</question>
<answer>
<p>
おそらく、 apt を Debian ミラーを指定したのでしょう。
当然、 Debian ミラーには Fink ファイルはありません。
これを直す方法には、手動と dselect を通す二通りがあります。
手動では、 root 権限で <code>/sw/etc/apt/sources.list</code> ファイルを開き、 debian.org の行を削除して:
</p>
<codeblock>deb http://us.dl.sourceforge.net/fink/direct_download release main crypto
deb http://us.dl.sourceforge.net/fink/direct_download current main crypto</codeblock>
<p>に置き換えます (日本では <code>jp.dl.sourceforge.net</code>) 。</p>
<p>dselect を通すには、再度 &quot;[A]ccess&quot; を実行し、 &quot;apt&quot; を選択して:</p>
<p>
URL: http://us.dl.sourceforge.net/fink/direct_download -
Distribution: release -
Components: main crypto
</p>
<p>と入力します。
他の source を追加するならば、  &quot;release&quot; の部分を &quot;current&quot; と変えて繰り返して下さい。
</p>
<p>現在、 apt パッケージの修正版 (設定スクリプトが dselect のプラグインとして付随) が CVS から入手できます。</p>
</answer>
</faqentry>
<faqentry name="cvs-busy" >
<question>
<p><quote>fink selfupdate</quote> か &quot;fink selfupdate-cvs&quot; を実行しようとした時、  &quot;<code>Updating using CVS failed. Check the error messages above.</code>&quot; エラーが出ました。</p>
</question>
<answer>
<p>メッセージが、</p>
<codeblock>Can't exec &quot;cvs&quot;: No such file or directory at
/sw/lib/perl5/Fink/Services.pm line 216, &lt;STDIN> line 3.
### execution of cvs failed, exit code -1</codeblock>
<p>であれば、 Developer Tools をインストールする必要があります。</p>
<p>もし最後の行が、</p>
<codeblock>### execution of su failed, exit code 1</codeblock>
<p>であれば、エラーを詳細に見る必要があります。
もし接続が拒否されたとあれば:</p>
<codeblock>(Logging in to anonymous@fink.cvs.sourceforge.net)
CVS password:
cvs [login aborted]: connect to fink.cvs.sourceforge.net:2401 failed:
Connection refused
### execution of su failed, exit code 1
Failed: Logging into the CVS server for anonymous read-only access failed.</codeblock>
<p>あるいは</p>
<codeblock>cvs [update aborted]: recv() from server fink.cvs.sourceforge.net:
Connection reset by peer
### execution of su failed, exit code 1
Failed: Updating using CVS failed. Check the error messages above.</codeblock>
<p>あるいは</p>
<codeblock>cvs [update aborted]: End of file received from server</codeblock>
<p>あるいは</p>
<codeblock>cvs [update aborted]: received broken pipe signal</codeblock>
<p>であれば、 cvs サーバが過負荷になっていると思われますので、時間をおいて update を試してみて下さい。</p>
<p>この他、パーミッションをもっていない可能性もあります。
この場合は &quot;Permission denied&quot; メッセージ:</p>
<codeblock>cvs update: in directory 10.2/stable/main:
cvs update: cannot open CVS/Entries for reading: No such file or directory
cvs server: Updating 10.2/stable/main
cvs update: cannot write 10.2/stable/main/.cvsignore: Permission denied
cvs [update aborted]: cannot make directory 10.2/stable/main/finkinfo: No 
such file or directory
### execution of su failed, exit code 1
Failed: Updating using CVS failed. Check the error messages above.
</codeblock>
<p>が出ます。この場合は cvs ディレクトリをリセットする必要があります。コマンド:</p>
<codeblock>sudo find /sw/fink -type d -name 'CVS' -exec rm -rf {} \;
fink selfupdate-cvs</codeblock>
<p>を入力して下さい。</p>
<p>以上のいずれのメッセージとも異なる場合、おそらく /sw/fink/dists 内のファイルを、あなたとメンテナの双方が書き換えたためです。
selfupdate-cvs の出力で、 &quot;C&quot; から始まる行で:</p>
<codeblock>C 10.2/unstable/main/finkinfo/libs/db31-3.1.17-6.info
...
(other info and patch files)
...
### execution of su failed, exit code 1
Failed: Updating using CVS failed. Check the error messages above.</codeblock>
<p>のようになっている箇所を探して下さい。
&quot;C&quot; というのは CVS で最新版へ更新時にコンフリクトがあったことを意味しています。</p>
<p>これを修正するには、 selfupdate-cvs の出力にでてきたファイルを一つずつ削除して、コマンドを再実行します。</p>
<codeblock>sudo rm /sw/fink/10.2/unstable/main/finkinfo/libs/db31-3.1.17-6.info
fink selfupdate-cvs</codeblock>
		<p>もし、<em>cvs.sourceforge.net</em> と述べているエラーが発生した場合:</p>
		<codeblock>
cvs [update aborted]: connect to cvs.sourceforge.net(66.35.250.207):
2401 failed: Operation timed out
</codeblock>
	      <p>
	        これは、2006年に sourceforge.net において CVS サーバを再構築したためです。
		Fink のファイルは、現在は <em>fink.cvs.sourceforge.net</em> にあります。
	      </p>
	      <p>現在のディストリビューションのバージョンを、</p>
	      <codeblock>fink --version</codeblock>
	      <p>
	        などで確認してください。
		もし、<code>10.4-transitional</code> であれば、ただの 10.4 ディストリビューションに更新する必要があります。
		<link url="http://prdownloads.sourceforge.net/fink/scripts-10.4-update-0.4.tar.gz?download">update script</link>
		を使って更新することができます。
	      </p>
      </answer>
</faqentry>
<faqentry name="kernel-panics" >
<question>
<p>Fink を使うと、マシンがフリーズする/カーネルパニックする/固まる。助けて!</p>
</question>
<answer>
<p>2002年秋の
<link url="http://sourceforge.net/mailarchive/forum.php?forum=fink-users" >fink-users mailing list</link>
の報告によると、こういった問題 (カーネルパニックやパッチ当て中の無限ループを含む) が発生するのはアンチウィルスソフトウェアがインストールされている時です。
Fink を使う際はアンチウィルスソフトウェアを終了する必要があるかもしれません。</p>
</answer>
</faqentry>
<faqentry name="not-found" >
<question>
<p>パッケージをインストールしようとすると、 Fink がダウンロードできません。
ダウンロードサイトとは Fink よりも新しいバージョンを示しています。
何をしたらいいですか?</p>
</question>
<answer>
<p>新しいバージョンのリリースにともない、本家サイトでのパッケージソースが移動しました。</p>
<p>最初にまず  <code>fink selfupdate</code> を実行して下さい。
メンテナが既に修正している場合、新しいバージョンか別のダウンロード URL のパッケージ詳細を取得できます。</p>
<p>もしこれでも問題が残るなら、ほとんどのソースは
<link url="http://distfiles.master.finkmirrors.net/">http://distfiles.master.finkmirrors.net/</link>
にある (Rob Braun 氏に感謝) ので、 <code>fink configure</code> を実行して &quot;Master&quot; ソースミラー を検索して下さい。
Fink が自動的にここを探しにいきます。
</p>
<p>これでも問題が残るなら、パッケージメンテナ
(&quot;<code>fink describe <em>packagename</em></code>&quot; からわかります)
に URL が壊れている旨を知らせて下さい。
メンテナがいつでもメーリングリストを読んでいるとは限りません。</p>
<p>使えるソースを入手するには、まずは他のディレクトリ (&quot;old&quot; ディレクトリなど)  にあるリモートサイトの中で必要なバージョンを探して見て下さい。
もし公式サイトになければ、ウェブを検索してみて下さい。
非公式サイトに必要なバージョンの tarball が見つかることがあります。
他には <link url="http://us.dl.sourceforge.net/fink/direct_download/source/" >http://us.dl.sourceforge.net/fink/direct_download/source/</link> があります。
ここは Fink がバイナリとしてリリースされたパッケージのソースファイルを保存する場所です。
いずれも駄目な場合、
<link url="http://sourceforge.net/mailarchive/forum.php?forum=fink-users" >fink-users mailing list</link>
で古いソースをもっている人を探してみて下さい。
</p>
<p>
  もしソースの tarball が見つかったら、手動でダウンロードし、 Fink ソース保存先に移して下さい:
  &quot;<code>sudo mv <em>package-source.tar.gz</em> /sw/src/</code>&quot;
  この後、通常通り '<code>fink install <em>packagename</em></code>' して下さい。
</p>
<p>ソースファイルが見つからない場合、メンテナが問題に対処するまで待つしかありません。
古いソースか、新しいバージョン用の .info と .patch ファイルへのリンクが投稿されることでしょう。</p>
</answer>
</faqentry>
<faqentry name="fink-not-found" >
<question>
<p>Fink や Fink でインストールしたものを実行しようとすると
&quot;command not found&quot; エラーが出ます。</p>
</question>
<answer>
<p>常にこのエラーが出るようでしたら、誤ってスタートアップスクリプトを書き換えてしまった(か、書き換えに失敗した)と思われます。
<filename>/sw/bin/pathsetup.sh</filename> スクリプトを実行してください。
このプログラムは、デフォルトシェルを判定し、シェルの設定に Fink のシェル初期化スクリプトを読み込むコマンドを追加します。
<em>注記:</em> 古いバージョンの fink では、スクリプト名が <filename>/sw/bin/pathsetup.sh</filename> ではなく <filename>/sw/bin/pathsetup.command</filename> となっていることがあります。
あるいは、 Fink バイナリディストリビューションのディスクイメージ内にある <filename>pathsetup.app</filename> を実行する方法もあります。
</p>
<p>
Apple X11 terminal でのみこの問題が発生するのであれば、
簡単な解決方法は X11　アプリケーションメニューの&quot;ターミナル&quot;を、<em>アプリケーション-&gt;メニューをカスタマイズ...</em>から変更します。
</p>
        <codeblock>xterm</codeblock>
        <p>cコマンドの欄を</p>
        <codeblock>xterm -ls</codeblock>
        <p>とします。ここで<code>ls</code> は <quote>login shell</quote> を意味し、ログインセットアップが (OS X ターミナルと同様に) 使用されることになります。</p>
        <p><filename>/sw/bin/init.*</filename> スクリプトは、<filename>/sw/bin</filename> をパスに追加する以外にも様々なことをしています。
	多くのパッケージは、この追加処理がなくては正常に動作しません。</p>
<codeblock>source ~/.cshrc</codeblock>
</answer>
</faqentry>
<faqentry name="invisible-sw" >
<question>
<p>Finder で /sw を隠して、ユーザーが Fink の構成を壊すのを防ぎたい。</p>
</question>
<answer>
<p>できます。
Development Tools がインストールされていれば、次のコマンドを実行してください:</p>
<codeblock>sudo /Developer/Tools/SetFile -a V /sw</codeblock>
<p>これで /sw が標準的なシステムのフォルダ (/usr など) のように不可視になります。
Developer Tools がない場合はサードパーティー製のアプリケーションで /sw が不可視になるよう、属性値を変更してください。</p>
</answer>
</faqentry>
<faqentry name="install-info-bad" >
<question>
<p>何もインストールできません。
&quot;install-info: unrecognized option `--infodir=/sw/share/info'&quot;
のエラーが出るだけです。</p>
</question>
<answer>
<p>これは普通、 PATH の問題です。ターミナルで:</p>
<codeblock>printenv PATH</codeblock>
<p>と入力し、 <filename>/sw/sbin</filename> が出てこないなら、環境変数を
<link url="/doc/users-guide/install.php#setup" >instructions</link>
内の Users Guide を参照してください。
<filename>/sw/sbin</filename> があるが、他のディレクトリ (例えば /usr/local/bin) 
がそれより前にある場合、 PATH の順序を変えて先頭近くに移動してください。
どうしても順序を変えられない理由があるならば、 Fink を使う時に Fink ではない方の <filename>install-info</filename> のディレクトリ名を一時的に変える必要があります。</p>
</answer>
</faqentry>
<faqentry name="bad-list-file" >
<question>
<p>何もインストールできないし、削除もできません。 &quot;files list file&quot; と出るだけです。</p>
</question>
<answer>
<p>通常、このエラーはこういう形で出ます:</p>
<codeblock>files list file for package <em>packagename</em> contains empty filename</codeblock>
<p>または</p>
<codeblock>files list file for package <em>packagename</em> is missing final newline</codeblock>
<p>
  これは直すことができます。
  エラーメッセージ中のパッケージの .deb ファイルがシステム上にあれば、その状態を確認します:
</p>
<codeblock>dpkg --contents <em>full-path-to-debfile</em>
</codeblock>
<p>例えば</p>
<codeblock>dpkg --contents
/sw/fink/debs/libgnomeui2-dev_2.0.6-2_darwin-powerpc.deb</codeblock>
<p>ディレクトリやファイルの一覧が表示されたら、 .deb ファイルは大丈夫です。
もし出力されたのがファイルやディレクトリ以外であるか、 .deb ファイルがなくても、このエラーはビルドに影響しないので、次に進んでください。
</p>
<p>バイナリインストールを試みている場合、あるいはインストールしたバージョンと現在のバイナリバージョンが一致する場合
(例えば、 <link url="http://pdb.finkproject.org/pdb/index.php" >パッケージデータベース</link> で調べたなら)、
.deb ファイルを取得することができます:
<code>sudo apt-get install --reinstall --download-only <em>packagename</em></code>
。あるいは、自分でビルドすることもできます:
<code>fink rebuild <em>packagename</em></code>
。この時点ではまだインストールはされていません。</p>
<p>.deb ファイルを作成したら、ファイルを再構築することができます。
まず、 root になるために <code>sudo -s</code> と入力します (必要があれば管理ユーザーパスワードを入力する) 。
次に、このコマンドを入力します (一行で - 画面上では複数行になっていますが)
</p>
<codeblock>dpkg -c <em>full-path-to-debfile</em>  | awk '{if ($6 == &quot;./&quot;){ print &quot;/.&quot;; } \
else if (substr($6, length($6), 1) == &quot;/&quot;) \
{print substr($6, 2, length($6) - 2); } \
else { print substr($6, 2, length($6) - 1);}}' \
&gt; /sw/var/lib/dpkg/info/<em>packagename</em>.list</codeblock>
<p>例えば、</p>
<codeblock>dpkg -c /sw/fink/debs/libgnomeui2-dev_2.0.6-2_darwin-powerpc.deb | awk \
'{if ($6 == &quot;./&quot;) { print &quot;/.&quot;; } \
else if (substr($6, length($6), 1) == &quot;/&quot;) \
{print substr($6, 2, length($6) - 2); } \
else { print substr($6, 2, length($6) - 1);}}' \
&gt; /sw/var/lib/dpkg/info/libgnomeui2-dev.list</codeblock>
<p>このコマンドは、 .deb ファイルの中身を解凍して、ファイル名以外を除いて .list ファイルに書き込んでいます。</p>
</answer>
</faqentry>
<faqentry name="dselect-garbage" >
<question>
<p><filename>dselect</filename> でパッケージを選択すると、大量のゴミがでてきます。
これはどうやったら使えますか?</p>
</question>
<answer>
<p><filename>dselect</filename> と <filename>Terminal.app</filename> の関係に問題があります。
どうにかするには、 <filename>dselect</filename> を実行する前に次のコマンドを入力してください:
</p>
<p>tcsh の場合:</p>
<codeblock>setenv TERM xterm-color</codeblock>
<p>before you run <filename>dselect</filename>.</p>
<p>bash の場合:</p>
<codeblock>export TERM=xterm-color</codeblock>
<p>このコマンドをログイン時に自動的に実行するには、起動ファイル (例 <code>.cshrc</code> | <code>.profile</code>) に記述して下さい。</p>
</answer>
</faqentry>

<faqentry name="cant-upgrade" >
<question>
<p>Fink のバージョンをアップデートできないようです。</p>
</question>
<answer>
<p>この状況専用の <link url="/download/fix-upgrade.php" >special instructions</link> に従ってください。</p>
</answer>
</faqentry>
<faqentry name="spaces-in-directory" >
<question>
<p>名前に空白が入っているボリュームやディレクトリに Fink を入れることはできますか?</p>
</question>
<answer>
<p>名前に空白が入っているディレクトリに Fink を入れるないよう薦めます。</p>
</answer>
</faqentry>
<faqentry name="packages-gz">
<question>
<p>バイナリアップデートをしようとすると、 &quot;File not found&quot; または &quot;Couldn't stat package source list file&quot; というメッセージが大量に出ます。</p>
</question>
<answer><p>もし次のようであれば:</p>
<codeblock>
Err file: local/main Packages
File not found
Ign file: local/main Release
Err file: stable/main Packages
File not found
Ign file: stable/main Release
Err file: stable/crypto Packages
File not found
Ign file: stable/crypto Release
...
Failed to fetch
file:/sw/fink/dists/local/main/binary-darwin-powerpc/Packages
File not found
Failed to fetch
file:/sw/fink/dists/stable/main/binary-darwin-powerpc/Packages
File not found
Failed to fetch
file:/sw/fink/dists/stable/crypto/binary-darwin-powerpc/Packages
File not found
Reading Package Lists... Done
Building Dependency Tree... Done
E: Some index files failed to download, they have been ignored, or old
ones used instead.

update available list script returned error exit status 1.
</codeblock>
        <p>あるいは</p>
        <codeblock>W: Couldn't stat source package list file: unstable/main Packages
(/sw/var/lib/apt/lists/_sw_fink_dists_unstable_main_binary-darwin-
powerpc_Packages) - stat (2 No such file or directory)</codeblock>
<p><code>fink scanpackages</code> をするだけです。
これによって見つからなかったファイルを作成します。</p>
</answer>
</faqentry>
<faqentry name="wrong-tree"> 
<question> 
<p>OS を変えたら、 Fink が認識してくれません。</p> 
</question> 
<answer> 
<p>Fink ディストリビューション（ソースとバイナリはそのサブセットです）を変更するには、 Fink に指示する必要があります。
これは Fink の新規インストール時に実行するスクリプトを実行します:
</p> 
<codeblock>/sw/lib/fink/postinstall.pl</codeblock> 
<p>これにより、 Fink は正しく場所を指示されます。</p> 
</answer> 
</faqentry> 
    <faqentry name="lost-command-line-tools">
      <question>
        <p>After installing a macOS update, Fink no longer recognizes my installed Command Line Tools.</p>
      </question>
      <answer>
        <p>Updates to macOS routinely break parts of Apple's Command Line Tools. If you get this error after updating your copy of macOS:</p>
        <codeblock>Can't resolve dependency "xcode (>= 6.2)"</codeblock>
        <p>Fink has lost track of Apple's Command Line Tools.</p>
        <p>The easiest solution is to download and reinstall the Command Line Tools specific to your macOS version from <link url="https://developer.apple.com/">https://developer.apple.com/</link>.</p>
        <p>Another possible solution is to run the following command:</p>
        <codeblock>xcode-select --install</codeblock>
        <p>but this often reports the following:</p>
        <codeblock>xcode-select: error: command line tools are already installed, use "Software Update" to install updates</codeblock>
        <p>However, the Tools might be in a non-functional state such that Fink still can't recognize them. In that case, a clean reinstall as described above has always worked to fix their detection with Fink.</p>
        <p>Finally, you may need to run the command:</p>
        <codeblock>sudo xcodebuild -license</codeblock>
        <p>to agree to the software license.</p>
      </answer>
    </faqentry>
<faqentry name="seg-fault"> 
<question> 
<p>何かをインストールしようとしたら <code>gzip</code> | <code>dpkg-deb</code> のエラーが出る! 助けて!</p> 
</question> 
<answer> 
<p>以下の形式のエラー:</p> 
<codeblock>gzip -dc /sw/src/dpkg-1.10.9.tar.gz | /sw/bin/tar -xf - 
### execution of gzip failed, exit code 139</codeblock> 
<p>あるいは</p> 
<codeblock>gzip -dc /sw/src/aquaterm-0.3.0a.tar.gz | /sw/bin/tar -xf - 
gzip: stdout: Broken pipe 
### execution of gzip failed, exit code 138</codeblock> 
<p>あるいは</p> 
<codeblock>dpkg-deb -b root-base-files-1.9.0-1 
/sw/fink/dists/unstable/main/binary-darwin-powerpc/base 
### execution of dpkg-deb failed, exit code 10 
Failed: can't create package base-files_1.9.0-1_darwin-powerpc.deb</codeblock> 
<p>であれば、バイナリにおけるプリバインドのエラーです。修正するには:</p> 
<codeblock>sudo /sw/var/lib/fink/prebound/update-package-prebinding.pl -f</codeblock> 
<p>と実行します。</p> 
</answer> 
</faqentry> 
<faqentry name="pathsetup-keeps-running"> 
<question> 
<p>ターミナルウィンドウを開くと、
&quot;Your environment seems to be correctly set up for Fink already.&quot;
というメッセージが出てログアウトします。</p> 
</question> 
<answer> 
<p>
これは、何らかの理由で OSX ターミナルがログインする度に
<code>/sw/bin/pathsetup.command</code>
を実行するように設定されているからです。
修正するには、 初期設定ファイル <code>~/Library/Preferences/com.apple.Terminal.plist</code> を削除します。</p> 
<p>他の設定を失いたくない場合、削除する代わりにテキストエディタでこのファイルを開き、
<code>/sw/bin/pathsetup.command</code>
と書かれている部分を削除します。</p> 
</answer> 
</faqentry>
<faqentry name="ext-drive">
<question>
	<p>
	メインパーティション以外に Fink をインストールしていますが、
	ソースからの更新ができません。
	<quote>chowname</quote> を含んだエラーが出ます。
	</p>
</question>
<answer>
<p>このようなエラーであれば:</p>
<codeblock>This first test is designed to die, so please ignore the error
 message on the next line.
 # Looks like your test died before it could output anything.
 ./00compile............................ok
 ./Base/initialize......................ok
 ./Base/param...........................ok
 ./Base/param_boolean...................ok
 ./Command/cat..........................ok
 ./Command/chowname.....................#
 Failed test (./Command/chowname.t at line 27)
 #          got: 'root'
 #     expected: 'nobody'</codeblock>
<p>
、Fink がインストールされているドライブ/パーティションを
「<em>情報を見る</em>」し、 &quot;所有権を無視する&quot; を外します。
</p>
</answer>
</faqentry>
<faqentry name="mirror-gnu">
<question>
	<p>
	Fink がパッケージを更新しません。
	'gnu' ミラーが見つからないと言っています。
	</p>
</question>
<answer>
	<p>
	エラーの最後が、
	</p>
	<codeblock>Failed: No mirror site list file found for mirror 'gnu'.</codeblock>
	<p>
	である場合、 <code>fink-mirrors</code> を以下のように更新します:
	</p>
	<codeblock>fink install fink-mirrors</codeblock>
</answer>
</faqentry>
<faqentry name="cant-move-fink">
<question>
	<p>
	Fink を更新できません。
	/sw/fink を移動できないからです。
	</p>
</question>
<answer>
	<p>このエラー:</p>
	<codeblock>Failed: Can't move "/sw/fink" out of the way.</codeblock>
	<p>
	は通常、エラーメッセージと異なり、パーミッションの問題で、
	<code>selfupdate</code> の作成した仮フォルダのひとつにあります。
	これを削除するには:
	</p>
	<codeblock>sudo rm -rf /sw/fink.tmp /sw/fink.old</codeblock>
	</answer>
</faqentry>

    <faqentry name="fc-cache">
      <question>
        <p>&quot;No fonts found&quot; というメッセージが出ます。</p>
      </question>
      <answer>
        <p>次のようであれば (OS 10.4 のみ):</p>
<codeblock>No fonts found; this probably means that the fontconfig
library is not correctly configured. You may need to
edit the fonts.conf configuration file. More information
about fontconfig can be found in the fontconfig(3) manual
page and on http://fontconfig.org.</codeblock>
        <p>次のように実行します:</p>
<codeblock>sudo fc-cache</codeblock>
      </answer>
    </faqentry>
    <faqentry name="non-admin-installer">
      <question>
        <p>インストーラから Fink をインストールできません。&quot;volume doesn't support symlinks&quot; エラーが出ます。</p>
      </question>
      <answer>
        <p>
        	このメッセージは、 Fink インストーラを管理者権限のないユーザーで実行すると発生します。
        	ログイン時に権限のあるユーザーにログインするか、Finder でユーザーを切り替えてください。
        </p>
        <p>
        	管理者アカウントを使っていても問題が発生する場合、システムのトップレベルディレクトリの
        	パーミッションに問題があるかもしれません。 Apple の ディスクユーティリティを使い、問題の
        	ボリュームを選択し、 <em>First Aid</em> タブから <em>ディスクのアクセス権を修復</em>
        	を選択してください。
        	If that doesn't work, then you may need to set your permissions manually via:</p>
	<codeblock>
sudo chmod 1775 /	  
	</codeblock>
      </answer>
    </faqentry>
    <faqentry name="wrong-arch">
      <question>
        <p>Fink を更新できない。 <quote>package architecture (darwin-i386) がシステム (darwin-powerpc) に合っていない。</quote>
</p>
      </question>
      <answer>
        <p>このエラーは、PPC インストーラで Intel マシンにインストールした際に発生します。  
        現在のインストールを、例えば次のように削除してください:</p>
        <codeblock>sudo rm -rf /sw</codeblock>
        <p>Intel マシン用のインストーラを、<link url="/download/index.php">ダウンロードページ</link>から入手してください。</p>
      </answer>
    </faqentry>

</chapter>
<chapter filename="comp-general" >
    <!-- FAQs in comp-general are coded into VirtPackage.pm
       Do not rename, remove, or otherwise cause the URL to change. -->
<title>コンパイルの問題 - 一般</title>
<shorttitle>コンパイル (1)</shorttitle>
<faqentry name="compiler" >
<question>
<p>configure スクリプトが &quot;acceptable cc&quot; が見つからないといってきます。
これは何ですか?</p>
</question>
<answer>
<p>ドキュメンテーションを読んでください。
パッケージをソースからコンパイルするには、 Developer Tools が必要です。
これには、 C コンパイラ <code>cc</code> など必要なものが入っています。
</p>
</answer>
</faqentry>
<faqentry name="cvs" >
<question>
<p>&quot;fink selfupdate-cvs&quot; をしようとしたら、このメッセージが出てきました: &quot;cvs: Command not found.&quot;
</p>
</question>
<answer>
<p>Developer Tools をインストールする必要があります。</p>
</answer>
</faqentry>
<faqentry name="missing-make">
<question>
<p><code>make</code> に関連したエラーがでました。</p>
</question>
<answer>
<p>もしメッセージが以下のようであれば</p>
<codeblock>make: command not found</codeblock>
<p>あるいは</p>
<codeblock>Can't exec &quot;make&quot;: No such file or directory at /sw/lib/perl5/Fink/Services.pm line 190.</codeblock>
<p>Developer Tools をインストールする必要があります。</p>
<p>もしメッセージが以下のようであれば</p>
<codeblock>make: illegal option -- C</codeblock>
<p>
Developer Tools に入っていた GNU 版の <code>make</code> ユーティリティーを、 BSD 版の make に換えてしまったようです。
パッケージの中には GNU 版の make でのみサポートされている特殊機能に依存しているものも多いので、 
<code>/usr/bin/make</code> が <code>gnumake</code> のシンボリックリンクであることを確認してください。
<code>bsdmake</code> ではありません。
さらに、 <code>/usr/local/bin/</code> に他の <code>make</code> がないことも確認してください。
</p>
</answer>
</faqentry>
<faqentry name="head" >
<question>
<p>head コマンドから変な使用方法メッセージが出ています。何がおかしいのですか?</p>
</question>
<answer>
<p>もしこれでしたら:</p>
<codeblock>Unknown option: 1
Usage: head [-options] &lt;url>...</codeblock>
<p>(後にオプションの説明リストが続く)
<code>head</code> が壊れています。
これは Perl libwww ライブラリを HFS+ システムボリュームにインストールすると起こります。
この時 <code>/usr/bin/HEAD</code> をインストールしようとするのですが、このファイルシステムは大文字と小文字を区別しないので、 <code>head</code> を上書きしてしまいます。
<code>head</code> の方はシェルスクリプトや Makefile で良く使われる標準的なコマンドです。
Fink を使うには、オリジナルの方の <code>head</code> に戻す必要があります。</p>
<p>ソースリリースのブートストラップスクリプトは、現在はこれを確認しますが、最初のインストールにバイナリリリースを使う場合、あるいは Fink をインストールした後で libwww をインストールする場合、まだこの問題に当たります。</p>
<p>この問題は、 <filename>/sw/bin/HEAD</filename> をインストールした場合も起こることが報告されています (Fink のパッケージではありません)。
これは簡単に解決できます: rename <filename>/sw/bin/HEAD</filename> </p>
</answer>
</faqentry>
<faqentry name="also_in" >
<question>
<p>あるパッケージをインストールしようとすると、他のパッケージのファイルを上書きしようとしているというエラーメッセージが出ました。
</p>
</question>
<answer>
<p>これはスプリットオフパッケージ (-dev, -shlibs などがついてるもの) において、ファイルが移動する時 (<code>foo</code> から <code>foo-shlibs</code> など) に発生することがあります。
両者は実質同じものなので、インストールしようとしているパッケージから上書きしてしまっても良いでしょう:
</p>
<codeblock>sudo dpkg -i --force-overwrite <em>filename</em>
</codeblock>
<p>ここで <em>filename</em> はインストールしようとしているパッケージ用の .deb ファイルです。</p>
</answer>
</faqentry>

<faqentry name="mv-failed" >
<question>
<p>パッケージをインストールしようとした時の &quot;execution of mv failed, exit code 1&quot; とはどういう意味ですか?</p>
</question>
<answer>
<p>StuffIt Pro がインストールされている場合、 &quot;Archive Via Real Name&quot; モードが設定されていると思われます。
システム環境設定の StuffIt 設定で "ArchiveViaRealName" を無効化してください。
これはいくつかの重要なシステムコールのバ再実装のバグで、この件のような不思議なエラーをたくさん出します。</p>
<p>この問題でない場合、 <filename>mv</filename> のエラーは通常、ビルドの前の方で発生した別のエラーを意味しています。
エラーは発生したもののビルドは続行したものです。
問題のあったファイルを追跡するには、ビルドの出力中の存在しないファイルを探します。
例えば:</p>
<codeblock>mv /sw/src/root-foo-0.1.2-3/sw/lib/libbar*.dylib \
/sw/src/root-foo-shlibs-0.1.2-3/sw/lib/
mv: cannot stat `/sw/src/root-foo-0.1.2-3/sw/lib/libbar*.dylib':
No such file or directory
### execution of mv failed, exit code 1
Failed: installing foo-0.1.2-3 failed</codeblock>
<p>この場合、 <filename>libbar</filename> ファイルをビルド出力の前の方で探します。</p>
</answer>
</faqentry>
<faqentry name="node-exists" >
<question>
<p>'&quot;node&quot; already exists' というエラーメッセージが出て、インストール | アップデートができません。</p>
</question>
<answer>
<p>このようなエラーが出ます:</p>
<codeblock>Failed: Internal error: node for system-xfree86 already exists</codeblock>
<p>パッケージ info ファイルが変更されて依存性エンジンが混乱しているために出た問題です。
修正するには:</p>
<ul>
<li>
<p>問題のあるパッケージを強制削除する。上の例の場合は:</p>
<codeblock>sudo dpkg -r --force-all system-xfree86</codeblock>
</li>
<li>
<p>再びインストール | アップグレードする。
途中、削除したパッケージの &quot;virtual dependency&quot; のプロンプトが出てくるので、これを選択する。
こうするとビルド中に再インストールされる。</p>
</li>
</ul>
</answer>
</faqentry>
<faqentry name="usr-local-libs" >
<question>
	<p>/usr/local にインストールされているライブラリやヘッダが 
	Fink のビルドの問題を起こすことがあると聞いたけど、本当ですか?</p>
</question>
<answer>
<p>そういう場合もよくあります。
これは、パッケージの configure スクリプトは Fink のパスより先に <filename>/usr/local</filename> 
の中のライブラリとヘッダを検索するからです。
もし問題が発生して、他の FAQ で解決ができそうになければ、 
<filename>/usr/local/lib</filename> のライブラリと <filename>/usr/local/include</filename>
のヘッダを確認してください。
これが原因そうであれば、 <filename>/usr/local</filename> の名前を一時的に変えてください。
例えば:</p>
<codeblock>sudo mv /usr/local /usr/local.moved</codeblock>
<p>ビルド後、 <filename>/usr/local</filename> を元に戻しください:</p>
<codeblock>sudo mv /usr/local.moved /usr/local</codeblock>
<p>Starting with macOS 10.14, it's sometimes not possible to rename <filename>/usr/local</filename>. If you get an error when renaming <filename>/usr/local</filename> directly, then rename the subdirectories inside it instead:</p>
<codeblock>
sudo mv /usr/local/include /usr/local/include.moved
sudo mv /usr/local/lib /usr/local/lib.moved
</codeblock>
<p>do your build, and then you can put <filename>/usr/local/include</filename> and <filename>/usr/local/lib</filename>
back:</p>
<codeblock>
sudo mv /usr/local/include.moved /usr/local/include
sudo mv /usr/local/lib.moved /usr/local/lib
</codeblock>
</answer>
</faqentry>
<faqentry name="toc-out-of-date" >
<question>
<p>パッケージをビルドしようとしたら、 &quot;table of contents&quot; が古いというメッセージが出ました。何をしたらいいですか?
</p>
</question>
<answer>
<p>このメッセージは重要なヒントです。
メッセージはこのようなものだと思われます:</p>
<codeblock>ld: table of contents for archive: /sw/lib/libintl.a is out of date; 
rerun ranlib(1) (can't load from it)</codeblock>
<p>この問題を起こしているライブラリに (root で) ranlib を実行する必要があります。
例えば、この例では:</p>
<codeblock>sudo ranlib /sw/lib/libintl.a</codeblock>
</answer>
</faqentry>
<faqentry name="fc-atlas" >
<question>
<p>atlas をインストールしようとすると、 Fink Commander がハングアップします。</p>
</question>
<answer>
<p><code>atlas</code> のビルド中にユーザーにプロンプトを送るステップがあり Fink Commander がこれを表示しないからです。
代わりに <code>fink install atlas</code> とする必要があります。</p>
</answer>
</faqentry>
<faqentry name="basic-headers" >
<question>
<p><filename>stddef.h</filename> | <filename>wchar.h</filename> | <filename>stdlib.h</filename> | <filename>crt1.o</filename> が見つからない、
あるいは、&quot;C compiler cannot create executables&quot; というメッセージが出ます。
これはどこにありますか?</p>
</question>
<answer>
<p>これらの問題は、いずれも Developer Tools の DevSDK によって提供されるヘッダファイルがないためです。
<filename>/Library/Receipts/DevSDK.pkg</filename> がシステムにあるか確認し、なければ  Dev Tools インストーラを起動してカスタムインストールを選択、 DevSDK パッケージをインストールして下さい。</p>
<p>&quot;cannot create executables&quot; エラーは、Developer Tools のバージョンが 以前のバージョンの OS 用である場合にも発生します。</p>
</answer>
</faqentry>
<faqentry name="multiple-dependencies" >
<question>
<p>Fink が &quot;unable to resolve version conflict on multiple dependencies&quot; と言って、アップデートできません。</p>
</question>
<answer>
<p>この問題を解決するには、パッケージを一つだけアップデートしてみてください。
次に、再度 &quot;fink update-all&quot; を試してみてください。
まだ問題が出るようなら、これを繰り返してください。
</p>
</answer>
</faqentry>
<faqentry name="dpkg-parse-error" >
<question>
<p>&quot;dpkg: parse error, in file `/sw/var/lib/dpkg/status'&quot;
というメッセージが出て、何もインストールできません!</p>
</question>
      <answer>
        <p>
	  これは、クラッシュや回復不可能なエラーなど、何らかの理由で dpkg データベースが壊れたことを意味します。
	  多くの場合、buildlock 中に発生するので、例えば:
	</p>
	<codeblock>package `fink-buildlock-foo-1.2.3-4':  missing version</codeblock>
	<p>
	  (もちろん、<filename>foo-1.2.3-4</filename> はあなたが見ようとしているパッケージ名)
	</p>
	<p>
	  この問題が発生した場合、superuser で <filename>/sw/var/lib/dpkg/status</filename> を編集します。
	  エラーメッセージにある行の近くにいきます。
	  <code>fink-buildlock-foo-1.2.3-4</code> で、 <code>Status</code> フィールドが、
	</p>
	<codeblock>install ok installed</codeblock>
	<p>となっていますが、これを</p>
	<codeblock>purge ok not-installed</codeblock>
	<p>
	  と書き換えます。
	</p>
	<p>
	  また、これとは異なり、ファイル中にゴミがある場合があります。
	  この場合は、旧バージョンのデータベースをコピーします:
	</p>
        <codeblock>sudo cp /sw/var/lib/dpkg/status-old /sw/var/lib/dpkg/status</codeblock>
        <p>
	  問題が起きる前にインストールしていたパッケージをいくつか再インストールする必要があるかもしれません。
	</p>
      </answer>
</faqentry>
<faqentry name="freetype-problems"> 
<question> 
<p>freetype に関係したエラーが出ます。</p> 
</question> 
<answer> 
<p>freetype に関係したエラーにはいくつかありますが、以下のものであれば:</p>
<codeblock>/usr/bin/ld: can't locate file for: -lfreetype</codeblock>
<p>外来の <filename>freetype-config</filename> があるかどうか、以下のコマンドを実行して確認します。</p>
<codeblock>where freetype-config</codeblock>
<p>(<filename>tcsh</filename> の場合)</p>
<codeblock>type -a freetype-config</codeblock>
<p>(<filename>bash</filename> の場合)。 Mono フレームワークは、 <filename>/usr/bin/freetype-config</filename> をインストールし、フレームワーク内へのシンボリックリンクを作ることが知られています。</p>
<p>もしこのようなものであれば:</p> 
<codeblock>/sw/include/pango-1.0/pango/pangoft2.h:52: error: parse error before '*' token 
/sw/include/pango-1.0/pango/pangoft2.h:57: error: parse error before '*' token 
/sw/include/pango-1.0/pango/pangoft2.h:61: error: parse error before '*' token 
/sw/include/pango-1.0/pango/pangoft2.h:86: error: parse error before &quot;pango_ft2_font_get_face&quot;
/sw/include/pango-1.0/pango/pangoft2.h:86: warning: data definition has no type or storage class 
make[2]: *** [rsvg-gz.lo] Error 1 
make[1]: *** [all-recursive] Error 1 
make: *** [all-recursive-am] Error 2 
### execution of make failed, exit code 2 
Failed: compiling librsvg2-2.4.0-3 failed</codeblock> 
<p>あるいは</p> 
<codeblock>In file included from vteft2.c:32: 
vteglyph.h:64: error: parse error before &quot;FT_Library&quot;
vteglyph.h:64: warning: no semicolon at end of struct or union 
vteft2.c: In function `_vte_ft2_get_text_width': 
vteft2.c:236: error: dereferencing pointer to incomplete type 
vteft2.c: In function `_vte_ft2_get_text_height': 
vteft2.c:244: error: dereferencing pointer to incomplete type 
vteft2.c: In function `_vte_ft2_get_text_ascent': 
vteft2.c:252: error: dereferencing pointer to incomplete type 
vteft2.c: In function `_vte_ft2_draw_text': 
vteft2.c:294: error: dereferencing pointer to incomplete type 
vteft2.c:295: error: dereferencing pointer to incomplete type 
make[2]: *** [vteft2.lo] Error 1 
make[1]: *** [all-recursive] Error 1 
make: *** [all] Error 2 
### execution of make failed, exit code 2 
Failed: compiling vte-0.11.10-3 failed</codeblock> 
<p>あるいは</p> 
<codeblock>checking for freetype-config... /usr/X11R6/bin/freetype-config 
checking For sufficiently new FreeType (at least 2.0.1)... no 
configure: error: pangoxft Pango backend found but did not find freetype libraries 
make: *** No targets specified and no makefile found.  Stop. 
### execution of LD_TWOLEVEL_NAMESPACE=1 failed, exit code 2 
Failed: compiling gtk+2-2.2.4-2 failed</codeblock> 
<p>問題は X11 | XFree86 に含まれている、 <code>freetype</code> | <code>freetype-hinting</code> パッケージ間のヘッダを混同していることだと思われます。</p> 
<codeblock>fink remove freetype freetype-hinting</codeblock> 
<p>で、両方のインストールを削除します。
もし問題が上記のようではなく、以下のようであれば:</p> 
<codeblock>ld: Undefined symbols: 
_FT_Access_Frame </codeblock> 
<p>おそらく X11 インストールの残りファイルが原因です。
X11 SDK を再インストールしてみて下さい。</p> 
</answer> 
</faqentry> 
<faqentry name="dlfcn-from-oo"> 
<question> 
<p>`Dl_info' のエラーが出ます。</p> 
</question> 
<answer> 
<p>エラーが下記のようであれば:</p> 
<codeblock>unix_dl.c: In function `rep_open_dl_library': 
unix_dl.c:328: warning: assignment discards qualifiers from pointer target type 
unix_dl.c: In function `rep_find_c_symbol': 
unix_dl.c:466: error: `Dl_info' undeclared (first use in this function) 
unix_dl.c:466: error: (Each undeclared identifier is reported only once 
unix_dl.c:466: error: for each function it appears in.) 
unix_dl.c:466: error: parse error before &quot;info&quot;
unix_dl.c:467: error: `info' undeclared (first use in this function) 
make[1]: *** [unix_dl.lo] Error 1</codeblock> 
<p>おそらくヘッダファイル <code>/usr/local/include/dlfcn.h</code> が Panther と非互換だと思われます。
迷うことなく削除して下さい。</p> 
<p>このファイルは通常、 Open Office によってインストールされるようです。
この後、次のヘッダファイルとライブラリ
<code>/usr/local/lib/libdl.dylib</code> を Panther に付随するファイルへのシンボリックリンクに変更します。</p> 
<codeblock>sudo ln -s /usr/include/dlfcn.h /usr/local/include/dlfcn.h 
sudo ln -s /usr/lib/libdl.dylib /usr/local/lib/libdl.dylib</codeblock> 
</answer> 
</faqentry>
<faqentry name="gcc2"> 
    <!-- FAQs in comp-general.gcc2 are coded into VirtPackage.pm
       Do not rename, remove, or otherwise cause the URL to change. -->
<question>
<p>Fink が <filename>gcc2</filename> がないと言っていますが、インストールも出来ないようです。</p>
</question> 
<answer>
<p>
<filename>gcc2</filename> は gcc-2.95 のバーチャルパッケージです。
gcc2.95 を XCode Tools (古い OS バージョンは Developer Tools に gcc-2.95 が含まれていました) からインストールして下さい。</p>
<p><em>注記:</em> gcc2.95 and/or gcc3.1 は gcc3.3 とコンフリクトしません。両方インストールすることもできます。</p>
</answer>
</faqentry>
<faqentry name="system-java">
<question>
<p>Fink が <code>Failed: Can't resolve dependency &quot;system-java14-dev&quot;</code>
と言っていますが、そのようなパッケージはありません。
</p>
</question>
<answer>
<p>
バーチャルパッケージだからです。
このエラーは、 Java が Software Update によって更新された場合に発生します。
更新時にヘッダファイルが削除され、 -dev パッケージが作成されなくなるためです。
</p>
<p>
<link url="http://connect.apple.com">Apple</link> から、適切な <filename>Java Developer Tools</filename> パッケージをダウンロードする必要があります。
この問題の場合は、 <filename>Java 1.4.2 Developer Tools</filename> です。
</p>
</answer>
</faqentry>
<faqentry name="dpkg-split">
<question>
<p>
何をインストールしようとしても、
<quote>dpkg (subprocess): failed to exec dpkg-split to see if it's part of a multiparter: No such file or directory</quote>
というエラーが出ます。
どうしたらいいですか?
</p>
</question>
<answer>
<p>
通常、環境変数を正しく設定することで直ります。
参照: <xref chapter="usage-fink" section="fink-not-found">この FAQ 項目</xref>
</p>
</answer>
</faqentry>
<faqentry name="xml-parser">
<question>
	<p>
	次のメッセージが出ます:<quote>configure: error: XML::Parser perl module is required for intltool</quote>。
	どうしたら良いでしょうか?
	</p>
</question>
<answer>
	<p>
	自分のシステムにある Perl に合った、正しいバージョンの xml-parser-pm が必要です。
	例えば、 Panther では <code>xml-parser-pm581</code> が正しく、 <code>xml-parser-pm560</code> 
	ではありません
	( <code>xml-parser-pm</code> 代替パッケージでも可)。
	システムにあるのが、 <code>Perl-5.8.1</code> であり、 <code>Perl-5.6.0</code> ではないためです。
	Jaguar でデフォルトのシステム Perl バージョンを使っている場合、 <code>pm560</code> で、
	<code>Perl 5.8.0</code> をインストールしている場合は <code>pm580</code> でも構いません。
	</p>
</answer>
</faqentry>
<faqentry name="master-problems">
<question>
	<p>
		パッケージをダウンロードしようとすると、 Fink が変なサイトに行こうとするけれど、 <quote>distfiles</quote>
		と書いてあるだけで、しかもそのファイルはそこに存在しません。
	</p>
</question>
<answer>
	<p>
		これは、 Fink が <quote>マスター</quote> と呼ばれるものを使おうとしたために発生しています。
		上流サイトが移動しても Fink パッケージのソースが入手できるための仕組みです。
		この問題は、新しい上流バージョンのパッケージがリリースされたが、
		まだ Master ミラーに反映されていない場合によくおこります。
	</p>
	<p>これを直すには、 <code>fink configure</code> を実行し、マスターミラーを最後に検索するように設定を変更します。</p>
</answer>
</faqentry>
<faqentry name="compile-options">
	<question>
		<p>パッケージをビルドするときに、 Fink に違うオプションを使わせたい。</p>
	</question>
	<answer>
		<p>
			まず最初に、バリエーションを作成するようにパッケージメンテナに伝えてみてください。
			これが比較的簡単な方法です。
			メンテナから反応がなかったり、新しいバージョンが出てしまったり、自分で違うオプションを試してみたい場合、
			<link url="/doc/quick-start-pkg/index.php">Packaging Tutorial</link> 
			と <link url="/doc/packaging/index.php">Packaging Manual</link> をお読みください。
		</p>
		<p><em>注記:</em>Fink は、ビルドされたマシンに依存しないよう、全ての公式パッケージにはG5 最適化などのことはされません。このようなことをしたい場合、各自でする必要があります。</p>
	</answer>
</faqentry>

    <faqentry name="alternates">
      <question>
        <p>
	  ソースからビルドしようとすると必ず、同じライブラリの二つのバージョンをいったりきたりします。
	</p>
      </question>
      <answer>
        <p>
	 非常に複雑なビルドツリーでは、いくつかのパッケージがライブラリの特定バージョンに依存しており、
	 他のパッケージが他のバージョンに依存していることがあります (例 <code>db47</code> vs. <code>db44</code>)。
	 結果、Fink は更新しようとしているパッケージの依存性を満たすためにインストールされていない方をインストールしようとします。
	</p>
       <p>Unfortunately, due to limitations in the build-dependency engine, you
      may wind up with the dreaded
         残念ながら、ビルド依存エンジンの限界により、恐怖の
       </p>
      <codeblock>Fink::SysState: Could not resolve inconsistent dependencies</codeblock>
      <p>
        というメッセージを、十分複雑な <code>update-all</code> をした場合に見ることができます。
	これは通常、以下のコマンドで直ります:
      </p>
      <codeblock>
fink scanpackages
sudo apt-get update
sudo apt-get install foo=1.23-4	
      </codeblock>
      <p>
        しかし、十分複雑な更新の場合には聞きません。
	いくつかのパッケージを一つ一つ更新してみてください。
      </p>
      </answer>
    </faqentry>

    <faqentry name="python-mods">
      <question>
        <p>Python モジュールをビルドする際に、<code>MACOSX_DEPLOYMENT_TARGET </code> の問題が出ます。</p>
      </question>
      <answer>
        <p>以下のようであれば:</p>
        <codeblock>running build
running build_ext
Traceback (most recent call last):
  File "setup_socket_ssl.py", line 21, in ?
    depends = ['socketmodule.h'] )
  File "/sw/src/root-python24-2.4.1-1/sw/lib/python2.4/distutils/core.py", line 166, in setup
SystemExit: error: $MACOSX_DEPLOYMENT_TARGET mismatch: now "10.4" but "10.3" during configure
### execution of /sw/bin/python2.4 failed, exit code 1</codeblock>
        <p>
        	<code>python2*</code> パッケージは、ビルド時に <code>MACOSX_DEPLOYMENT_TARGET</code> 
        	をある設定ファイルに書き、Python ビルドユーティリティはモジュールをコンパイルする際に
        	この値を使っています。
        	これは、10.3 上でビルドした <code>python24</code> を 10.4 上で使う場合、
        	つまり 10.3 =&gt; 10.4 とアップグレードしたり、 <em>10.4-transitional</em> 
        	バイナリディストリビューションを使ってビルドせずに更新した場合、
        	Python は、実際は 10.4 のところ <code>MACOSX_DEPLOYMENT_TARGET</code> の
        	値が 10.3 だと思い込むミスマッチが発生します。
        </p>
        <p>
          上記の問題の場合であれば、<code>fink rebuild python24</code> を実行し、
          <code>python</code> パッケージを更新すれば修正されます。
        </p>
      </answer>
    </faqentry>
<faqentry name="libtool-unrecognized-dynamic">
  <question>
    <p>
      <quote>unrecognized option `-dynamic'</quote> というエラーが <filename>libtool</filename> から出たとです。
    </p>
  </question>
  <answer>
    <p>このエラー:</p>
    <codeblock> libtool: unrecognized option `-dynamic'</codeblock>
    <p>
      は、Apple の <filename>/usr/bin/libtool</filename> を GNU の <filename>libtool</filename> に変えてしまったことを意味します。
      残念ながら、この二つの <code>libtools</code> は、同じことを<em>してくれません</em>。
    </p>
    <p>
      これを直す唯一の方法は、ちゃんとした Apple <filename>libtool</filename> をどこから手に入れることです。
      これは、 XCode Tools の <filename>DeveloperTools.pkg</filename> パッケージの一部で、
      <filename>/Library/Receipts</filename> のレシートを削除した後、再インストールすることができます。
      (10.4以降ならゴミ箱へ、10.3なら<code>sudo rm -rf /Library/Receipts/DeveloperTools.pkg</code>してください)
    </p>
  </answer>
</faqentry>
</chapter>
<chapter filename="comp-packages" >
<title>コンパイルの問題 - 特定のバージョン</title>
<shorttitle>コンパイル (2)</shorttitle>
<faqentry name="libgtop" >
<question>
<p><code>sed</code> を使うパッケージビルドが失敗します。</p>
</question>
<answer>
<p>これはログインスクリプト (例 <code>~/.cshrc</code>) が &quot;<code>echo Hello</code>&quot; であるとか <code>xttitle</code> といったことをターミナルに書くと発生します。
いちばん簡単な解決方法は、問題の行をコメントアウトすることです。
</p>
<p>もし echo を残しておきたいなら、次のようにすることもできます:</p>
<codeblock>if ( $?prompt) then
echo Hello
endif</codeblock>
</answer>
</faqentry>
<faqentry name="cant-install-xfree" >
<question>
<p>Fink の XFree86 パッケージに切替えたいけれど、 <code>system-xfree86</code>  とコンフリクトしているため <code>xfree86-base</code> | <code>xfree86</code> がインストールできません。</p>
</question>
<answer>
<p>どのような X11 でも、残念なことに、 /usr/X11R6 にインストールしなければなりません。
Fink の <code>xfree86-base</code> と <code>xfree86-rootless</code> もここにインストールします。
しかし、 Fink はデータベースに無いファイルは削除しないため、 Fink 以外の X11 を自動的に置き換えることはありません。
</p>
<p>という訳で、:</p>
<p><em>注記: 10.2.x と 最新版の Fink (>= 0.16.2) のユーザーと 10.3.x ユーザーはステップ 1 を飛ばしてください (実行しても何も起きませんが)。</em></p>
<p>1. <code>system-xfree86</code> を削除します。
X11 に依存するパッケージがない場合、これは単純です。
しかし、 X11 に依存するパッケージがインストールされていることの方が多いでしょう。
これを全てアンインストールする代わりに、次のコマンドをうちます:</p>
<codeblock>sudo dpkg --remove --force-depends system-xfree86</codeblock>
<p>これで、他のパッケージは触らずに削除します。
<code>system-xfree86</code> がなければステップ 3 に進みます。
</p>
<p>2. XFree86 を全て手動で削除する。これは:</p>
<codeblock>sudo rm -rf /Applications/XDarwin.app /usr/X11R6 /etc/X11</codeblock>
<p>Apple X11 から切替える場合、 X11 アプリケーションも削除します。</p>
<p>3. XFree86-4.2.1 を入れるには、 Fink の <code>xfree86-base</code> と 
<code>xfree86-rootless</code> をインストールします。
これは、ソースからなら &quot;<code>fink install</code>&quot; で、
バイナリからなら  &quot;<code>apt-get install</code>&quot; または <code>dselect</code> です。</p>
<p> -あるいは-</p>
<p>3a. XFree86-4.3.x 以降を入れるには、 Fink の <code>xfree86</code> パッケージを、
&quot;fink install xfree86&quot; でインストールします。
最新版 (2004年5月25日時点で XFree86-4.4.x) はまだバイナリ版がなく、 unstable ツリーのみなので、 
[<link url="/faq/usage-fink.php#unstable\">unstable パッケージのインストール</link> を参照]
</p>
</answer>
</faqentry>
<faqentry name="change-thread-nothread" >
<question>
<p>non-threaded 版の Fink XFree86 パッケージから threaded 版 (またはその逆) にはどうしたら切替えることができますか?</p>
</question>
<answer>
<p>Fink 版の xfree86 を使っていて、 threaded と non-threaded を切替えたいのなら、 手動で古いバージョンを削除する必要があります。
これは、コマンドラインで:</p>
<codeblock>sudo dpkg -r --force-depends xfree86-base
sudo dpkg -r --force-depends xfree86-shlibs
sudo dpkg -r --force-depends xfree86-rootless
sudo dpkg -r --force-depends xfree86-rootless-shlibs</codeblock>
<p>threaded 版の場合:</p>
<codeblock>sudo dpkg -r --force-depends xfree86-base-threaded
sudo dpkg -r --force-depends xfree86-shlibs-threaded
sudo dpkg -r --force-depends xfree86-rootless-threaded
sudo dpkg -r --force-depends xfree86-rootless-threaded-shlibs</codeblock>
<p>FinkCommander でもパッケージを削除することができます。
ソース画面で、パッケージを選択し、次に <code>Source Menu</code> で &quot;<code>Force Remove</code>.&quot; を選択します。
</p>
<p>system-xfree86 を使っている場合、 前の質問を参照して削除してください。</p>
<p>希望するバージョンの xfree86 をインストールします: </p>
<p>
<code>xfree86-base</code> と <code>xfree86-rootless</code>
</p>
<p>
<code>xfree86-base-threaded</code> と <code>xfree86-rootless-threaded</code>
</p>
<p>普通は、ソースインストールは: &quot;<code>fink install</code>&quot; で、バイナリインストールは: &quot;<code>apt-get install</code>&quot; または <code>dselect</code> です。</p>
</answer>
</faqentry>
<faqentry name="libiconv-gettext">
<question>
	<p><code>libiconv</code> が更新できません。</p>
</question>
<answer>
	<p>下記の形式のエラーでしたら:</p>
	<codeblock>libtool: link: cannot find the library `/sw/lib/libiconv.la'</codeblock>
	<p>以下のように実行して直すことが出来ます</p>
	<codeblock>fink remove gettext-dev
fink install libiconv</codeblock>
</answer>
</faqentry>
    <faqentry name="cplusplus-filt">
      <question>
        <p>パッケージがインストールできません。<filename>c++filt</filename> がないからです。 
        これはどこにありますか?</p>
      </question>
      <answer>
        <p>もし、Tiger にアップデート後にエラーが</p>
        <codeblock>xgcc: installation problem, cannot exec `c++filt': No such file or directory</codeblock>
        <p>とでたら、以下のようにします:</p>
        <ul>
          <li>(Tiger のインストーラから)  <code>BSD.pkg</code> をインストールします。
         	<code>/usr/bin/c++filt</code> が現れるまで何度もインストールしてみてください。</li>
        </ul>
        <ul>
          <li>10.4: ターミナルで、
          <codeblock>/Developer/Tools/uninstall-devtools.pl</codeblock>
          	と実行し、古い Developer Tools を削除します。
          	次に、 XCode (2.4.1 以降) をインストールします。
          </li>
          <li>10.5: ターミナルで、
          <codeblock>/Developer/Tools/uninstall-devtools.pl</codeblock>
          	と実行し、古い Developer Tools を削除します。
          	次に、 XCode (2.3 以降) をインストールします。
          </li>
        </ul>
      </answer>
    </faqentry>
    <faqentry name="gettext-tools">
      <question>
        <p>Fink が、 <code>gettext</code> の依存性に矛盾があるとだけ表示し、更新してくれません。</p>
      </question>
      <answer>
        <p>
          <code>fink selfupdate</code> を実行して最新にした後、
          <code>fink update gettext-tools</code> としてみてください。
          古いバージョンの <code>gettext-tools</code> が <code>gettext</code> の更新を妨害していた可能性があります。
        </p>
      </answer>
    </faqentry>
  <faqentry name="Leopard-libXrandr">
    <question>
      <p>OS 10.5 で <em>gtk+2</em> がインストールできません。</p>
    </question>
    <answer>
      <p>
        これは、典型的には、ライブラリがないということです。例えば:
	<filename>/usr/X11/lib/libXrandr.2.0.0.dylib</filename> や 
	<filename>/usr/X11/lib/libXdamage.1.1.0.dylib</filename> 
	(あるいは <filename>/usr/X11/lib/</filename> にある他のバージョンのライブラリ)
      </p>
      <p>
        現状では、ベストな解決策は XCode 3.1.3 以降をインストールすることです。
      </p>  
    </answer>
  </faqentry>
    <faqentry name="all-others">
      <question>
        <p>ここに載っていないパッケージで問題があります。</p>
      </question>
      <answer>
        <p>パッケージの問題は変わりやすいので、Fink wiki に情報を載せることにいたしました。
        <link url="http://wiki.finkproject.org/index.php/Fink:Package_issues">Package issues page</link> をご確認ください。
        (訳注: wiki の性質上、wiki は英語版のみであり、翻訳の予定はありません。なお、一部日本語での情報もあります)</p>
      </answer>
    </faqentry>
</chapter>
<chapter filename="usage-general" >
    <!-- FAQs in usage-general are coded into VirtPackage.pm
       Do not rename, remove, or otherwise cause the URL to change. -->
<title>パッケージ使用上の問題 - 一般</title>
<shorttitle>使用法 (1)</shorttitle>
<faqentry name="xlocale" >
<question>
<p>このようなメッセージが大量に出ます。
&quot;locale not supported by C library&quot;
これはまずいことですか?</p>
</question>
<answer>
<p>まずいことという訳ではありません。
これはデフォルトの英語メッセージや日付フォーマットなどを使うという意味です。
これ以外はプログラムは普通に動作します。
X11 のドキュメントに、 <link url="/doc/x11/trouble.php#locale" >詳細</link> があります。</p>
</answer>
</faqentry>
<faqentry name="passwd" >
<question>
<p>いきなり変なユーザーがシステムに現れました。
ユーザー名は、 &quot;mysql&quot;, &quot;pgsql&quot;, &quot;games&quot; などです。
こいつらはどこから来たのですか?</p>
</question>
<answer>
<p>Fink を使って passwd というパッケージをインストールしたのでしょう。
passwd は、セキュリティー上の問題からいくつかのユーザーを追加します。
Unix システムでは、ファイルやプロセスの &quot;所有者&quot; を使ってパーミッションやセキュリティーをチューニングするのです。
Apache や MySQL のようなプログラムは、&quot;所有者&quot; が必要で、これらの daemon に root を割り当てると安全ではなくなります。
(Apache に、システム上の全てのファイルへいきなり書き込み権限が与えられたと思ってみてください)
このため、 passwd パッケージはユーザーを必要とするパッケージにユーザーを追加するのです。</p>
<p>急にユーザーが &quot;システム環境設定: ユーザー&quot; ペイン (10.2.x) あるいは
&quot;システム環境設定: アカウント&quot; ペイン (10.3.x) 
に現れるのは不安ですが、削除したい気持ちを押えてください。</p>
<ul>
<li>第一に、あなたはユーザーを利用するパッケージをインストールする選択をしたのです。
ユーザーを削除したら意味がありませんよね?</li>
<li>実際、 Mac OS X には既にユーザーが追加されていますが、気づいていないのです。
www, daemon, nobody などがそうです。
これらのユーザーは、ある種のサービスを行なう Unix 流のやり方なのです。
passwd パッケージは、 Apple が提供していないユーザーを追加するだけです。
Apple がインストールしたユーザーは、 NetInfo マネージャ.app で見ることができます:
<code>niutil -list . /users</code>
</li>
<li>このユーザーを削除することにした場合、十分気をつけてください。
&quot;システム環境設定: ユーザー&quot; ペイン (10.2.x) あるいは
&quot;システム環境設定: アカウント&quot; ペイン (10.3.x) 
から追加したユーザーのファイルには、適当な管理者権限が割り振られます。
管理者アカウントのパーミッションが混乱するという報告があります。
これはシステム環境設定のバグで、 Apple には報告されています。
安全にユーザーを削除するには、 NetInfo マネージャ.app を使うか、ターミナルから <code>niutil</code> コマンドを入力します。
NetInfo の詳細については、 <code>niutil</code> の man ページを読んでください。
</li>
</ul>
<p>passwd パッケージのインストール中に、Fink がユーザーを追加するか<em>尋ねます</em>ので、実際はいきなりではないはずです。</p>
</answer>
</faqentry>
<faqentry name="compile-myself" >
<question>
<p>Fink でインストールしたソフトウェアを使って、自分で何かをコンパイルするにはどうしたらいいのですか?</p>
</question>
      <answer>
        <!-- TODO: maybe change this to use LIBRARY_PATH / DYLD_LIBRARY_PATH ? -->
        <p>
	  Fink 以外でなにかをコンパイルしようとする場合、
	  コンパイラとリンカに、Fink がインストールしたライブラリやヘッダがどこにあるのかを伝える必要があります。
	  また、コンパイラにターゲットのアーキテクチャーを使うよう伝える必要もあります。
	  標準的な configure/make を使用するパッケージの場合、
	  以下の環境変数を設定する必要があります:
	</p>
        <p>-bash-</p>
        <codeblock>export CFLAGS=-I/sw/include 
export LDFLAGS=-L/sw/lib 
export CXXFLAGS=$CFLAGS 
export CPPFLAGS=$CXXFLAGS 
export ACLOCAL_FLAGS=&quot;-I /sw/share/aclocal&quot;
export PKG_CONFIG_PATH=&quot;/sw/lib/pkgconfig&quot;
export PATH=/sw/var/lib/fink/path-prefix-clang:$PATH
export MACOSX_DEPLOYMENT_TARGET=10.9</codeblock>
        <p>-tcsh-</p>
        <codeblock>setenv CFLAGS -I/sw/include 
setenv LDFLAGS -L/sw/lib 
setenv CXXFLAGS $CFLAGS 
setenv CPPFLAGS $CXXFLAGS 
setenv ACLOCAL_FLAGS &quot;-I /sw/share/aclocal&quot;
setenv PKG_CONFIG_PATH &quot;/sw/lib/pkgconfig&quot;
setenv PATH /sw/var/lib/fink/path-prefix-clang:$PATH
setenv MACOSX_DEPLOYMENT_TARGET 10.9</codeblock>
	<p>(実行 OS が 10.9 以降の場合)</p>
        <p>
	  これを起動ファイル (e.g. <filename>.cshrc</filename> | <filename>.profile</filename>) に入れておくと、自動的に設定され、最も簡単です。
	  これらの環境設定を使用しないパッケージの場合、コンパイル行に
	  "-I/sw/include" (ヘッダファイル) と "-L/sw/lib" (ライブラリ) を追加する必要があるでしょう。
	  パッケージによっては、同様だが非標準な EXTRA_CFLAGS or --with-qt-dir= などのオプションを使っているかもしれません。
	  "./configure --help" をすることで、こうした configure オプションを知ることができます。
	</p>
        <p>
	  また、ライブラリパッケージなどは、
	  対応する開発ヘッダ (e.g. <em>foo-1.0-1-dev</em>) をインストールする必要があるかもしれません。
	</p>
      </answer>
</faqentry>
<faqentry name="apple-x11-applications-menu" >
<question>
<p>Apple X11 の Application メニューを使うと、 Fink からインストールしたアプリケーションの起動できません。</p>
</question>
<answer>
<p>Apple X11 は Fink の環境設定を認識しません。
このため、Applications メニューも PATH を認識せず、 Fink アプリケーションを探すことができません。
解決するには、 Fink からインストールしたアプリケーションに:
</p>
<codeblock>source /sw/bin/init.sh ; </codeblock>
<p>と追加します。例えば、 Fink からインストールした GIMP の場合、 GIMP の Command 欄に:</p>
<codeblock>source /sw/bin/init.sh ; gimp</codeblock>
<p>と入力します。</p>
<p>あるいは、 .xinitrc ファイル (自分のディレクトリ内の) の一行目に:</p>
<codeblock>source /sw/bin/init.sh</codeblock>
<p>と追加します。</p>
</answer>
</faqentry>
<faqentry name="x-options" >
<question>
	<p>X11 の種類が多くて迷っています。
	Apple X11, XFree86 などなど、どれをインストールしたら良いのですか?</p>
</question>
<answer>
	<p>
	いずれも (XFree86 のコードをベースとした) XFree86 の派生ですが、細かな違いがあります。
	Jaguar と Panther では選択肢も変わります。
	</p>
	<p>Panther では:</p>
	<ul>
		<li>
		<p>
		Apple X11 (3枚目のディスク):
		X11 関連のプログラムをコンパイルや Fink でソースインストールする場合、 
		X11SDK (XCode ディスク) も忘れずにインストールする
		</p>
		</li>
		<li>
		<p>4.4.x built via Fink: 
		<code>xfree86</code> と
		<code>xfree86-shlibs</code> のパッケージをインストールする
		</p>
		</li>
		<li>
			<p> X.org built via Fink: <code>xorg</code> と
			<code>xorg-shlibs</code> のパッケージをインストールする
			</p>
		</li>
	</ul>
	<p>Jaguar では、一番使われていて Fink パッケージが使えるのは:</p>
	<ul>
		<li>
		<p>Fink でビルドする 4.2.x: <code>xfree86-base</code> と 
		<code>xfree86-rootless</code> または <code>xfree86-base-threaded</code> 
		と <code>xfree86-rootless-threaded</code> (および、それぞれの <code>-shlibs</code>) をインストール
		</p>
		</li>
		<li>
		<p>Fink でビルドする 4.3.x: <code>xfree86</code> と <code>xfree86-shlibs</code> 
		パッケージをインストール
		</p>
		</li>
		<li>
		<p>
		Apple の 4.2.x (User+SDK パッケージがインストールされている場合): 
		<code>system-xfree86</code> パッケージが自動的にインストールされる。
		ユーザーはインストールを行わない
		(注記: Jaguar 用の Apple X11 Public Beta は既に入手不可能です。
		この方法は以前入手した人のみに有効です。)
		</p>
		</li>
	</ul>
	<p>
	これ以外の選択は、 <link url="/doc/x11/index.php" >Running X11 document</link> を参照してください。
	</p>
</answer>
</faqentry>
<faqentry name="no-display" >
<question>
<p>アプリケーションを実行しようとすると、
&quot;cannot open display:&quot;
というメッセージがでます。
どうしたら良いですか?</p>
</question>
<answer>
<p>このエラーは、システムが X ディスプレイと通信できていないことを意味します。
以下を確認してください:</p>
<p>1. X (Apple's X11, XFree86, ...) を起動。</p>
<p>2. DISPLAY 環境変数が設定されていることを確認する。デフォルトに設定された X では、 tcsh では:
</p>
<codeblock>setenv DISPLAY :0</codeblock>
<p>bash の場合:</p>
<codeblock>export DISPLAY=:0</codeblock>
<p>と入力します。</p>
</answer>
</faqentry>
<faqentry name="suggest-package" >
<question>
<p>自分の好きなプログラムが Fink にありません。
Fink に推薦したいのですが、どうしたら良いですか?</p>
</question>
<answer>
<p><link url="http://sourceforge.net/tracker/?atid=371315&amp;group_id=17203">Package Request Tracker</link>
の Fink プロジェクトページから推薦してください。</p>
<p>注記: SourceFourge の ID が必要です。</p>
</answer>
</faqentry>
<faqentry name="virtpackage">
    <!-- FAQs in usage-general.virtpackage are coded into VirtPackage.pm
       Do not rename, remove, or otherwise cause the URL to change. -->
<question>
	<p>
	  <code>system-*</code> &quot;virtual packages&quot; というのを時々見かけますが、
	  インストールも削除もできません。
	  これはいったいなんですか?
	</p>
</question>
<answer>
	<p>
	  <code>system-perl</code> のような名前のパッケージは代替パッケージです。
	  これは、実際にはファイル等を含んでいる訳ではなく、
	  fink 外で手動でインストールされたプログラムを fink に伝えるための仕組みとして存在します。
	</p>
	<p>
	  この仕組みは10.3 ディストリビューションから導入されました。
	  ほとんどの代替パッケージは自分でインストールや削除できるものではありません。
	  その代わりに、手動でインストールされたプログラム一覧を元に fink プログラム自体が作成する
	  &quot;Virtual Packages&quot; パッケージデータ構造となっています。
	  fink は、それぞれのパッケージについて特定の場所の特定のファイルを確認し、
	  見つかった場合はバーチャルパッケージがインストール済みと判断します。
	</p>
	<p>
	  fink が認識しているインストール済みの一覧は、
	  <code>fink-virtual-pkgs</code> を実行することで見ることができます。
	  <code>--debug</code> フラグを追加すると、具体的にどのファイルを見ているのかという診断情報も確認できます。
	</p>
	<p>
	  任意のプログラムを (fink 外で) インストールし、 fink にこれを認識させる仕組みは残念ながらありません。
	  configure やコンパイルフラグ、パス名などを確認するのは非常に困難なためです。
	</p>
	<p>
	  以下は、 fink が定義するバーチャルパッケージのうち最も重要なものです (fink-0.19.2 時点) :
	</p>
	<ul>
	  <li>system-perl: [virtual package representing perl]
	    <p>
		  これの実体は <filename>/usr/bin/perl</filename> で、デフォルトの OS X インストールの一部になっています。
		  このパッケージは、 perl インタープリータのバージョン X.X.X である
		  <code>system-perlXXX</code> と <code>perlXXX-core</code> も提供します。
	    </p>
	  </li>
	  <li>system-javaXXX: [virtual package representing Java X.X.X]
	    <p>
		  これの実体は Java Runtime Environment で、 OS X (および Apple Software Update) の一部です。
		  詳細は、 <link url="http://www.apple.co.jp/java">Apple の Java のページ</link> をご覧ください。
	    </p>
	  </li>
	  <li>system-javaXXX-dev: [virtual package representing Java X.X.X development headers]
	    <p>
		  これの実体は Java SDK で、 <link url="http://connect.apple.com">connect.apple.com</link>
		  (登録が必要) からダウンロードし、インストールする必要があります。
		  Java Runtime Environment を更新した場合、 SDK は自動的に更新されません (削除されることもあります!) 。
		  Runtime Environment をインストールや更新した場合、 SDK を確認 (し、必要に応じてダウンロード、インストール)
		  してください。
		  <xref chapter="comp-general" section="system-java">この FAQ</xref> も合わせてお読みください。
	    </p>
	  </li>
	  <li>system-java3d: [virtual package representing Java3D]</li>
	  <li>system-javaai: [virtual package representing Java Advanced Imaging]
	    <p>
		  これの実体は、 Java の 3D 画像処理の機能拡張です。
		  Apple からダウンロードし、インストールします。
		  <link url="http://docs.info.apple.com/article.html?artnum=120289">Apple のページ</link>
		  をお読みください。
	    </p>
	  </li>
	  <li>system-xfree86: [placeholder for user installed x11]</li>
	  <li>system-xfree86-shlibs: [placeholder for user installed x11 shared libraries]
	    <p>
		  これの実体は Apple X11/XDarwin で、  OS X のオプション (X11User.pkg) です。
		  二つのパッケージは、それぞれ <code>x11</code> と <code>x11-shlibs</code>
		  になります。
		  <xref chapter="comp-packages" section="cant-install-xfree">この FAQ</xref> も合わせてお読みください。
	    </p>
	  </li>
	  <li>system-xfree86-dev [placeholder for user installed x11 development tools]
	    <p>
		  これの実体は Apple X11/XDarwin SDK で、  OS X のオプション (X11SDK.pkg) です。
		  <xref chapter="comp-packages" section="cant-install-xfree">この FAQ</xref> も合わせてお読みください。
	    </p>
	  </li>
	</ul>
</answer>
</faqentry>
</chapter>
<chapter filename="usage-packages" >
    <!-- FAQs in usage-general.usage-packages are coded into VirtPackage.pm
       Do not rename, remove, or otherwise cause the URL to change. -->
<title>パッケージ使用上の問題 - 特定のパッケージ</title>
<shorttitle>使用法 (2)</shorttitle>
<faqentry name="xmms-quiet" >
<question>
<p>XMMS から音がでません。</p>
</question>
<answer>
<p>XMMS設定で &quot;eSound Output Plugin&quot; を選択しているか確認してください。
おかしなことに、デフォルトでは disk writer プラグインが選択されています。
</p>
<p>これでも音がでないか、 XMMS がサウンドカードを見つけられないといっているなら:</p>
<ul>
<li>Mac OS X で無音にしていないか確認。</li>
<li><code>esdcat /usr/libexec/config.guess</code> を実行 (あるいは他の小さいファイル)。
何か音が聞こえたら、 eSound が動作しているので、正しく設定されていれば XMMS でも動作するはずです。
何も聞こえなければ、 esd が何らかの理由で動作していません。
<code>esd &amp;</code> を起動してみて、メッセージを監視してください。</li>
<li>まだ動作しないなら、 <code>/tmp/.esd</code> と <code>/tmp/.esd/socket</code> のパーミッションを確認してください。
あなたのアカウントが所有者として設定されているはずですが、そうでなければ、 esd が動作していれば kill して、 root 権限でディレクトリを削除してください (<code>sudo rm -rf /tmp/.esd</code>)。
この後、 esd を再起動してください (root ではなく、一般ユーザーとして)。
</li>
</ul>
<p>esd は root ではなく一般ユーザーで実行されるよう設計されていることに注意してください。
通常、ファイルシステムソケット <code>/tmp/.esd/socket</code> を経由して通信します。
esd クライアントを別のマシンでネットワーク経由で実行する場合、 <code>-tcp</code> と <code>-port</code> の切替えのみが必要です。
</p>
<p>この他に、 10.1 で XMMS がクラッシュするという報告があります。
この件に関しては、まだ分析も修正もしていません。</p>
</answer>
</faqentry>
<faqentry name="nedit-window-locks" >
<question>
<p>nedit でファイルを編集していると、他のファイルを開く時にウィンドウが出ますが、反応がありません。</p>
</question>
<answer>
<p>これは最近のバージョンの <filename>nedit</filename> と <filename>lesstif</filename> の既知の問題で、他のシステムでも同様です。
File-->New でウィンドウを開き、次のファイルを開くと問題を回避できます。</p>
<p>この問題は <filename>nedit-5.3-6</filename> で <filename>lesstif</filename> から <filename>openmotif3</filename> に依存するようになり、解決されました。</p>
</answer>
</faqentry>
<faqentry name="xdarwin-start" >
<question>
<p>助けて!
XDarwin を起動してもすぐ終了しちゃう!</p>
</question>
<answer>
<p>
慌てない、慌てない。
Running X11 ドキュメントには、この問題の <link url="/doc/x11/trouble.php#immediate-quit" >問題対処法の節</link> (英語版) があります。</p>
</answer>
</faqentry>
<faqentry name="no-server" >
<question>
<p>XDarwin を起動しようとすると、このメッセージがでます
&quot;xinit: No such file or directory (errno 2): no server &quot;/usr/X11R6/bin/X&quot; in PATH&quot;。
</p>
</question>
<answer>
<p>まず、X の起動スクリプト <code>~/.xinitrc</code> が init.sh を読み込んでいるか確認してください。</p>
<p>Jaguar では、全ての <code>xfree86</code> パッケージがビルドされるが、実際には <code>xfree86-base</code> と <code>xfree86-base-shlibs</code> だけがインストールされていることがあります。
<code>xfree86-rootless</code> と <code>xfree86-rootless-shlibs</code> がインストールされているかを確認し、なければ <code>fink install xfree86-rootless</code> で解決です。</p>
<p>もしインストールされているなら、 <code>fink rebuild xfree86-rootless</code> を試してください。
これがうまくいかない場合、 <code>/usr/bin/X11R6</code> が PATH に含まれているか確認してください。</p>
</answer>
</faqentry>

<faqentry name="apple-x-delete" >
<question>
<p>Apple X11 の delete キーを、 XDarwin のように使いたいのです。</p>
</question>
<answer>
<p>XDarwin と Apple X11 で <code>delete</code> キーの挙動が違うという報告がありますが、これは X の起動ファイルに以下を追加することで調整できます:</p>
<p>
<em>.Xmodmap:</em>
</p>
<codeblock>keycode 59 = Delete</codeblock>
<p>
<em>.Xresources:</em>
</p>
<codeblock>
xterm*.deleteIsDEL: true
xterm*.backarrowKey: false
xterm*.ttyModes: erase ^?
</codeblock>
<p>
<em>.xinitrc</em>
</p>
<codeblock>xrdb -load $HOME/.Xresources
xmodmap $HOME/.Xmodmap</codeblock>
<p/>
</answer>
</faqentry>
<faqentry name="gnome-two" >
<question>
<p>GNOME 1.x から GNOME 2.x にアップグレードしたら、 <code>gnome-session</code> がウィンドウマネージャーを開かなくなりました。</p>
</question>
<answer>
<p>GNOME 1.x <code>gnome-session</code> は自動的に <code>sawfish</code> ウィンドウマネージャーを呼出していましたが、 GNOEM 2.x では <code>~/.xinitrc</code>  で <code>gnome-session</code> の前に呼び出さなくてはなりません。</p>
<codeblock>...
exec metacity &amp;
exec gnome-session</codeblock>
<p>
注記: この問題は <em>GNOME 2.4</em> では発生しません。
<filename>gnome-session</filename> を実行することでウィンドウマネージャーを呼び出すようになりました。
</p>
</answer>
</faqentry>
<faqentry name="apple-x11-no-windowbar" >
<question>
<p>Panther で Apple X11 にアップグレードしたら、ウィンドウのタイトルバーが消えました。</p>
</question>
<answer>
<p>あなたは X11 を Panther に付属する &quot;X11 1.0 - XFree86 4.3.0&quot; にアップグレードしなかったようです。
Disk 3 の X11.pkg から X11 をインストールできます。</p>
</answer>
</faqentry>
<faqentry name="apple-x11-wants-xfree86" >
<question>
	<p>X11 と Fink に問題があります。</p>
</question>
      <answer>
        <p>二つの可能性が考えられます。</p>
        <ul>
          <li>
            <em>バイナリからインストールしている場合:</em>
            <p>
	      通常、X11User を再インストールする必要があります。
	      インストーラは、稀にファイルをインストールし忘れるためです。
	      何度か再インストールする必要があるかもしれません。
	    </p>
	    <codeblock>fink list -i system-xfree86</codeblock>
	    <p>
	      とすると、<code>system-xfree86</code> と <code>system-xfree86-shlibs</code>
	      がインストールされているかを示します。
	    </p>
	    <codeblock>fink list x11</codeblock>
	    <p>
	      とすると、<code>x11-shlibs</code> と <code>x11</code>
	      の virtual package があるかを示します。
	    </p>
	    <p>
	      もし、X11User の再インストールでもダメな場合、
	      下記の<xref section="special-x11-debug">特別なデバッグ</xref> をお読みください。
	    </p>
          </li>
          <li>
            <em>ソースからインストールしている場合:</em>
	    <p>
	      通常、X11SDK を(再)インストールする必要があります。
	      これはソースからパッケージをビルドする際に<em>必ず必要</em>です。
	      Tiger DVD か、Leopard DVD の(Optional Installs/)Xcode Tools/Packages にあります。
	    </p>
            <codeblock>fink list -i system-xfree86  </codeblock>
            <p>
	      とすれば、 <code>system-xfree86</code>, <code>system-xfree86-shlibs</code>, および <code>system-xfree86-dev</code>
	      がインストールされているとわかるでしょう。
	      <code>-dev</code> パッケージがない場合、X11SDK を再インストールします。
	      Apple のインストーラは、稀にファイルを忘れるためです。
	      もし他の二つのどれかがない場合、同じ理由で X11User を再インストールします。
	      この後、
	    </p>
	    <codeblock>fink list x11</codeblock>
	    <p>
	      とすれば、<code>x11-dev</code>, <code>x11-shlibs</code>, および <code>x11</code>
	      の virtual package があることを確認できるでしょう。
	    </p>
	    <p>
	      もし、X11User と X11SDK の再インストールでもダメな場合、
	      下記の<xref section="special-x11-debug">特別なデバッグ</xref> をお読みください。
	    </p>
           </li>
        </ul>
      </answer>
    </faqentry>
    
<faqentry name="special-x11-debug">
<question>
	<p>まだ X11 と Fink の問題が解決されません。</p>
</question>
<answer>
<p>
		<xref section="apple-x11-wants-xfree86">Fink が XFree86 または X.org を要求する</xref> や
		<xref section="wants-xfree86-on-upgrade">10.2 からの X11 とアップグレード</xref> 
		のヒントで問題が解決されないか、自分の問題と異なる場合、
		X11 をきれいに削除し、代替パッケージと X11 関連パッケージを削除します:
		</p>
	<p>Leopard では、</p>
<codeblock>
sudo pkgutil --forget com.apple.pkg.X11User
sudo pkgutil --forget com.apple.pkg.X11SDKLeo
</codeblock>
	<p>を実行します。次に、10.4 と 10.5 では、</p>
<codeblock>sudo dpkg -r --force-all system-xfree86 system-xfree86-42 system-xfree86-43 \
xorg xorg-shlibs xfree86 xfree86-shilbs \
xfree86-base xfree86-base-shlibs xfree86-rootless xfree86-rootless-shlibs \
xfree86-base-threaded xfree86-base-threaded-shlibs \
xfree86-rootless-threaded xfree86-rootless-threaded-shlibs
rm -rf /Library/Receipts/X11SDK.pkg /Library/Receipts/X11User.pkg
fink selfupdate; fink index</codeblock>
        <p>
	  と実行します。
	  (最初の行は、存在しないパッケージを削除しようとしているという警告の場合もあります)
	  次に、Apple X11 (および、必要であれば X11SDK) を再インストールするか、
	  10.4 の場合、XFree86 や X.org などの他の X11 を再インストールします。
	</p>
        <p>まだ問題がある場合、</p>
<codeblock>fink-virtual-pkgs --debug</codeblock>
        <p>と実行することで何が不足しているかの情報が得られます。</p>
	<p>
	  古いバージョンの  <code>fink</code> を使っている場合、Perl スクリプト
		(Martin Costabel 作成)　で同様の情報が得られます。
	</p>
<ul>
<li>入手先: <link url="http://perso.wanadoo.fr/costabel/fink-x11-debug">http://perso.wanadoo.fr/costabel/fink-x11-debug</link>
</li>
<li>好きな場所に保存</li>
<li>ターミナルウィンドウから実行: <codeblock>perl fink-x11-debug</codeblock>
</li>
</ul>
</answer>
</faqentry>
    <faqentry name="tiger-gtk">
      <question>
        <p>
        	Tiger (OS 10.4) にアップデート後、GTK アプリを使うと必ず
        	<code>_EVP_idea_cbc</code> に関連したエラーが出ます。
        </p>
      </question>
      <answer>
        <p>
        	これは、 Tiger (10.4.1 現在) のダイナミックリンカのバグによるものです。
        	以下のようにコマンド名の前に追加することで、とりあえず起動させることができます:
		</p>
        <codeblock>env DYLD_FALLBACK_LIBRARY_PATH=: </codeblock>
        <p>例えば、 <code>gnucash</code> の場合</p>
        <codeblock>env DYLD_FALLBACK_LIBRARY_PATH=: gnucash</codeblock>
        <p>
        	この方法は、Apple X11 のアプリケーションメニューからでも、ターミナルからでも有効です。
        </p>
        <p>
        	これをグローバルに設定する (スタートアップスクリプトと <code>.xinitrc</code>、GNOME を使う場合には必須) のも良いでしょう。
        	(ログインシェルに関わらず) <code>.xinitrc</code> と、 <em>bash</em> ユーザーは <code>.profile</code> (または他のスタートアップスクリプト) に、
        </p>
        <codeblock>export DYLD_FALLBACK_LIBRARY_PATH=:</codeblock>
        <p>と記述し、<em>tcsh</em> ユーザーは、同様に <code>.cshrc</code> (または他のスタートアップスクリプト) に、</p>
        <codeblock>setenv DYLD_FALLBACK_LIBRARY_PATH :</codeblock>
        <p>と記述します。</p>
	    <p>これは <code>base-files-1.9.7-1</code> 以降では自動的に追加されます。</p>
      </answer>
    </faqentry>
  <faqentry name="yelp">
    <question><p>どの GNOME アプリケーションでも、ヘルプ機能が使えません。</p></question>
	<answer>
		<p>
		  <code>yelp</code> というパッケージをインストーする必要があります。
		  このパッケージは、暗号化を使用するため GNOME バンドルに含まれていません。
		  ヘルプシステムを使用するためだけの理由で、GNOME 全てを crypto ツリーに入れることはしないという判断がされています。
		</p>
	</answer>
  </faqentry>
</chapter>
</document>
